import { NextResponse } from 'next/server';
import type { NextRequest } from 'next/server';

/**
 * ‚úÖ –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï v11: –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å TelegramRedirectClientFixed v11
 * - –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º redirect –∫–ª–∏–µ–Ω—Ç–æ–º
 * - –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ª–æ–≥–∏–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è Telegram –∫–ª–∏–µ–Ω—Ç–æ–≤
 * - –ü–æ–ª–Ω–∞—è Next.js 15.3.3 —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å
 */
export function middleware(request: NextRequest) {
  const { pathname, searchParams } = request.nextUrl;
  const userAgent = request.headers.get('user-agent') || '';
  const referer = request.headers.get('referer') || '';
  const secFetchSite = request.headers.get('sec-fetch-site') || '';
  const xRequestedWith = request.headers.get('x-requested-with') || '';
  
  // ‚úÖ –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï v11: –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –∏ —Ç–æ—á–Ω–∞—è –ª–æ–≥–∏–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è Telegram –∫–ª–∏–µ–Ω—Ç–æ–≤
  // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ —Å TelegramRedirectClientFixed v11
  const isTelegramWebApp = 
    // –ú–µ—Ç–æ–¥ 1: –ù–∞—Å—Ç–æ—è—â–∏–µ WebApp –ø–∞—Ä–∞–º–µ—Ç—Ä—ã (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç)
    searchParams.has('tgWebAppData') ||
    searchParams.has('tgWebAppVersion') ||
    searchParams.has('tgWebAppStartParam') ||
    searchParams.has('tgWebAppPlatform') ||
    searchParams.has('tgWebAppThemeParams') ||
    // –ú–µ—Ç–æ–¥ 2: Telegram Desktop/Mobile User Agent (–û–°–ù–û–í–ù–û–ô –¥–ª—è Telegram Desktop)
    userAgent.includes('TelegramDesktop') ||
    userAgent.includes('Telegram Desktop') ||
    userAgent.includes('Telegram/') ||
    // –ú–µ—Ç–æ–¥ 3: TelegramBot (–ª—é–±–æ–π - —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –∏–ª–∏ –±–µ–∑)
    userAgent.includes('TelegramBot') ||
    // –ú–µ—Ç–æ–¥ 4: WebView —Å WebApp –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
    ((userAgent.includes('TelegramWebView') || userAgent.includes('TgWebView')) && 
     searchParams.has('tgWebAppVersion'));
  
  console.log(`[middleware] v11 –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê (—Å–æ–≤–º–µ—Å—Ç–∏–º–æ —Å TelegramRedirectClient v11) ${pathname}:`, {
    userAgent: userAgent.substring(0, 80) + (userAgent.length > 80 ? '...' : ''),
    referer: referer.substring(0, 50) + (referer.length > 50 ? '...' : ''),
    telegramDetection: {
      hasTelegramDesktop: userAgent.includes('TelegramDesktop') || userAgent.includes('Telegram Desktop'),
      hasTelegramSlash: userAgent.includes('Telegram/'),
      hasTelegramBot: userAgent.includes('TelegramBot'),
      hasWebViewPatterns: userAgent.includes('TelegramWebView') || userAgent.includes('TgWebView')
    },
    webAppParams: {
      tgWebAppData: searchParams.has('tgWebAppData'),
      tgWebAppVersion: searchParams.has('tgWebAppVersion'), 
      tgWebAppPlatform: searchParams.has('tgWebAppPlatform'),
      tgWebAppStartParam: searchParams.has('tgWebAppStartParam')
    },
    decision: isTelegramWebApp ? '‚úÖ ALLOW_ACCESS_TO_TG' : 'üîÑ REDIRECT_TO_TG_REDIRECT',
    startParam: searchParams.get('startapp') || searchParams.get('start') || 'none'
  });
  
  // ‚úÖ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ /tg –ø—É—Ç—å
  if (pathname === '/tg') {
    // ‚úÖ –ó–∞—â–∏—Ç–∞ –æ—Ç –∑–∞—Ü–∏–∫–ª–∏–≤–∞–Ω–∏—è - –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Ñ–ª–∞–≥–∏
    const preventRedirectFlags = [
      '_forceBrowser',
      '_fromTelegram', 
      '_browser',
      '_redirected',
      '_noRedirect',
      '_debug' // –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    ];
    
    const hasPreventFlag = preventRedirectFlags.some(flag => 
      searchParams.has(flag)
    );
    
    if (hasPreventFlag) {
      console.log(`[middleware] ${pathname} - –î–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à–µ–Ω –∏–∑-–∑–∞ —Ñ–ª–∞–≥–∞ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è:`, 
        preventRedirectFlags.filter(flag => searchParams.has(flag))
      );
      return NextResponse.next();
    }
    
    // ‚úÖ –ï—Å–ª–∏ –ù–ï –æ–ø—Ä–µ–¥–µ–ª–∏–ª–∏ –∫–∞–∫ Telegram - —Ä–µ–¥–∏—Ä–µ–∫—Ç–∏–º
    if (!isTelegramWebApp) {
      // ‚úÖ –°–æ–∑–¥–∞–µ–º —Ä–µ–¥–∏—Ä–µ–∫—Ç URL
      const redirectUrl = new URL('/tg-redirect', request.url);
      
      // ‚úÖ –°–æ—Ö—Ä–∞–Ω—è–µ–º –¢–û–õ–¨–ö–û –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
      const startParam = searchParams.get('startapp') || 
                        searchParams.get('start') || 
                        searchParams.get('startParam');
      
      if (startParam) {
        redirectUrl.searchParams.set('startapp', startParam);
      }
      
      // ‚úÖ –î–æ–±–∞–≤–ª—è–µ–º —Ñ–ª–∞–≥ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –∑–∞—Ü–∏–∫–ª–∏–≤–∞–Ω–∏—è
      redirectUrl.searchParams.set('_redirected', 'true');
      
      console.log(`[middleware] v11: –†–ï–î–ò–†–ï–ö–¢ ${pathname} -> /tg-redirect`, {
        reason: '–Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω Telegram –∫–ª–∏–µ–Ω—Ç',
        startParam: startParam || '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç',
        redirectUrl: redirectUrl.toString(),
        clientVersion: 'TelegramRedirectClient v11'
      });
      
      return NextResponse.redirect(redirectUrl);
    } else {
      console.log(`[middleware] v11: ${pathname} - –ü—Ä–æ–ø—É—Å–∫–∞–µ–º, –æ–±–Ω–∞—Ä—É–∂–µ–Ω Telegram –∫–ª–∏–µ–Ω—Ç (—Å–æ–≤–º–µ—Å—Ç–∏–º–æ —Å v11)`);
    }
  }
  
  // ‚úÖ –í—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
  return NextResponse.next();
}

export const config = {
  // ‚úÖ –ü—Ä–∏–º–µ–Ω—è–µ–º middleware –¢–û–õ–¨–ö–û –∫ /tg –ø—É—Ç–∏
  matcher: ['/tg']
};
