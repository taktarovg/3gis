'use client';

import { useEffect } from 'react';
import { disableVerticalSwipes, enableVerticalSwipes, isVerticalSwipesEnabled } from '@telegram-apps/sdk';

export function usePreventCollapse() {
  useEffect(() => {
    console.log('üîç Initializing collapse prevention for Telegram Mini App...');
    
    // –°–ø–æ—Å–æ–± 1: –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π API —á–µ—Ä–µ–∑ @telegram-apps/sdk v3.x
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ API –¥–ª—è –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã—Ö —Å–≤–∞–π–ø–æ–≤
      if (disableVerticalSwipes.isAvailable()) {
        disableVerticalSwipes();
        console.log('‚úÖ Modern solution: disableVerticalSwipes() from @telegram-apps/sdk applied');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
        if (!isVerticalSwipesEnabled()) {
          console.log('‚úÖ Vertical swipes successfully disabled via SDK');
          return; // –ï—Å–ª–∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –±–æ–ª—å—à–µ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω—É–∂–Ω–æ
        }
      } else {
        console.log('‚ö†Ô∏è disableVerticalSwipes() not available in current environment');
      }
    } catch (error) {
      console.warn('‚ö†Ô∏è Error with @telegram-apps/sdk disableVerticalSwipes():', error);
    }

    // –°–ø–æ—Å–æ–± 2: Fallback —á–µ—Ä–µ–∑ window.Telegram (–µ—Å–ª–∏ SDK –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª)
    try {
      if (typeof window !== 'undefined' && 
          window.Telegram && 
          window.Telegram.WebApp) {
        
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ —Å–≤–æ–π—Å—Ç–≤—É —á–µ—Ä–µ–∑ –∏–Ω–¥–µ–∫—Å–∞—Ü–∏—é
        const webApp = window.Telegram.WebApp as any;
        
        if (typeof webApp['disableVerticalSwipes'] === 'function') {
          webApp['disableVerticalSwipes']();
          console.log('‚úÖ Fallback: window.Telegram.WebApp.disableVerticalSwipes() applied');
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –µ—Å–ª–∏ —Å–≤–æ–π—Å—Ç–≤–æ –¥–æ—Å—Ç—É–ø–Ω–æ
          if (typeof webApp['isVerticalSwipesEnabled'] === 'boolean' && 
              webApp['isVerticalSwipesEnabled'] === false) {
            console.log('‚úÖ Vertical swipes successfully disabled via window.Telegram');
            return;
          }
        }
      }
    } catch (error) {
      console.warn('‚ö†Ô∏è window.Telegram fallback not available:', error);
    }

    // –°–ø–æ—Å–æ–± 3: CSS/JS —Ö–∞–∫–∏ –¥–ª—è —Å—Ç–∞—Ä—ã—Ö –≤–µ—Ä—Å–∏–π –∏–ª–∏ –µ—Å–ª–∏ API –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∏
    console.log('üîß Applying CSS/JS fallback solution for collapse prevention...');
    
    function ensureDocumentIsScrollable() {
      const isScrollable = document.documentElement.scrollHeight > window.innerHeight;
      
      if (!isScrollable) {
        console.log('üìè Document not scrollable, making it scrollable...');
        document.documentElement.style.setProperty(
          "height", 
          "calc(100vh + 1px)", 
          "important"
        );
      }
    }

    function preventCollapse(event: TouchEvent) {
      // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –∫–æ–ª–ª–∞–ø—Å –µ—Å–ª–∏ –º—ã –≤ —Å–∞–º–æ–º –≤–µ—Ä—Ö—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã
      if (window.scrollY === 0) {
        console.log('üõ°Ô∏è Preventing collapse: scrolling to position 1');
        window.scrollTo(0, 1);
      }
    }

    function preventCollapseOnScrollableElements(event: TouchEvent) {
      const target = event.target as HTMLElement;
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç–ª–µ–º–µ–Ω—Ç –∏–ª–∏ –µ–≥–æ —Ä–æ–¥–∏—Ç–µ–ª—å —Å–∫—Ä–æ–ª–ª—è—â–∏–º—Å—è
      const scrollableElement = target.closest('[data-scrollable], .overflow-y-auto, .overflow-auto, .overflow-scroll');
      
      if (scrollableElement) {
        const element = scrollableElement as HTMLElement;
        
        // –ï—Å–ª–∏ —Å–∫—Ä–æ–ª–ª—è—â–∏–π—Å—è —ç–ª–µ–º–µ–Ω—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å–∞–º–æ–º –≤–µ—Ä—Ö—É
        if (element.scrollTop === 0) {
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–≤–∞–π–ø–∞
          const touches = event.touches;
          if (touches.length > 0) {
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—á–∞–ª—å–Ω—É—é –ø–æ–∑–∏—Ü–∏—é –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤ touchmove
            (element as any)._initialTouchY = touches[0].clientY;
          }
        }
      }
    }

    function handleTouchMove(event: TouchEvent) {
      const target = event.target as HTMLElement;
      const scrollableElement = target.closest('[data-scrollable], .overflow-y-auto, .overflow-auto, .overflow-scroll');
      
      if (scrollableElement) {
        const element = scrollableElement as HTMLElement;
        const initialY = (element as any)._initialTouchY;
        
        if (initialY && element.scrollTop === 0) {
          const currentY = event.touches[0]?.clientY || event.changedTouches[0]?.clientY;
          
          // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–≤–∞–π–ø–∞–µ—Ç –≤–Ω–∏–∑ –≤ —Å–∞–º–æ–º –≤–µ—Ä—Ö—É —Å–∫—Ä–æ–ª–ª—è—â–µ–≥–æ—Å—è —ç–ª–µ–º–µ–Ω—Ç–∞
          if (currentY > initialY) {
            console.log('üõ°Ô∏è Preventing collapse on scrollable element');
            // –ù–µ–º–Ω–æ–≥–æ –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç, —á—Ç–æ–±—ã –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏—Ç—å –∫–æ–ª–ª–∞–ø—Å
            element.scrollTop = 1;
          }
        }
      }
    }

    // –ü—Ä–∏–º–µ–Ω—è–µ–º –±–∞–∑–æ–≤–æ–µ —Ä–µ—à–µ–Ω–∏–µ
    ensureDocumentIsScrollable();
    
    // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ —Å–∫—Ä–æ–ª–ª—è—â–∏–µ—Å—è —ç–ª–µ–º–µ–Ω—Ç—ã
    const addEventListeners = () => {
      // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –∫–æ–ª–ª–∞–ø—Å–∞ –Ω–∞ —É—Ä–æ–≤–Ω–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞
      document.addEventListener('touchstart', preventCollapse, { passive: false });
      
      // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Å–∫—Ä–æ–ª–ª—è—â–∏—Ö—Å—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤
      document.addEventListener('touchstart', preventCollapseOnScrollableElements, { passive: false });
      document.addEventListener('touchmove', handleTouchMove, { passive: false });
    };

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    window.addEventListener('load', ensureDocumentIsScrollable);
    window.addEventListener('resize', ensureDocumentIsScrollable);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å—Ä–∞–∑—É –µ—Å–ª–∏ DOM —É–∂–µ –≥–æ—Ç–æ–≤
    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', addEventListeners);
    } else {
      addEventListeners();
    }

    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ: —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –≤—ã—Å–æ—Ç—É –¥–ª—è body
    document.body.style.minHeight = '100vh';
    
    console.log('‚úÖ Collapse prevention setup complete');

    // Cleanup —Ñ—É–Ω–∫—Ü–∏—è
    return () => {
      console.log('üßπ Cleaning up collapse prevention...');
      
      // –£–¥–∞–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
      document.removeEventListener('touchstart', preventCollapse);
      document.removeEventListener('touchstart', preventCollapseOnScrollableElements);
      document.removeEventListener('touchmove', handleTouchMove);
      window.removeEventListener('load', ensureDocumentIsScrollable);
      window.removeEventListener('resize', ensureDocumentIsScrollable);
      
      // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∏–ª–∏
      document.documentElement.style.removeProperty('height');
      document.body.style.removeProperty('min-height');
      
      // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–µ —Å–≤–∞–π–ø—ã –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
      try {
        if (enableVerticalSwipes.isAvailable()) {
          enableVerticalSwipes();
          console.log('üîÑ Vertical swipes re-enabled on cleanup');
        }
      } catch (error) {
        // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –ø—Ä–∏ cleanup
      }
    };
  }, []);
}
