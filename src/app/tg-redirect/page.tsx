// src/app/tg-redirect/page.tsx
'use client';

import { useEffect, useState } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import Image from 'next/image';

/**
 * –°—Ç—Ä–∞–Ω–∏—Ü–∞-—Ä–µ–¥–∏—Ä–µ–∫—Ç –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è 3GIS –≤ –Ω–∞—Ç–∏–≤–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ Telegram
 * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –æ—Ç–∫—Ä—ã—Ç–∞ –ª–∏ —Å—Å—ã–ª–∫–∞ –≤ –±—Ä–∞—É–∑–µ—Ä–µ –∏–ª–∏ –≤ Telegram, –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è
 */
export default function TelegramRedirectPage() {
  const [detectionState, setDetectionState] = useState<{
    isTelegramWebApp: boolean;
    isMobile: boolean;
    isDesktop: boolean;
    userAgent: string;
    platform: string;
    isLoading: boolean;
  }>({
    isTelegramWebApp: false,
    isMobile: false,
    isDesktop: false,
    userAgent: '',
    platform: 'unknown',
    isLoading: true
  });

  const [timeLeft, setTimeLeft] = useState(5); // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–¥–∏—Ä–µ–∫—Ç —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥

  useEffect(() => {
    if (typeof window === 'undefined') return;

    const userAgent = navigator.userAgent;
    const isTelegramWebApp = !!(window.Telegram?.WebApp);
    const isMobile = /Android|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(userAgent);
    const isDesktop = !isMobile;
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–ª–∞—Ç—Ñ–æ—Ä–º—É –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π
    let platform = 'unknown';
    if (/iPhone|iPad|iPod/i.test(userAgent)) platform = 'ios';
    else if (/Android/i.test(userAgent)) platform = 'android';
    else if (/Windows/i.test(userAgent)) platform = 'windows';
    else if (/Mac/i.test(userAgent)) platform = 'mac';
    else if (/Linux/i.test(userAgent)) platform = 'linux';

    setDetectionState({
      isTelegramWebApp,
      isMobile,
      isDesktop,
      userAgent,
      platform,
      isLoading: false
    });

    // –ï—Å–ª–∏ —É–∂–µ –≤ Telegram WebApp, —Ä–µ–¥–∏—Ä–µ–∫—Ç–∏–º —Å—Ä–∞–∑—É –Ω–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    if (isTelegramWebApp) {
      window.location.href = '/tg';
      return;
    }

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–¥–∏—Ä–µ–∫—Ç —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const timer = setInterval(() => {
      setTimeLeft(prev => {
        if (prev <= 1) {
          clearInterval(timer);
          handleOpenInTelegram();
          return 0;
        }
        return prev - 1;
      });
    }, 1000);

    return () => clearInterval(timer);
  }, []);

  const handleOpenInTelegram = () => {
    const botUsername = process.env.NEXT_PUBLIC_TELEGRAM_BOT_USERNAME || 'ThreeGIS_bot';
    const telegramUrl = `https://t.me/${botUsername}/app`;
    
    // –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–∫—Ä—ã—Ç—å –≤ Telegram
    window.open(telegramUrl, '_blank');
    
    // –î–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ —Ç–∞–∫–∂–µ –ø—Ä–æ–±—É–µ–º —Å—Ö–µ–º—É tg://
    if (detectionState.isMobile) {
      setTimeout(() => {
        window.location.href = `tg://resolve?domain=${botUsername}&appname=app`;
      }, 1000);
    }
  };

  const handleManualOpen = () => {
    const botUsername = process.env.NEXT_PUBLIC_TELEGRAM_BOT_USERNAME || 'ThreeGIS_bot';
    const instructions = `
1. –û—Ç–∫—Ä–æ–π—Ç–µ Telegram
2. –ù–∞–π–¥–∏—Ç–µ –±–æ—Ç–∞ @${botUsername}
3. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ó–∞–ø—É—Å—Ç–∏—Ç—å" –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /start
4. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ" –≤ –º–µ–Ω—é
    `.trim();
    
    alert(instructions);
  };

  const handleViewInBrowser = () => {
    window.location.href = '/tg';
  };

  if (detectionState.isLoading) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 flex items-center justify-center p-4">
        <Card className="w-full max-w-md shadow-lg">
          <CardContent className="p-8 text-center">
            <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4"></div>
            <p className="text-gray-600">–û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤–∞—à–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ...</p>
          </CardContent>
        </Card>
      </div>
    );
  }

  // –ï—Å–ª–∏ —É–∂–µ –≤ Telegram WebApp
  if (detectionState.isTelegramWebApp) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-green-50 to-emerald-100 flex items-center justify-center p-4">
        <Card className="w-full max-w-md shadow-lg">
          <CardContent className="p-8 text-center">
            <div className="text-green-600 mb-4">
              <svg className="w-16 h-16 mx-auto" fill="currentColor" viewBox="0 0 20 20">
                <path fillRule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clipRule="evenodd" />
              </svg>
            </div>
            <h1 className="text-xl font-bold text-gray-900 mb-2">–û—Ç–ª–∏—á–Ω–æ!</h1>
            <p className="text-gray-600 mb-4">–í—ã —É–∂–µ –≤ Telegram. –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –≤ 3GIS...</p>
            <div className="animate-pulse text-sm text-gray-500">–ó–∞–≥—Ä—É–∑–∫–∞...</div>
          </CardContent>
        </Card>
      </div>
    );
  }

  const botUsername = process.env.NEXT_PUBLIC_TELEGRAM_BOT_USERNAME || 'ThreeGIS_bot';

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 flex items-center justify-center p-4">
      <Card className="w-full max-w-lg shadow-xl">
        <CardHeader className="text-center pb-4">
          <div className="flex items-center justify-center mb-4">
            <div className="relative w-16 h-16 mr-3">
              <Image
                src="/icons/icon-192.png"
                alt="3GIS Logo"
                width={64}
                height={64}
                className="rounded-xl"
              />
            </div>
            <div className="text-3xl font-bold text-gray-900">
              3GIS
            </div>
          </div>
          <CardTitle className="text-xl text-gray-800">
            –û—Ç–∫—Ä–æ–π—Ç–µ 3GIS –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ Telegram
          </CardTitle>
          <p className="text-gray-600 mt-2">
            –î–ª—è –ª—É—á—à–µ–≥–æ –æ–ø—ã—Ç–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∞—Ç–∏–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Telegram
          </p>
        </CardHeader>

        <CardContent className="space-y-6">
          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ */}
          <div className="bg-gray-50 rounded-lg p-4">
            <h3 className="font-semibold text-gray-800 mb-3">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ:</h3>
            <div className="flex flex-wrap gap-2">
              <Badge variant={detectionState.isMobile ? "default" : "secondary"}>
                {detectionState.isMobile ? "–ú–æ–±–∏–ª—å–Ω–æ–µ" : "–î–µ—Å–∫—Ç–æ–ø"}
              </Badge>
              <Badge variant="outline">{detectionState.platform}</Badge>
              <Badge variant={detectionState.isTelegramWebApp ? "default" : "destructive"}>
                {detectionState.isTelegramWebApp ? "Telegram WebApp" : "–ë—Ä–∞—É–∑–µ—Ä"}
              </Badge>
            </div>
          </div>

          {/* –û—Å–Ω–æ–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞ —Å —Ç–∞–π–º–µ—Ä–æ–º */}
          <div className="text-center space-y-4">
            <Button
              onClick={handleOpenInTelegram}
              size="lg"
              className="w-full bg-blue-600 hover:bg-blue-700 text-white font-semibold py-4 text-lg"
            >
              üöÄ –û—Ç–∫—Ä—ã—Ç—å –≤ Telegram
              {timeLeft > 0 && (
                <span className="ml-2 text-blue-200">({timeLeft}—Å)</span>
              )}
            </Button>
            
            {timeLeft > 0 && (
              <p className="text-sm text-gray-500">
                –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ—Ç–∫—Ä—ã—Ç–∏–µ —á–µ—Ä–µ–∑ {timeLeft} —Å–µ–∫—É–Ω–¥
              </p>
            )}
          </div>

          {/* –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
          <div className="space-y-3">
            <Button
              onClick={handleViewInBrowser}
              variant="outline"
              className="w-full"
            >
              üåê –û—Ç–∫—Ä—ã—Ç—å –≤ –±—Ä–∞—É–∑–µ—Ä–µ (–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª)
            </Button>
            
            <Button
              onClick={handleManualOpen}
              variant="ghost"
              className="w-full text-gray-600 hover:text-gray-800"
            >
              üì± –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Ä—É—á–Ω–æ–º—É –æ—Ç–∫—Ä—ã—Ç–∏—é
            </Button>
          </div>

          {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã */}
          <div className="bg-blue-50 rounded-lg p-4">
            <h3 className="font-semibold text-blue-800 mb-2">–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:</h3>
            <ol className="text-sm text-blue-700 space-y-1">
              {detectionState.isMobile ? (
                <>
                  <li>1. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–û—Ç–∫—Ä—ã—Ç—å –≤ Telegram" –≤—ã—à–µ</li>
                  <li>2. –í—ã–±–µ—Ä–∏—Ç–µ "–û—Ç–∫—Ä—ã—Ç—å –≤ Telegram" –≤–æ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–º –æ–∫–Ω–µ</li>
                  <li>3. –ù–∞–π–¥–∏—Ç–µ –±–æ—Ç–∞ @{botUsername}</li>
                  <li>4. –ù–∞–∂–º–∏—Ç–µ "–ó–∞–ø—É—Å—Ç–∏—Ç—å" –∏ –≤—ã–±–µ—Ä–∏—Ç–µ "–û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"</li>
                </>
              ) : (
                <>
                  <li>1. –û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Telegram –Ω–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–µ</li>
                  <li>2. –ù–∞–π–¥–∏—Ç–µ –±–æ—Ç–∞ @{botUsername}</li>
                  <li>3. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /start</li>
                  <li>4. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ" –≤ –º–µ–Ω—é –±–æ—Ç–∞</li>
                </>
              )}
            </ol>
          </div>

          {/* –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ Telegram */}
          <div className="bg-green-50 rounded-lg p-4">
            <h3 className="font-semibold text-green-800 mb-2">–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –≤ Telegram:</h3>
            <ul className="text-sm text-green-700 space-y-1">
              <li>‚úì –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è</li>
              <li>‚úì –ë—ã—Å—Ç—Ä—ã–π –¥–æ—Å—Ç—É–ø –∫ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º</li>
              <li>‚úì –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –∑–∞–≤–µ–¥–µ–Ω–∏—è—Ö</li>
              <li>‚úì –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–µ–ª–∏—Ç—å—Å—è —Å –¥—Ä—É–∑—å—è–º–∏</li>
              <li>‚úì –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —á–∞—Ç–∞–º–∏</li>
            </ul>
          </div>

          {/* Debug –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤ development */}
          {process.env.NODE_ENV === 'development' && (
            <details className="mt-4">
              <summary className="text-xs text-gray-500 cursor-pointer">
                Debug Info (—Ç–æ–ª—å–∫–æ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)
              </summary>
              <pre className="text-xs bg-gray-100 p-2 rounded mt-2 overflow-auto">
                {JSON.stringify(detectionState, null, 2)}
              </pre>
            </details>
          )}
        </CardContent>
      </Card>
    </div>
  );
}
