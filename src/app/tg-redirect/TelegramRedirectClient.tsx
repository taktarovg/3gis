'use client';

import { useEffect, useState, useCallback } from 'react';
import { ExternalLink, Smartphone, Download, Timer, CheckCircle } from 'lucide-react';

interface TelegramRedirectClientProps {
  startParam: string;
  botUsername: string;
  appName: string;
}

type EnvironmentType = 'browser' | 'telegram-web' | 'mini-app';

/**
 * ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô Client Component –ë–ï–ó –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö SDK —Ö—É–∫–æ–≤
 * 
 * –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø v7:
 * - ‚úÖ –£–±—Ä–∞–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ useLaunchParams (–∏—Å—Ç–æ—á–Ω–∏–∫ LaunchParamsRetrieveError)
 * - ‚úÖ –ü—Ä–æ—Å—Ç–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ä–µ–¥—ã —á–µ—Ä–µ–∑ window –æ–±—ä–µ–∫—Ç—ã
 * - ‚úÖ –£–±—Ä–∞–Ω –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª —Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤
 * - ‚úÖ –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –±–µ–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç SDK
 */
export default function TelegramRedirectClient({ 
  startParam, 
  botUsername, 
  appName 
}: TelegramRedirectClientProps) {
  const [isMounted, setIsMounted] = useState(false);
  const [userAgent, setUserAgent] = useState('');
  const [countdown, setCountdown] = useState(5);
  const [redirectAttempted, setRedirectAttempted] = useState(false);
  const [environmentType, setEnvironmentType] = useState<EnvironmentType>('browser');
  const [autoMiniAppAttempted, setAutoMiniAppAttempted] = useState(false);
  
  // ‚úÖ –ë–ï–ó–û–ü–ê–°–ù–ê–Ø —Ñ—É–Ω–∫—Ü–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å—Ä–µ–¥—ã –ë–ï–ó SDK
  const detectEnvironment = useCallback((): EnvironmentType => {
    if (typeof window === 'undefined') return 'browser';
    
    const ua = navigator.userAgent;
    const searchParams = new URLSearchParams(window.location.search);
    const pathname = window.location.pathname;
    
    // ‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π Telegram WebApp API
    const hasTelegramWebApp = !!(window as any)?.Telegram?.WebApp;
    const webApp = (window as any)?.Telegram?.WebApp;
    
    // ‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ Mini App –î–ï–ô–°–¢–í–ò–¢–ï–õ–¨–ù–û –≥–æ—Ç–æ–≤
    const isRealMiniApp = hasTelegramWebApp && 
                         webApp && 
                         webApp.initData && 
                         webApp.version &&
                         typeof webApp.ready === 'function';
    
    // ‚úÖ –í–ê–ñ–ù–û: –ù–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ redirect –ù–ï –º–æ–∂–µ—Ç –±—ã—Ç—å Mini App
    const isRedirectPage = pathname === '/tg-redirect';
    
    console.log('üîç Environment Detection (–±–µ–∑ SDK):', {
      userAgent: ua.substring(0, 60) + '...',
      pathname,
      isRedirectPage,
      hasTelegramWebApp,
      isRealMiniApp,
      webAppVersion: webApp?.version,
      webAppInitData: !!webApp?.initData
    });
    
    // ‚úÖ –ù–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞ –ù–ï –º–æ–∂–µ—Ç –±—ã—Ç—å Mini App
    if (isRedirectPage) {
      console.log('üö® Redirect page detected - –ù–ï Mini App');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º Telegram –±—Ä–∞—É–∑–µ—Ä (–Ω–æ –ù–ï Mini App)
      const isTelegramBrowser = 
        ua.includes('TelegramBot') || 
        ua.includes('Telegram/') ||
        ua.includes('tgWebApp') ||
        ua.includes('TgWebView') ||
        searchParams.has('tgWebAppData') ||
        searchParams.has('tgWebAppVersion') ||
        hasTelegramWebApp;
      
      return isTelegramBrowser ? 'telegram-web' : 'browser';
    }
    
    // ‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç–æ—è—â–∏–π Mini App (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ù–ï –Ω–∞ redirect —Å—Ç—Ä–∞–Ω–∏—Ü–µ)
    if (isRealMiniApp) {
      return 'mini-app';
    }
    
    // ‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º Telegram –±—Ä–∞—É–∑–µ—Ä (–±–µ–∑ Mini App)
    const isTelegramBrowser = 
      ua.includes('TelegramBot') || 
      ua.includes('Telegram/') ||
      ua.includes('tgWebApp') ||
      ua.includes('TgWebView') ||
      searchParams.has('tgWebAppData') ||
      searchParams.has('tgWebAppVersion') ||
      hasTelegramWebApp;
    
    if (isTelegramBrowser) {
      return 'telegram-web';
    }
    
    return 'browser';
  }, []);
  
  // ‚úÖ –ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤ –ë–ï–ó SDK
  const redirectHandlers = {
    tryOpenMiniApp: useCallback(() => {
      try {
        console.log('üéØ –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–∫—Ä—ã—Ç—å Mini App —á–µ—Ä–µ–∑ –≥–ª–æ–±–∞–ª—å–Ω—ã–π API');
        
        // –ü—ã—Ç–∞–µ–º—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≥–ª–æ–±–∞–ª—å–Ω—ã–π Telegram API
        const webApp = (window as any)?.Telegram?.WebApp;
        if (webApp && typeof webApp.openTelegramLink === 'function') {
          const miniAppUrl = `https://t.me/${botUsername}/app?startapp=${startParam}`;
          webApp.openTelegramLink(miniAppUrl);
          console.log('‚úÖ Mini App –∫–æ–º–∞–Ω–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —á–µ—Ä–µ–∑ WebApp API');
          return true;
        }
        
        // Fallback —á–µ—Ä–µ–∑ –ø—Ä—è–º—É—é —Å—Å—ã–ª–∫—É
        const miniAppUrl = `https://t.me/${botUsername}/app?startapp=${startParam}`;
        window.location.href = miniAppUrl;
        console.log('‚úÖ Fallback —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ Mini App');
        return true;
        
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è Mini App:', error);
        return false;
      }
    }, [botUsername, startParam]),

    handleTelegramRedirect: useCallback(() => {
      if (redirectAttempted) {
        console.log('‚è≠Ô∏è –†–µ–¥–∏—Ä–µ–∫—Ç —É–∂–µ –≤—ã–ø–æ–ª–Ω–µ–Ω');
        return;
      }

      console.log('üîÑ –í—ã–ø–æ–ª–Ω—è–µ–º —Ä–µ–¥–∏—Ä–µ–∫—Ç –≤ Telegram');
      setRedirectAttempted(true);

      try {
        const telegramUrl = `https://t.me/${botUsername}/app?startapp=${startParam}`;
        console.log('üöÄ –û—Ç–∫—Ä—ã–≤–∞–µ–º Telegram URL:', telegramUrl);
        
        // –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –º–µ—Ç–æ–¥—ã –æ—Ç–∫—Ä—ã—Ç–∏—è
        if (typeof window !== 'undefined') {
          // –ú–µ—Ç–æ–¥ 1: –ü—Ä—è–º–æ–µ –æ—Ç–∫—Ä—ã—Ç–∏–µ
          window.location.href = telegramUrl;
        }
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞:', error);
      }
    }, [botUsername, startParam, redirectAttempted]),

    handleManualClick: useCallback(() => {
      console.log('üëÜ –†—É—á–Ω–æ–µ –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É');
      
      if (environmentType === 'telegram-web') {
        redirectHandlers.tryOpenMiniApp();
      } else {
        redirectHandlers.handleTelegramRedirect();
      }
    }, [environmentType])
  };
  
  // ‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–ï–ó SDK
  useEffect(() => {
    setIsMounted(true);
    
    if (typeof window !== 'undefined') {
      const ua = navigator.userAgent;
      setUserAgent(ua);
      
      const envType = detectEnvironment();
      setEnvironmentType(envType);
      
      console.log('üì± TG-Redirect Client –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –ë–ï–ó SDK:', {
        userAgent: ua.substring(0, 60) + '...',
        startParam,
        environmentType: envType,
        url: window.location.href
      });
    }
  }, [detectEnvironment, startParam]);
  
  // ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ—Ç–∫—Ä—ã—Ç–∏–µ Mini App –¥–ª—è Telegram –±—Ä–∞—É–∑–µ—Ä–∞
  useEffect(() => {
    if (!isMounted || autoMiniAppAttempted) return;
    
    if (environmentType === 'telegram-web') {
      console.log('üéØ –û–±–Ω–∞—Ä—É–∂–µ–Ω Telegram –±—Ä–∞—É–∑–µ—Ä - –ø–æ–ø—ã—Ç–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ—Ç–∫—Ä—ã—Ç–∏—è Mini App');
      setAutoMiniAppAttempted(true);
      
      setTimeout(() => {
        redirectHandlers.tryOpenMiniApp();
      }, 1000);
    }
  }, [isMounted, environmentType, autoMiniAppAttempted, redirectHandlers]);
  
  // ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–¥–∏—Ä–µ–∫—Ç –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ –±—Ä–∞—É–∑–µ—Ä–∞
  useEffect(() => {
    if (!isMounted || environmentType !== 'browser') return;
    if (redirectAttempted) return;
    
    const timer = setInterval(() => {
      setCountdown(prev => {
        if (prev <= 1) {
          clearInterval(timer);
          redirectHandlers.handleTelegramRedirect();
          return 0;
        }
        return prev - 1;
      });
    }, 1000);
    
    return () => clearInterval(timer);
  }, [isMounted, environmentType, redirectAttempted, redirectHandlers]);
  
  const isIOS = userAgent.includes('iPhone') || userAgent.includes('iPad');
  const isAndroid = userAgent.includes('Android');
  const isMobile = isIOS || isAndroid;
  
  if (!isMounted) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600"></div>
      </div>
    );
  }
  
  // ‚úÖ –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: Mini App –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ë–ï–ó —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞
  if (environmentType === 'mini-app') {
    return (
      <div className="min-h-screen flex items-center justify-center p-4">
        <div className="max-w-lg w-full bg-white rounded-2xl shadow-xl p-6 text-center">
          <div className="w-20 h-20 mx-auto mb-4 bg-gradient-to-r from-green-500 to-green-600 rounded-full flex items-center justify-center shadow-lg">
            <CheckCircle className="w-10 h-10 text-white" />
          </div>
          <h1 className="text-2xl font-bold text-gray-800 mb-2">
            Mini App –∞–∫—Ç–∏–≤–µ–Ω!
          </h1>
          <p className="text-gray-600 mb-4">
            –í—ã —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ Telegram Mini App.
          </p>
          <div className="bg-green-50 border border-green-200 rounded-lg p-4">
            <div className="flex items-center justify-center text-green-700 mb-2">
              <CheckCircle className="w-5 h-5 mr-2" />
              <span className="font-medium">3GIS –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é</span>
            </div>
            <p className="text-sm text-green-600 mb-3">
              –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –∫–∞—Ç–∞–ª–æ–≥—É
            </p>
            <button 
              onClick={() => {
                console.log('üéØ –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≥–ª–∞–≤–Ω—É—é 3GIS');
                window.location.href = '/tg';
              }}
              className="w-full bg-green-500 hover:bg-green-600 text-white font-semibold py-3 px-6 rounded-lg transition-colors"
            >
              –ü–µ—Ä–µ–π—Ç–∏ –∫ 3GIS
            </button>
          </div>
          
          {/* Debug info */}
          {process.env.NODE_ENV === 'development' && (
            <div className="mt-4 pt-4 border-t">
              <details className="text-left">
                <summary className="text-xs text-gray-400 cursor-pointer">
                  üîß Debug Info
                </summary>
                <div className="mt-2 text-xs text-gray-500 space-y-1">
                  <p><strong>WebApp Available:</strong> {(window as any)?.Telegram?.WebApp ? '–¥–∞' : '–Ω–µ—Ç'}</p>
                  <p><strong>WebApp Version:</strong> {(window as any)?.Telegram?.WebApp?.version || '–Ω/–¥'}</p>
                  <p><strong>Environment:</strong> mini-app</p>
                </div>
              </details>
            </div>
          )}
        </div>
      </div>
    );
  }
  
  // ‚úÖ Telegram –±—Ä–∞—É–∑–µ—Ä
  if (environmentType === 'telegram-web') {
    return (
      <div className="min-h-screen flex items-center justify-center p-4">
        <div className="max-w-lg w-full bg-white rounded-2xl shadow-xl p-6 text-center">
          <div className="w-20 h-20 mx-auto mb-4 bg-gradient-to-r from-blue-500 to-blue-600 rounded-full flex items-center justify-center shadow-lg">
            <span className="text-2xl font-bold text-white">3GIS</span>
          </div>
          <h1 className="text-2xl font-bold text-gray-800 mb-2">
            –û—Ç–∫—Ä—ã–≤–∞–µ–º Mini App
          </h1>
          <p className="text-gray-600 mb-4">
            –í—ã –≤ Telegram! –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–∫—Ä—ã–≤–∞–µ–º 3GIS Mini App
          </p>
          
          {autoMiniAppAttempted ? (
            <div className="bg-blue-50 border border-blue-200 rounded-lg p-4 mb-4">
              <div className="flex items-center justify-center text-blue-700 mb-2">
                <CheckCircle className="w-5 h-5 mr-2" />
                <span className="font-medium">–ö–æ–º–∞–Ω–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞</span>
              </div>
              <p className="text-sm text-blue-600">
                Mini App –¥–æ–ª–∂–µ–Ω –æ—Ç–∫—Ä—ã—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
              </p>
            </div>
          ) : (
            <div className="bg-green-50 border border-green-200 rounded-lg p-4 mb-4">
              <div className="flex items-center justify-center text-green-700 mb-2">
                <Timer className="w-5 h-5 mr-2 animate-spin" />
                <span className="font-medium">–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –∑–∞–ø—É—Å–∫—É</span>
              </div>
            </div>
          )}

          <button
            onClick={redirectHandlers.handleManualClick}
            className="w-full inline-flex items-center justify-center bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 text-white font-semibold py-4 px-6 rounded-xl transition-all duration-200 shadow-lg hover:shadow-xl transform hover:scale-105"
          >
            <ExternalLink className="w-5 h-5 mr-2" />
            –û—Ç–∫—Ä—ã—Ç—å Mini App –≤—Ä—É—á–Ω—É—é
          </button>
        </div>
      </div>
    );
  }
  
  // ‚úÖ –û–±—ã—á–Ω—ã–π –±—Ä–∞—É–∑–µ—Ä
  return (
    <div className="min-h-screen flex items-center justify-center p-4">
      <div className="max-w-lg w-full bg-white rounded-2xl shadow-xl p-6 text-center">
        <div className="mb-6">
          <div className="w-20 h-20 mx-auto mb-4 bg-gradient-to-r from-blue-500 to-blue-600 rounded-full flex items-center justify-center shadow-lg">
            <span className="text-2xl font-bold text-white">3GIS</span>
          </div>
          <h1 className="text-2xl font-bold text-gray-800 mb-2">
            3GIS Mini App
          </h1>
          <p className="text-gray-600">
            –†—É—Å—Å–∫–æ—è–∑—ã—á–Ω—ã–π —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π –≤ –°–®–ê
          </p>
          {startParam && (
            <div className="mt-3 px-3 py-1 bg-blue-100 text-blue-700 rounded-full text-sm">
              –ü–∞—Ä–∞–º–µ—Ç—Ä: {startParam}
            </div>
          )}
        </div>

        {/* –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–¥–∏—Ä–µ–∫—Ç –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä */}
        {!redirectAttempted && countdown > 0 && (
          <div className="mb-6 p-4 bg-gradient-to-r from-green-50 to-blue-50 border border-green-200 rounded-xl">
            <div className="flex items-center justify-center mb-2">
              <Timer className="w-5 h-5 text-green-600 mr-2" />
              <span className="font-semibold text-green-800">
                –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
              </span>
            </div>
            <div className="text-2xl font-bold text-green-700 mb-2">
              {countdown}
            </div>
            <p className="text-sm text-green-600 mb-3">
              –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram —á–µ—Ä–µ–∑ {countdown} —Å–µ–∫...
            </p>
            <button 
              onClick={redirectHandlers.handleManualClick}
              className="text-sm text-blue-600 hover:text-blue-800 underline transition-colors"
            >
              –ü–µ—Ä–µ–π—Ç–∏ —Å–µ–π—á–∞—Å
            </button>
          </div>
        )}

        <div className="mb-6">
          <button
            onClick={redirectHandlers.handleManualClick}
            disabled={redirectAttempted}
            className="w-full inline-flex items-center justify-center bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 disabled:from-gray-400 disabled:to-gray-500 text-white font-semibold py-4 px-6 rounded-xl transition-all duration-200 shadow-lg hover:shadow-xl transform hover:scale-105 disabled:transform-none disabled:cursor-not-allowed"
          >
            <ExternalLink className="w-5 h-5 mr-2" />
            {redirectAttempted ? '–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ' : '–û—Ç–∫—Ä—ã—Ç—å –≤ Telegram'}
          </button>
        </div>

        {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤ */}
        {isMobile ? (
          <div className="bg-green-50 rounded-lg p-4 mb-4">
            <h3 className="font-semibold text-green-800 mb-2 flex items-center">
              <Smartphone className="w-4 h-4 mr-2" />
              {isIOS ? '–î–ª—è iPhone/iPad:' : '–î–ª—è Android:'}
            </h3>
            <ol className="text-sm text-green-700 text-left space-y-1">
              <li>1. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–û—Ç–∫—Ä—ã—Ç—å –≤ Telegram" –≤—ã—à–µ</li>
              <li>2. –í –¥–∏–∞–ª–æ–≥–µ –≤—ã–±–µ—Ä–∏—Ç–µ "–û—Ç–∫—Ä—ã—Ç—å –≤ Telegram"</li>
              <li>3. –ï—Å–ª–∏ Telegram –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∏–∑ {isIOS ? 'App Store' : 'Google Play'}</li>
              <li>4. Mini App –æ—Ç–∫—Ä–æ–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏</li>
            </ol>
          </div>
        ) : (
          <div className="bg-gray-50 rounded-lg p-4 mb-4">
            <h3 className="font-semibold text-gray-800 mb-2">
              –ù–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–µ:
            </h3>
            <ol className="text-sm text-gray-600 text-left space-y-1">
              <li>1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Telegram Desktop</li>
              <li>2. –ù–∞–∂–º–∏—Ç–µ "–û—Ç–∫—Ä—ã—Ç—å –≤ Telegram"</li>
              <li>3. –ù–∞–π–¥–∏—Ç–µ @{botUsername} –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ Mini App</li>
              <li>4. –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–µ–±-–≤–µ—Ä—Å–∏—é Telegram</li>
            </ol>
          </div>
        )}

        {/* –°—Å—ã–ª–∫–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è Telegram */}
        <div className="border-t pt-4">
          <p className="text-sm text-gray-500 mb-3">
            –ù–µ—Ç Telegram?
          </p>
          <a
            href={isIOS 
              ? "https://apps.apple.com/app/telegram-messenger/id686449807"
              : isAndroid 
              ? "https://play.google.com/store/apps/details?id=org.telegram.messenger"
              : "https://desktop.telegram.org/"
            }
            target="_blank"
            rel="noopener noreferrer"
            className="inline-flex items-center text-blue-500 hover:text-blue-600 font-medium transition-colors"
          >
            <Download className="w-4 h-4 mr-1" />
            –°–∫–∞—á–∞—Ç—å Telegram
          </a>
        </div>
      </div>
    </div>
  );
}
