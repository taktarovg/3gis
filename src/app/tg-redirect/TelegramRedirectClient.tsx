'use client';

import { useEffect, useState, useCallback } from 'react';
import { ExternalLink, Smartphone, Download, Timer, AlertCircle, CheckCircle } from 'lucide-react';
import { useLaunchParams } from '@telegram-apps/sdk-react';
import { openTelegramLink, openLink } from '@telegram-apps/sdk';

interface TelegramRedirectClientProps {
  startParam: string;
  botUsername: string;
  appName: string;
}

/**
 * ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù Client Component —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ–º Telegram —Å—Ä–µ–¥—ã
 * 
 * –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø v3:
 * - –î–æ–±–∞–≤–ª–µ–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ @telegram-apps/sdk –¥–ª—è openTelegramLink
 * - –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Ä–∞–∑–ª–∏—á–µ–Ω–∏–µ "–≤–µ–±-–±—Ä–∞—É–∑–µ—Ä –≤ Telegram" vs "Mini App –≤ Telegram"
 * - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ—Ç–∫—Ä—ã—Ç–∏–µ Mini App –ø—Ä–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–∏ Telegram —Å—Ä–µ–¥—ã
 * - –£–ª—É—á—à–µ–Ω–Ω–∞—è –ª–æ–≥–∏–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å—Ä–µ–¥—ã
 * - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –æ—à–∏–±–∫–∞ viewport –≤ metadata
 */
export default function TelegramRedirectClient({ 
  startParam, 
  botUsername, 
  appName 
}: TelegramRedirectClientProps) {
  const [isMounted, setIsMounted] = useState(false);
  const [userAgent, setUserAgent] = useState('');
  const [countdown, setCountdown] = useState(5);
  const [redirectAttempted, setRedirectAttempted] = useState(false);
  const [environmentType, setEnvironmentType] = useState<'browser' | 'telegram-web' | 'mini-app'>('browser');
  const [autoMiniAppAttempted, setAutoMiniAppAttempted] = useState(false);
  
  // ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û–ï –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ useLaunchParams —Å SSR —Ñ–ª–∞–≥–æ–º
  const launchParams = useLaunchParams(true); // SSR —Ñ–ª–∞–≥ –¥–ª—è Next.js 15
  
  // ‚úÖ –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å—Ä–µ–¥—ã
  const detectEnvironment = useCallback(() => {
    if (typeof window === 'undefined') return 'browser';
    
    const ua = navigator.userAgent;
    const searchParams = new URLSearchParams(window.location.search);
    const hasWebAppData = searchParams.has('tgWebAppData') || searchParams.has('tgWebAppVersion');
    
    // ‚úÖ 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ù–ê–°–¢–û–Ø–©–ò–ô Mini App (—Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º WebApp API)
    const hasTelegramWebApp = !!(window as any)?.Telegram?.WebApp;
    const webApp = (window as any)?.Telegram?.WebApp;
    const isWebAppInitialized = webApp && webApp.initData && webApp.version;
    
    // ‚úÖ 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º launch params –∏–∑ SDK
    const hasLaunchParams = launchParams && launchParams.tgWebAppData;
    
    // ‚úÖ 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º Telegram –æ–∫—Ä—É–∂–µ–Ω–∏–µ (–±—Ä–∞—É–∑–µ—Ä –≤–Ω—É—Ç—Ä–∏ Telegram)
    const isTelegramBrowser = 
      ua.includes('TelegramBot') || 
      ua.includes('Telegram/') ||
      ua.includes('tgWebApp') ||
      hasWebAppData ||
      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–ª—è Telegram –±—Ä–∞—É–∑–µ—Ä–∞
      ua.includes('TgWebView') ||
      window.location.href.includes('tgWebAppPlatform=');
    
    console.log('üîç Environment Detection:', {
      userAgent: ua.substring(0, 60) + '...',
      hasTelegramWebApp,
      isWebAppInitialized,
      hasLaunchParams,
      isTelegramBrowser,
      hasWebAppData,
      webAppVersion: webApp?.version,
      webAppInitData: webApp?.initData ? '–µ—Å—Ç—å' : '–Ω–µ—Ç',
      launchParams: launchParams ? '–µ—Å—Ç—å' : '–Ω–µ—Ç'
    });
    
    // ‚úÖ –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Å—Ä–µ–¥—ã
    if (isWebAppInitialized && hasLaunchParams) {
      return 'mini-app'; // –ù–ê–°–¢–û–Ø–©–ò–ô Mini App
    } else if (isTelegramBrowser || hasTelegramWebApp) {
      return 'telegram-web'; // –í–µ–±-–±—Ä–∞—É–∑–µ—Ä –≤–Ω—É—Ç—Ä–∏ Telegram
    } else {
      return 'browser'; // –û–±—ã—á–Ω—ã–π –±—Ä–∞—É–∑–µ—Ä
    }
  }, [launchParams]);
  
  // ‚úÖ –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π —Å—Ä–µ–¥—ã
  useEffect(() => {
    setIsMounted(true);
    
    if (typeof window !== 'undefined') {
      const ua = navigator.userAgent;
      setUserAgent(ua);
      
      const envType = detectEnvironment();
      setEnvironmentType(envType);
      
      console.log('üì± TG-Redirect Client –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω:', {
        userAgent: ua.substring(0, 60) + '...',
        startParam,
        environmentType: envType,
        launchParams: launchParams ? '–¥–æ—Å—Ç—É–ø–Ω—ã' : '–Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã',
        url: window.location.href
      });
    }
  }, [detectEnvironment, launchParams, startParam]);
  
  // ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ—Ç–∫—Ä—ã—Ç–∏–µ Mini App –µ—Å–ª–∏ –º—ã –≤ Telegram –±—Ä–∞—É–∑–µ—Ä–µ
  useEffect(() => {
    if (!isMounted || autoMiniAppAttempted) return;
    
    if (environmentType === 'telegram-web') {
      console.log('üéØ –û–±–Ω–∞—Ä—É–∂–µ–Ω Telegram –±—Ä–∞—É–∑–µ—Ä - –ø–æ–ø—ã—Ç–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ—Ç–∫—Ä—ã—Ç–∏—è Mini App');
      setAutoMiniAppAttempted(true);
      
      // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ª—É—á—à–µ–≥–æ UX
      setTimeout(() => {
        tryOpenMiniApp();
      }, 1000);
    }
  }, [isMounted, environmentType, autoMiniAppAttempted]);
  
  // ‚úÖ –§—É–Ω–∫—Ü–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ—Ç–∫—Ä—ã—Ç–∏—è Mini App —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º @telegram-apps/sdk
  const tryOpenMiniApp = useCallback(async () => {
    try {
      const actualStartParam = startParam || launchParams?.tgWebAppStartParam || '';
      const miniAppUrl = actualStartParam 
        ? `https://t.me/${botUsername}/${appName}?startapp=${encodeURIComponent(actualStartParam)}`
        : `https://t.me/${botUsername}/${appName}`;
      
      console.log('üöÄ –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —á–µ—Ä–µ–∑ @telegram-apps/sdk');
      
      // ‚úÖ –ü–æ–ø—ã—Ç–∫–∞ 1: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ openTelegramLink –∏–∑ SDK
      if (openTelegramLink.isAvailable()) {
        openTelegramLink(miniAppUrl);
        console.log('‚úÖ openTelegramLink (SDK) –≤—ã–ø–æ–ª–Ω–µ–Ω:', miniAppUrl);
        return;
      }
      
      // ‚úÖ –ü–æ–ø—ã—Ç–∫–∞ 2: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ openLink –∏–∑ SDK
      if (openLink.isAvailable()) {
        openLink(miniAppUrl);
        console.log('‚úÖ openLink (SDK) –≤—ã–ø–æ–ª–Ω–µ–Ω:', miniAppUrl);
        return;
      }
      
      // ‚úÖ –ü–æ–ø—ã—Ç–∫–∞ 3: Fallback –Ω–∞ Telegram WebApp API
      const webApp = (window as any)?.Telegram?.WebApp;
      if (webApp) {
        console.log('üîÑ Fallback –Ω–∞ Telegram WebApp API');
        
        if (webApp.openTelegramLink) {
          webApp.openTelegramLink(miniAppUrl);
          console.log('‚úÖ webApp.openTelegramLink –≤—ã–ø–æ–ª–Ω–µ–Ω:', miniAppUrl);
          return;
        }
        
        if (webApp.openLink) {
          webApp.openLink(miniAppUrl);
          console.log('‚úÖ webApp.openLink –≤—ã–ø–æ–ª–Ω–µ–Ω:', miniAppUrl);
          return;
        }
      }
      
      // ‚úÖ –ü–æ–ø—ã—Ç–∫–∞ 4: –ü—Ä—è–º–æ–π —Ä–µ–¥–∏—Ä–µ–∫—Ç
      console.log('üîÑ Fallback –Ω–∞ –ø—Ä—è–º–æ–π —Ä–µ–¥–∏—Ä–µ–∫—Ç');
      window.location.href = miniAppUrl;
      console.log('‚úÖ –ü—Ä—è–º–æ–π —Ä–µ–¥–∏—Ä–µ–∫—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω:', miniAppUrl);
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ—Ç–∫—Ä—ã—Ç–∏—è Mini App:', error);
      // Fallback –Ω–∞ –æ–±—ã—á–Ω—ã–π —Ä–µ–¥–∏—Ä–µ–∫—Ç
      handleTelegramRedirect();
    }
  }, [startParam, launchParams, botUsername, appName]);
  
  // ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–¥–∏—Ä–µ–∫—Ç –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ –±—Ä–∞—É–∑–µ—Ä–∞
  useEffect(() => {
    if (!isMounted || environmentType !== 'browser') return;
    if (redirectAttempted) return;
    
    // ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–¥–∏—Ä–µ–∫—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ –±—Ä–∞—É–∑–µ—Ä–∞
    const timer = setInterval(() => {
      setCountdown(prev => {
        if (prev <= 1) {
          clearInterval(timer);
          handleTelegramRedirect();
          return 0;
        }
        return prev - 1;
      });
    }, 1000);
    
    return () => clearInterval(timer);
  }, [isMounted, environmentType, redirectAttempted]);
  
  // ‚úÖ –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞
  const handleTelegramRedirect = useCallback(() => {
    if (redirectAttempted) return;
    
    setRedirectAttempted(true);
    
    // ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º startParam –∏–∑ props –∏–ª–∏ launchParams
    const actualStartParam = startParam || launchParams?.tgWebAppStartParam || '';
    
    const telegramUrl = actualStartParam 
      ? `https://t.me/${botUsername}/${appName}?startapp=${encodeURIComponent(actualStartParam)}`
      : `https://t.me/${botUsername}/${appName}`;
    
    console.log('üöÄ –í—ã–ø–æ–ª–Ω—è–µ–º —Ä–µ–¥–∏—Ä–µ–∫—Ç –≤ Telegram:', {
      url: telegramUrl,
      startParam: actualStartParam,
      method: 'window.location.href',
      environmentType
    });
    
    try {
      // ‚úÖ –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –¥–ª—è –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
      window.location.href = telegramUrl;
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞:', error);
      // Fallback - –æ—Ç–∫—Ä—ã–≤–∞–µ–º –≤ –Ω–æ–≤–æ–º –æ–∫–Ω–µ
      window.open(telegramUrl, '_blank', 'noopener,noreferrer');
    }
  }, [redirectAttempted, startParam, launchParams, botUsername, appName, environmentType]);
  
  // ‚úÖ –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –º–∞–Ω—É–∞–ª—å–Ω–æ–≥–æ –∫–ª–∏–∫–∞
  const handleManualClick = useCallback(() => {
    console.log('üìä –ú–∞–Ω—É–∞–ª—å–Ω—ã–π –∫–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞');
    if (environmentType === 'telegram-web') {
      tryOpenMiniApp();
    } else {
      handleTelegramRedirect();
    }
  }, [environmentType, tryOpenMiniApp, handleTelegramRedirect]);
  
  // ‚úÖ –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
  const isIOS = userAgent.includes('iPhone') || userAgent.includes('iPad');
  const isAndroid = userAgent.includes('Android');
  const isMobile = isIOS || isAndroid;
  
  // ‚úÖ Loading state
  if (!isMounted) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600"></div>
      </div>
    );
  }
  
  // ‚úÖ –ï—Å–ª–∏ —ç—Ç–æ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π Mini App - –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é
  if (environmentType === 'mini-app') {
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É Mini App
    useEffect(() => {
      const timer = setTimeout(() => {
        window.location.href = '/tg';
      }, 2000);
      
      return () => clearTimeout(timer);
    }, []);
    
    return (
      <div className="min-h-screen flex items-center justify-center p-4">
        <div className="max-w-lg w-full bg-white rounded-2xl shadow-xl p-6 text-center">
          <div className="w-20 h-20 mx-auto mb-4 bg-gradient-to-r from-green-500 to-green-600 rounded-full flex items-center justify-center shadow-lg">
            <CheckCircle className="w-10 h-10 text-white" />
          </div>
          <h1 className="text-2xl font-bold text-gray-800 mb-2">
            Mini App –∞–∫—Ç–∏–≤–µ–Ω!
          </h1>
          <p className="text-gray-600 mb-4">
            –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É...
          </p>
          <div className="animate-pulse bg-green-50 border border-green-200 rounded-lg p-4">
            <div className="flex items-center justify-center text-green-700 mb-2">
              <Timer className="w-5 h-5 mr-2" />
              <span className="font-medium">–ó–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞</span>
            </div>
            <p className="text-sm text-green-600">
              –ï—Å–ª–∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ –ø—Ä–æ–∏–∑–æ—à–ª–æ, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ
            </p>
            <button 
              onClick={() => window.location.href = '/tg'}
              className="mt-3 text-sm text-blue-600 hover:text-blue-800 underline transition-colors"
            >
              –ü–µ—Ä–µ–π—Ç–∏ –∫ Mini App
            </button>
          </div>
        </div>
      </div>
    );
  }
  
  // ‚úÖ –ï—Å–ª–∏ –≤ Telegram –±—Ä–∞—É–∑–µ—Ä–µ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ—Ç–∫—Ä—ã—Ç–∏—è
  if (environmentType === 'telegram-web') {
    return (
      <div className="min-h-screen flex items-center justify-center p-4">
        <div className="max-w-lg w-full bg-white rounded-2xl shadow-xl p-6 text-center">
          <div className="w-20 h-20 mx-auto mb-4 bg-gradient-to-r from-blue-500 to-blue-600 rounded-full flex items-center justify-center shadow-lg">
            <span className="text-2xl font-bold text-white">3GIS</span>
          </div>
          <h1 className="text-2xl font-bold text-gray-800 mb-2">
            –û—Ç–∫—Ä—ã–≤–∞–µ–º Mini App
          </h1>
          <p className="text-gray-600 mb-4">
            –í—ã –≤ Telegram! –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–∫—Ä—ã–≤–∞–µ–º 3GIS Mini App
          </p>
          
          {autoMiniAppAttempted ? (
            <div className="bg-blue-50 border border-blue-200 rounded-lg p-4 mb-4">
              <div className="flex items-center justify-center text-blue-700 mb-2">
                <CheckCircle className="w-5 h-5 mr-2" />
                <span className="font-medium">–ö–æ–º–∞–Ω–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞</span>
              </div>
              <p className="text-sm text-blue-600 mb-3">
                Mini App –¥–æ–ª–∂–µ–Ω –æ—Ç–∫—Ä—ã—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
              </p>
              {startParam && (
                <div className="mt-2 px-3 py-1 bg-blue-100 text-blue-700 rounded-full text-xs">
                  –ü–∞—Ä–∞–º–µ—Ç—Ä: {startParam}
                </div>
              )}
            </div>
          ) : (
            <div className="bg-green-50 border border-green-200 rounded-lg p-4 mb-4">
              <div className="flex items-center justify-center text-green-700 mb-2">
                <Timer className="w-5 h-5 mr-2 animate-spin" />
                <span className="font-medium">–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –∑–∞–ø—É—Å–∫—É</span>
              </div>
              <p className="text-sm text-green-600">
                –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Mini App...
              </p>
            </div>
          )}

          {/* –ú–∞–Ω—É–∞–ª—å–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –Ω–∞ —Å–ª—É—á–∞–π –ø—Ä–æ–±–ª–µ–º */}
          <div className="mb-4">
            <button
              onClick={handleManualClick}
              className="w-full inline-flex items-center justify-center bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 text-white font-semibold py-4 px-6 rounded-xl transition-all duration-200 shadow-lg hover:shadow-xl transform hover:scale-105"
            >
              <ExternalLink className="w-5 h-5 mr-2" />
              –û—Ç–∫—Ä—ã—Ç—å Mini App –≤—Ä—É—á–Ω—É—é
            </button>
          </div>

          {/* –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã */}
          <div className="bg-gray-50 rounded-lg p-4 mb-4">
            <h3 className="font-semibold text-gray-800 mb-3">
              –ï—Å–ª–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ—Ç–∫—Ä—ã—Ç–∏–µ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–æ:
            </h3>
            <div className="text-sm text-gray-600 space-y-2">
              <div>1. –ù–∞–π–¥–∏—Ç–µ @{botUsername} –≤ –ø–æ–∏—Å–∫–µ Telegram</div>
              <div>2. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ó–∞–ø—É—Å—Ç–∏—Ç—å" –∏–ª–∏ "Menu"</div>
              <div>3. –í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Mini App</div>
            </div>
          </div>

          {/* ‚úÖ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è (—Ç–æ–ª—å–∫–æ –≤ development) */}
          {process.env.NODE_ENV === 'development' && (
            <div className="mt-6 pt-4 border-t">
              <details className="text-left">
                <summary className="text-xs text-gray-400 cursor-pointer hover:text-gray-600">
                  üîß –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
                </summary>
                <div className="mt-2 text-xs text-gray-500 space-y-1">
                  <p><strong>Environment Type:</strong> {environmentType}</p>
                  <p><strong>Auto Mini App Attempted:</strong> {autoMiniAppAttempted ? '–¥–∞' : '–Ω–µ—Ç'}</p>
                  <p><strong>User Agent:</strong> {userAgent.substring(0, 60)}...</p>
                  <p><strong>Start Param:</strong> {startParam || '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}</p>
                  <p><strong>Launch Params:</strong> {launchParams ? '–¥–æ—Å—Ç—É–ø–Ω—ã' : '–Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã'}</p>
                  <p><strong>Telegram WebApp:</strong> {(window as any)?.Telegram?.WebApp ? '–¥–æ—Å—Ç—É–ø–µ–Ω' : '–Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω'}</p>
                  <p><strong>openTelegramLink SDK:</strong> {openTelegramLink.isAvailable() ? '–¥–æ—Å—Ç—É–ø–µ–Ω' : '–Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω'}</p>
                  <p><strong>openLink SDK:</strong> {openLink.isAvailable() ? '–¥–æ—Å—Ç—É–ø–µ–Ω' : '–Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω'}</p>
                </div>
              </details>
            </div>
          )}
        </div>
      </div>
    );
  }
  
  // ‚úÖ –û–±—ã—á–Ω—ã–π –±—Ä–∞—É–∑–µ—Ä - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞
  return (
    <div className="min-h-screen flex items-center justify-center p-4">
      <div className="max-w-lg w-full bg-white rounded-2xl shadow-xl p-6 text-center">
        {/* –õ–æ–≥–æ –∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="mb-6">
          <div className="w-20 h-20 mx-auto mb-4 bg-gradient-to-r from-blue-500 to-blue-600 rounded-full flex items-center justify-center shadow-lg">
            <span className="text-2xl font-bold text-white">3GIS</span>
          </div>
          <h1 className="text-2xl font-bold text-gray-800 mb-2">
            3GIS Mini App
          </h1>
          <p className="text-gray-600">
            –†—É—Å—Å–∫–æ—è–∑—ã—á–Ω—ã–π —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π –≤ –°–®–ê
          </p>
          {startParam && (
            <div className="mt-3 px-3 py-1 bg-blue-100 text-blue-700 rounded-full text-sm">
              –ü–∞—Ä–∞–º–µ—Ç—Ä: {startParam}
            </div>
          )}
        </div>

        {/* ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–¥–∏—Ä–µ–∫—Ç –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä */}
        {!redirectAttempted && countdown > 0 && (
          <div className="mb-6 p-4 bg-gradient-to-r from-green-50 to-blue-50 border border-green-200 rounded-xl">
            <div className="flex items-center justify-center mb-2">
              <Timer className="w-5 h-5 text-green-600 mr-2" />
              <span className="font-semibold text-green-800">
                –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
              </span>
            </div>
            <div className="text-2xl font-bold text-green-700 mb-2">
              {countdown}
            </div>
            <p className="text-sm text-green-600 mb-3">
              –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram —á–µ—Ä–µ–∑ {countdown} —Å–µ–∫...
            </p>
            <button 
              onClick={handleManualClick}
              className="text-sm text-blue-600 hover:text-blue-800 underline transition-colors"
            >
              –ü–µ—Ä–µ–π—Ç–∏ —Å–µ–π—á–∞—Å
            </button>
          </div>
        )}

        {/* ‚úÖ –ì–ª–∞–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞ - –±–µ–∑–æ–ø–∞—Å–Ω—ã–π event handler */}
        <div className="mb-6">
          <button
            onClick={handleManualClick}
            disabled={redirectAttempted}
            className="w-full inline-flex items-center justify-center bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 disabled:from-gray-400 disabled:to-gray-500 text-white font-semibold py-4 px-6 rounded-xl transition-all duration-200 shadow-lg hover:shadow-xl transform hover:scale-105 disabled:transform-none disabled:cursor-not-allowed"
          >
            <ExternalLink className="w-5 h-5 mr-2" />
            {redirectAttempted ? '–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ' : '–û—Ç–∫—Ä—ã—Ç—å –≤ Telegram'}
          </button>
        </div>

        {/* –°—Ç–∞—Ç—É—Å —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞ */}
        {redirectAttempted && (
          <div className="mb-4 p-3 bg-yellow-50 border border-yellow-200 rounded-lg">
            <div className="flex items-center justify-center text-yellow-700 mb-1">
              <AlertCircle className="w-4 h-4 mr-2" />
              <span className="text-sm font-medium">
                –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ
              </span>
            </div>
            <p className="text-xs text-yellow-600">
              –ï—Å–ª–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ—Ö–æ–¥ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑
            </p>
          </div>
        )}

        {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤ */}
        {isMobile ? (
          <div className="bg-green-50 rounded-lg p-4 mb-4">
            <h3 className="font-semibold text-green-800 mb-2 flex items-center">
              <Smartphone className="w-4 h-4 mr-2" />
              {isIOS ? '–î–ª—è iPhone/iPad:' : '–î–ª—è Android:'}
            </h3>
            <ol className="text-sm text-green-700 text-left space-y-1">
              <li>1. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–û—Ç–∫—Ä—ã—Ç—å –≤ Telegram" –≤—ã—à–µ</li>
              <li>2. –í –¥–∏–∞–ª–æ–≥–µ –≤—ã–±–µ—Ä–∏—Ç–µ "–û—Ç–∫—Ä—ã—Ç—å –≤ Telegram"</li>
              <li>3. –ï—Å–ª–∏ Telegram –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∏–∑ {isIOS ? 'App Store' : 'Google Play'}</li>
              <li>4. Mini App –æ—Ç–∫—Ä–æ–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏</li>
            </ol>
          </div>
        ) : (
          <div className="bg-gray-50 rounded-lg p-4 mb-4">
            <h3 className="font-semibold text-gray-800 mb-2">
              –ù–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–µ:
            </h3>
            <ol className="text-sm text-gray-600 text-left space-y-1">
              <li>1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Telegram Desktop</li>
              <li>2. –ù–∞–∂–º–∏—Ç–µ "–û—Ç–∫—Ä—ã—Ç—å –≤ Telegram"</li>
              <li>3. –ù–∞–π–¥–∏—Ç–µ @{botUsername} –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ Mini App</li>
              <li>4. –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–µ–±-–≤–µ—Ä—Å–∏—é Telegram</li>
            </ol>
          </div>
        )}

        {/* –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã */}
        <div className="bg-blue-50 rounded-lg p-4 mb-4">
          <h3 className="font-semibold text-blue-800 mb-3">
            –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã:
          </h3>
          <div className="text-sm text-blue-700 space-y-2">
            <div className="flex items-center justify-between p-2 bg-white rounded border">
              <span>üì± –ü—Ä—è–º–∞—è —Å—Å—ã–ª–∫–∞:</span>
              <a 
                href={`https://t.me/${botUsername}`}
                className="text-blue-600 hover:text-blue-800 font-medium transition-colors"
                target="_blank" 
                rel="noopener noreferrer"
              >
                t.me/{botUsername}
              </a>
            </div>
            <div className="flex items-center justify-between p-2 bg-white rounded border">
              <span>üåê –í–µ–±-–≤–µ—Ä—Å–∏—è:</span>
              <a 
                href={`https://web.telegram.org/k/#@${botUsername}`}
                className="text-blue-600 hover:text-blue-800 font-medium transition-colors"
                target="_blank" 
                rel="noopener noreferrer"
              >
                web.telegram.org
              </a>
            </div>
          </div>
        </div>

        {/* –°—Å—ã–ª–∫–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è Telegram */}
        <div className="border-t pt-4">
          <p className="text-sm text-gray-500 mb-3">
            –ù–µ—Ç Telegram?
          </p>
          <a
            href={isIOS 
              ? "https://apps.apple.com/app/telegram-messenger/id686449807"
              : isAndroid 
              ? "https://play.google.com/store/apps/details?id=org.telegram.messenger"
              : "https://desktop.telegram.org/"
            }
            target="_blank"
            rel="noopener noreferrer"
            className="inline-flex items-center text-blue-500 hover:text-blue-600 font-medium transition-colors"
          >
            <Download className="w-4 h-4 mr-1" />
            –°–∫–∞—á–∞—Ç—å Telegram
          </a>
        </div>

        {/* ‚úÖ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è (—Ç–æ–ª—å–∫–æ –≤ development) */}
        {process.env.NODE_ENV === 'development' && (
          <div className="mt-6 pt-4 border-t">
            <details className="text-left">
              <summary className="text-xs text-gray-400 cursor-pointer hover:text-gray-600">
                üîß –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
              </summary>
              <div className="mt-2 text-xs text-gray-500 space-y-1">
                <p><strong>Environment Type:</strong> {environmentType}</p>
                <p><strong>User Agent:</strong> {userAgent.substring(0, 60)}...</p>
                <p><strong>Start Param (props):</strong> {startParam || '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}</p>
                <p><strong>Launch Params (SDK):</strong> {launchParams ? '–¥–æ—Å—Ç—É–ø–Ω—ã' : '–Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã'}</p>
                <p><strong>Redirect Attempted:</strong> {redirectAttempted ? '–¥–∞' : '–Ω–µ—Ç'}</p>
                <p><strong>Countdown:</strong> {countdown}</p>
                <p><strong>Telegram WebApp:</strong> {(window as any)?.Telegram?.WebApp ? '–¥–æ—Å—Ç—É–ø–µ–Ω' : '–Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω'}</p>
              </div>
            </details>
          </div>
        )}

        {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <div className="mt-6 pt-4 border-t">
          <p className="text-xs text-gray-400">
            3GIS —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ Mini App –≤–Ω—É—Ç—Ä–∏ Telegram –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.
            {startParam && (
              <span className="block mt-1">
                –≠—Ç–∞ —Å—Å—ã–ª–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –ø—Ä—è–º–æ–≥–æ –ø–µ—Ä–µ—Ö–æ–¥–∞.
              </span>
            )}
          </p>
        </div>
      </div>
    </div>
  );
}
