'use client';

import { useEffect, useState, useCallback } from 'react';
import { ExternalLink, Smartphone, Download, Timer, CheckCircle } from 'lucide-react';

interface TelegramRedirectClientProps {
  startParam: string;
  botUsername: string;
  appName: string;
}

type EnvironmentType = 'browser' | 'telegram-web' | 'mini-app';

/**
 * ‚úÖ –ü–û–õ–ù–û–°–¢–¨–Æ –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô Client Component v10 (—Å–æ–≤–º–µ—Å—Ç–∏–º–æ —Å TelegramProvider v10)
 * 
 * –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø v10:
 * - ‚ùå –ù–ï –∏—Å–ø–æ–ª—å–∑—É–µ–º @telegram-apps/sdk-react –≤–æ–æ–±—â–µ (–∏—Å—Ç–æ—á–Ω–∏–∫ –æ—à–∏–±–æ–∫ SSR)
 * - ‚úÖ –¢–æ–ª—å–∫–æ –Ω–∞—Ç–∏–≤–Ω—ã–µ window.Telegram API (—Å–æ–≤–º–µ—Å—Ç–∏–º–æ —Å TelegramProvider v10)
 * - ‚úÖ –£—Å—Ç—Ä–∞–Ω–µ–Ω—ã Server/Client –æ—à–∏–±–∫–∏ event handlers –≤ props
 * - ‚úÖ redirect —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ù–ò–ö–û–ì–î–ê –Ω–µ Mini App (–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ)
 * - ‚úÖ –ü–æ–ª–Ω–∞—è Next.js 15.3.3 —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å
 */
export default function TelegramRedirectClientFixed({ 
  startParam, 
  botUsername, 
  appName 
}: TelegramRedirectClientProps) {
  const [isMounted, setIsMounted] = useState(false);
  const [userAgent, setUserAgent] = useState('');
  const [countdown, setCountdown] = useState(5);
  const [redirectAttempted, setRedirectAttempted] = useState(false);
  const [environmentType, setEnvironmentType] = useState<EnvironmentType>('browser');
  const [autoMiniAppAttempted, setAutoMiniAppAttempted] = useState(false);
  
  // ‚úÖ –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ä–µ–¥—ã –ë–ï–ó SDK (–ò–°–ü–†–ê–í–õ–ï–ù–ê v9)
  const detectEnvironment = useCallback((): EnvironmentType => {
    if (typeof window === 'undefined') return 'browser';
    
    const ua = navigator.userAgent;
    const pathname = window.location.pathname;
    
    // ‚úÖ –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï v9: –ù–∞ redirect —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ù–ò–ö–û–ì–î–ê –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å Mini App
    const isRedirectPage = pathname === '/tg-redirect' || pathname.includes('tg-redirect');
    if (isRedirectPage) {
      console.log('üö® REDIRECT PAGE - –ù–ò–ö–û–ì–î–ê –ù–ï Mini App (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ v9)');
      
      // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ Telegram –±—Ä–∞—É–∑–µ—Ä (–ù–ï Mini App –Ω–∞ redirect —Å—Ç—Ä–∞–Ω–∏—Ü–µ)
      const telegramWebApp = (window as any)?.Telegram?.WebApp;
      const hasValidWebApp = telegramWebApp && 
                            telegramWebApp.version && 
                            typeof telegramWebApp.ready === 'function';
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º Telegram Desktop/Mobile –ø–æ User Agent
      const isTelegramDesktop = ua.includes('TelegramDesktop') ||
                               ua.includes('Telegram Desktop') ||
                               ua.includes('Telegram/') ||
                               ua.includes('TelegramBot');
      
      console.log('üîç Redirect Environment Detection v10 (—Å–æ–≤–º–µ—Å—Ç–∏–º–æ —Å TelegramProvider v10):', {
        userAgent: ua.substring(0, 60) + '...',
        pathname,
        hasValidWebApp,
        isTelegramDesktop,
        webAppVersion: telegramWebApp?.version,
        isRedirectPage: true // ‚úÖ –í–°–ï–ì–î–ê true –¥–ª—è redirect —Å—Ç—Ä–∞–Ω–∏—Ü—ã
      });
      
      // –ù–∞ —Ä–µ–¥–∏—Ä–µ–∫—Ç —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ Telegram –±—Ä–∞—É–∑–µ—Ä (–ù–ï Mini App)
      const isTelegramBrowser = hasValidWebApp || 
        isTelegramDesktop ||
        ua.includes('tgWebApp');
      
      return isTelegramBrowser ? 'telegram-web' : 'browser';
    }
    
    // ‚úÖ –î–ª—è –ù–ï-redirect —Å—Ç—Ä–∞–Ω–∏—Ü –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç–æ—è—â–∏–π Mini App (–ù–ï –í–´–ü–û–õ–ù–ò–¢–°–Ø –Ω–∞ redirect —Å—Ç—Ä–∞–Ω–∏—Ü–µ)
    const telegramWebApp = (window as any)?.Telegram?.WebApp;
    const hasValidWebApp = telegramWebApp && 
                          telegramWebApp.version && 
                          typeof telegramWebApp.ready === 'function';
    
    if (hasValidWebApp && telegramWebApp.initDataUnsafe) {
      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ —ç—Ç–æ –†–ï–ê–õ–¨–ù–´–ô Mini App, –∞ –Ω–µ –ø—Ä–æ—Å—Ç–æ –±—Ä–∞—É–∑–µ—Ä –≤ Telegram
      const hasUserData = telegramWebApp.initDataUnsafe.user ||
                         telegramWebApp.initData;
      
      if (hasUserData) {
        console.log('‚úÖ –ù–∞—Å—Ç–æ—è—â–∏–π Mini App –æ–±–Ω–∞—Ä—É–∂–µ–Ω (–ù–ï redirect —Å—Ç—Ä–∞–Ω–∏—Ü–∞)');
        return 'mini-app';
      }
    }
    
    // ‚úÖ Telegram –±—Ä–∞—É–∑–µ—Ä (–±–µ–∑ Mini App —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏)
    const isTelegramDesktop = ua.includes('TelegramDesktop') ||
                             ua.includes('Telegram Desktop') ||
                             ua.includes('Telegram/');
    
    const isTelegramBrowser = hasValidWebApp ||
      isTelegramDesktop ||
      ua.includes('TelegramBot') || 
      ua.includes('tgWebApp');
    
    if (isTelegramBrowser) {
      console.log('üì± Telegram –±—Ä–∞—É–∑–µ—Ä (–ù–ï Mini App)');
      return 'telegram-web';
    }
    
    console.log('üåê –û–±—ã—á–Ω—ã–π –±—Ä–∞—É–∑–µ—Ä');
    return 'browser';
  }, []);
  
  const tryOpenMiniApp = useCallback(() => {
    try {
      console.log('üéØ –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–∫—Ä—ã—Ç—å Mini App (v10 - —Å–æ–≤–º–µ—Å—Ç–∏–º–æ —Å TelegramProvider)');
      
      // –ú–µ—Ç–æ–¥ 1: –ß–µ—Ä–µ–∑ –≥–ª–æ–±–∞–ª—å–Ω—ã–π Telegram API
      const webApp = (window as any)?.Telegram?.WebApp;
      if (webApp && typeof webApp.openTelegramLink === 'function') {
        const miniAppUrl = `https://t.me/${botUsername}/${appName}?startapp=${startParam}`;
        webApp.openTelegramLink(miniAppUrl);
        console.log('‚úÖ Mini App –∫–æ–º–∞–Ω–¥–∞ —á–µ—Ä–µ–∑ WebApp API');
        return true;
      }
      
      // –ú–µ—Ç–æ–¥ 2: –ü—Ä—è–º–æ–π —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ Mini App
      const miniAppUrl = `https://t.me/${botUsername}/${appName}?startapp=${startParam}`;
      window.location.href = miniAppUrl;
      console.log('‚úÖ –ü—Ä—è–º–æ–π —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ Mini App');
      return true;
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è Mini App:', error);
      return false;
    }
  }, [botUsername, appName, startParam]);

  const handleTelegramRedirect = useCallback(() => {
    if (redirectAttempted) {
      console.log('‚è≠Ô∏è –†–µ–¥–∏—Ä–µ–∫—Ç —É–∂–µ –≤—ã–ø–æ–ª–Ω–µ–Ω');
      return;
    }

    console.log('üîÑ –í—ã–ø–æ–ª–Ω—è–µ–º —Ä–µ–¥–∏—Ä–µ–∫—Ç –≤ Telegram (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ v9)');
    setRedirectAttempted(true);

    try {
      const telegramUrl = `https://t.me/${botUsername}/${appName}?startapp=${startParam}`;
      console.log('üöÄ –û—Ç–∫—Ä—ã–≤–∞–µ–º Telegram URL:', telegramUrl);
      
      // –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –º–µ—Ç–æ–¥—ã
      if (typeof window !== 'undefined') {
        window.location.href = telegramUrl;
      }
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞:', error);
    }
  }, [botUsername, appName, startParam, redirectAttempted]);

  const handleManualClick = useCallback(() => {
    console.log('üëÜ –†—É—á–Ω–æ–µ –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É (v9)');
    
    if (environmentType === 'telegram-web') {
      tryOpenMiniApp();
    } else {
      handleTelegramRedirect();
    }
  }, [environmentType, tryOpenMiniApp, handleTelegramRedirect]);
  
  // ‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–ï–ó SDK
  useEffect(() => {
    setIsMounted(true);
    
    if (typeof window !== 'undefined') {
      const ua = navigator.userAgent;
      setUserAgent(ua);
      
      const envType = detectEnvironment();
      setEnvironmentType(envType);
      
      console.log('üì± TG-Redirect Client v9 –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –ë–ï–ó SDK:', {
        userAgent: ua.substring(0, 60) + '...',
        startParam,
        environmentType: envType,
        url: window.location.href,
        isRedirectPage: window.location.pathname.includes('tg-redirect')
      });
    }
  }, [detectEnvironment, startParam]);
  
  // ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ—Ç–∫—Ä—ã—Ç–∏–µ Mini App –¥–ª—è Telegram –±—Ä–∞—É–∑–µ—Ä–∞
  useEffect(() => {
    if (!isMounted || autoMiniAppAttempted) return;
    
    if (environmentType === 'telegram-web') {
      console.log('üéØ Telegram –±—Ä–∞—É–∑–µ—Ä - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ—Ç–∫—Ä—ã—Ç–∏–µ Mini App (v9)');
      setAutoMiniAppAttempted(true);
      
      setTimeout(() => {
        tryOpenMiniApp();
      }, 1000);
    }
  }, [isMounted, environmentType, autoMiniAppAttempted, tryOpenMiniApp]);
  
  // ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–¥–∏—Ä–µ–∫—Ç –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ –±—Ä–∞—É–∑–µ—Ä–∞  
  useEffect(() => {
    if (!isMounted || environmentType !== 'browser') return;
    if (redirectAttempted) return;
    
    const timer = setInterval(() => {
      setCountdown(prev => {
        if (prev <= 1) {
          clearInterval(timer);
          handleTelegramRedirect();
          return 0;
        }
        return prev - 1;
      });
    }, 1000);
    
    return () => clearInterval(timer);
  }, [isMounted, environmentType, redirectAttempted, handleTelegramRedirect]);
  
  const isIOS = userAgent.includes('iPhone') || userAgent.includes('iPad');
  const isAndroid = userAgent.includes('Android');
  const isMobile = isIOS || isAndroid;
  
  if (!isMounted) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600"></div>
      </div>
    );
  }
  
  // ‚úÖ –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï v9: redirect —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ù–ò–ö–û–ì–î–ê –Ω–µ –¥–æ–ª–∂–Ω–∞ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å Mini App —Å–ª—É—á–∞–π
  // –≠—Ç–æ—Ç –±–ª–æ–∫ –ù–ï –î–û–õ–ñ–ï–ù –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –Ω–∞ redirect —Å—Ç—Ä–∞–Ω–∏—Ü–µ
  if (environmentType === 'mini-app') {
    console.error('üö® –û–®–ò–ë–ö–ê v9: Mini App –æ–±–Ω–∞—Ä—É–∂–µ–Ω –Ω–∞ redirect —Å—Ç—Ä–∞–Ω–∏—Ü–µ - —ç—Ç–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ!');
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–≤–æ–¥–∏–º –≤ telegram-web —Ä–µ–∂–∏–º
    setEnvironmentType('telegram-web');
    return null;
  }
  
  // ‚úÖ Telegram –±—Ä–∞—É–∑–µ—Ä (–æ—Å–Ω–æ–≤–Ω–æ–π —Å–ª—É—á–∞–π –¥–ª—è redirect —Å—Ç—Ä–∞–Ω–∏—Ü—ã)
  if (environmentType === 'telegram-web') {
    return (
      <div className="min-h-screen flex items-center justify-center p-4">
        <div className="max-w-lg w-full bg-white rounded-2xl shadow-xl p-6 text-center">
          <div className="w-20 h-20 mx-auto mb-4 bg-gradient-to-r from-blue-500 to-blue-600 rounded-full flex items-center justify-center shadow-lg">
            <span className="text-2xl font-bold text-white">3GIS</span>
          </div>
          <h1 className="text-2xl font-bold text-gray-800 mb-2">
            –û—Ç–∫—Ä—ã–≤–∞–µ–º Mini App
          </h1>
          <p className="text-gray-600 mb-4">
            –í—ã –≤ Telegram! –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–∫—Ä—ã–≤–∞–µ–º 3GIS Mini App
          </p>
          
          {autoMiniAppAttempted ? (
            <div className="bg-blue-50 border border-blue-200 rounded-lg p-4 mb-4">
              <div className="flex items-center justify-center text-blue-700 mb-2">
                <CheckCircle className="w-5 h-5 mr-2" />
                <span className="font-medium">–ö–æ–º–∞–Ω–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞</span>
              </div>
              <p className="text-sm text-blue-600">
                Mini App –¥–æ–ª–∂–µ–Ω –æ—Ç–∫—Ä—ã—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
              </p>
            </div>
          ) : (
            <div className="bg-green-50 border border-green-200 rounded-lg p-4 mb-4">
              <div className="flex items-center justify-center text-green-700 mb-2">
                <Timer className="w-5 h-5 mr-2 animate-spin" />
                <span className="font-medium">–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –∑–∞–ø—É—Å–∫—É</span>
              </div>
            </div>
          )}

          <button
            onClick={handleManualClick}
            className="w-full inline-flex items-center justify-center bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 text-white font-semibold py-4 px-6 rounded-xl transition-all duration-200 shadow-lg hover:shadow-xl transform hover:scale-105"
          >
            <ExternalLink className="w-5 h-5 mr-2" />
            –û—Ç–∫—Ä—ã—Ç—å Mini App –≤—Ä—É—á–Ω—É—é
          </button>
          
          {/* Debug info –¥–ª—è development */}
          {process.env.NODE_ENV === 'development' && (
            <div className="mt-4 pt-4 border-t">
              <details className="text-left">
                <summary className="text-xs text-gray-400 cursor-pointer">
                  üîß Debug Info v9 (–ò–°–ü–†–ê–í–õ–ï–ù–û)
                </summary>
                <div className="mt-2 text-xs text-gray-500 space-y-1">
                  <p><strong>Environment:</strong> {environmentType}</p>
                  <p><strong>WebApp Available:</strong> {(window as any)?.Telegram?.WebApp ? '–¥–∞' : '–Ω–µ—Ç'}</p>
                  <p><strong>WebApp Version:</strong> {(window as any)?.Telegram?.WebApp?.version || '–Ω/–¥'}</p>
                  <p><strong>Is Redirect Page:</strong> –¥–∞ (–ø—Ä–∞–≤–∏–ª—å–Ω–æ)</p>
                  <p><strong>User Agent:</strong> {userAgent.substring(0, 40)}...</p>
                </div>
              </details>
            </div>
          )}
        </div>
      </div>
    );
  }
  
  // ‚úÖ –û–±—ã—á–Ω—ã–π –±—Ä–∞—É–∑–µ—Ä
  return (
    <div className="min-h-screen flex items-center justify-center p-4">
      <div className="max-w-lg w-full bg-white rounded-2xl shadow-xl p-6 text-center">
        <div className="mb-6">
          <div className="w-20 h-20 mx-auto mb-4 bg-gradient-to-r from-blue-500 to-blue-600 rounded-full flex items-center justify-center shadow-lg">
            <span className="text-2xl font-bold text-white">3GIS</span>
          </div>
          <h1 className="text-2xl font-bold text-gray-800 mb-2">
            3GIS Mini App
          </h1>
          <p className="text-gray-600">
            –†—É—Å—Å–∫–æ—è–∑—ã—á–Ω—ã–π —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π –≤ –°–®–ê
          </p>
          {startParam && (
            <div className="mt-3 px-3 py-1 bg-blue-100 text-blue-700 rounded-full text-sm">
              –ü–∞—Ä–∞–º–µ—Ç—Ä: {startParam}
            </div>
          )}
        </div>

        {/* –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–¥–∏—Ä–µ–∫—Ç –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä */}
        {!redirectAttempted && countdown > 0 && (
          <div className="mb-6 p-4 bg-gradient-to-r from-green-50 to-blue-50 border border-green-200 rounded-xl">
            <div className="flex items-center justify-center mb-2">
              <Timer className="w-5 h-5 text-green-600 mr-2" />
              <span className="font-semibold text-green-800">
                –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
              </span>
            </div>
            <div className="text-2xl font-bold text-green-700 mb-2">
              {countdown}
            </div>
            <p className="text-sm text-green-600 mb-3">
              –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram —á–µ—Ä–µ–∑ {countdown} —Å–µ–∫...
            </p>
            <button 
              onClick={handleManualClick}
              className="text-sm text-blue-600 hover:text-blue-800 underline transition-colors"
            >
              –ü–µ—Ä–µ–π—Ç–∏ —Å–µ–π—á–∞—Å
            </button>
          </div>
        )}

        <div className="mb-6">
          <button
            onClick={handleManualClick}
            disabled={redirectAttempted}
            className="w-full inline-flex items-center justify-center bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 disabled:from-gray-400 disabled:to-gray-500 text-white font-semibold py-4 px-6 rounded-xl transition-all duration-200 shadow-lg hover:shadow-xl transform hover:scale-105 disabled:transform-none disabled:cursor-not-allowed"
          >
            <ExternalLink className="w-5 h-5 mr-2" />
            {redirectAttempted ? '–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ' : '–û—Ç–∫—Ä—ã—Ç—å –≤ Telegram'}
          </button>
        </div>

        {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤ */}
        {isMobile ? (
          <div className="bg-green-50 rounded-lg p-4 mb-4">
            <h3 className="font-semibold text-green-800 mb-2 flex items-center">
              <Smartphone className="w-4 h-4 mr-2" />
              {isIOS ? '–î–ª—è iPhone/iPad:' : '–î–ª—è Android:'}
            </h3>
            <ol className="text-sm text-green-700 text-left space-y-1">
              <li>1. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–û—Ç–∫—Ä—ã—Ç—å –≤ Telegram" –≤—ã—à–µ</li>
              <li>2. –í –¥–∏–∞–ª–æ–≥–µ –≤—ã–±–µ—Ä–∏—Ç–µ "–û—Ç–∫—Ä—ã—Ç—å –≤ Telegram"</li>
              <li>3. –ï—Å–ª–∏ Telegram –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∏–∑ {isIOS ? 'App Store' : 'Google Play'}</li>
              <li>4. Mini App –æ—Ç–∫—Ä–æ–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏</li>
            </ol>
          </div>
        ) : (
          <div className="bg-gray-50 rounded-lg p-4 mb-4">
            <h3 className="font-semibold text-gray-800 mb-2">
              –ù–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–µ:
            </h3>
            <ol className="text-sm text-gray-600 text-left space-y-1">
              <li>1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Telegram Desktop</li>
              <li>2. –ù–∞–∂–º–∏—Ç–µ "–û—Ç–∫—Ä—ã—Ç—å –≤ Telegram"</li>
              <li>3. –ù–∞–π–¥–∏—Ç–µ @{botUsername} –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ Mini App</li>
              <li>4. –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–µ–±-–≤–µ—Ä—Å–∏—é Telegram</li>
            </ol>
          </div>
        )}

        {/* –°—Å—ã–ª–∫–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è Telegram */}
        <div className="border-t pt-4">
          <p className="text-sm text-gray-500 mb-3">
            –ù–µ—Ç Telegram?
          </p>
          <a
            href={isIOS 
              ? "https://apps.apple.com/app/telegram-messenger/id686449807"
              : isAndroid 
              ? "https://play.google.com/store/apps/details?id=org.telegram.messenger"
              : "https://desktop.telegram.org/"
            }
            target="_blank"
            rel="noopener noreferrer"
            className="inline-flex items-center text-blue-500 hover:text-blue-600 font-medium transition-colors"
          >
            <Download className="w-4 h-4 mr-1" />
            –°–∫–∞—á–∞—Ç—å Telegram
          </a>
        </div>
      </div>
    </div>
  );
}
