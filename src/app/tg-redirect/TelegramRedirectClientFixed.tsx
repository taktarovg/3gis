'use client';

import { useEffect, useState, useCallback } from 'react';
import { ExternalLink, Smartphone, Download, Timer, CheckCircle, AlertTriangle } from 'lucide-react';

interface TelegramRedirectClientProps {
  startParam: string;
  botUsername: string;
  appName: string;
  detectedAs?: string;      // –ù–æ–≤—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä –æ—Ç middleware v15
  wasRedirected?: boolean;  // –§–ª–∞–≥ —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—ã–ª –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω
}

type EnvironmentType = 'browser' | 'telegram-web' | 'mini-app';

/**
 * ‚úÖ –û–ë–ù–û–í–õ–ï–ù–ù–´–ô Client Component v15 –¥–ª—è Hybrid Middleware v15
 * 
 * –ù–û–í–´–ï –í–û–ó–ú–û–ñ–ù–û–°–¢–ò v15:
 * - ‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –Ω–æ–≤—ã—Ö —Ñ–ª–∞–≥–æ–≤ –æ—Ç middleware v15 (detectedAs, wasRedirected)
 * - ‚úÖ –£–ª—É—á—à–µ–Ω–Ω–∞—è –ª–æ–≥–∏–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å—Ä–µ–¥—ã —Å —É—á–µ—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–Ω–æ–π –¥–µ—Ç–µ–∫—Ü–∏–∏
 * - ‚úÖ –ë–æ–ª–µ–µ —Ç–æ—á–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ JavaScript –¥–µ—Ç–µ–∫—Ü–∏–∏
 * - ‚úÖ –ü–æ–ª–Ω–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å 3-—É—Ä–æ–≤–Ω–µ–≤–æ–π —Å–∏—Å—Ç–µ–º–æ–π –¥–µ—Ç–µ–∫—Ü–∏–∏
 */
export default function TelegramRedirectClientFixed({ 
  startParam, 
  botUsername, 
  appName,
  detectedAs = 'unknown',
  wasRedirected = false
}: TelegramRedirectClientProps) {
  const [isMounted, setIsMounted] = useState(false);
  const [userAgent, setUserAgent] = useState('');
  const [countdown, setCountdown] = useState(5);
  const [redirectAttempted, setRedirectAttempted] = useState(false);
  const [environmentType, setEnvironmentType] = useState<EnvironmentType>('browser');
  const [autoMiniAppAttempted, setAutoMiniAppAttempted] = useState(false);
  const [detectionMethod, setDetectionMethod] = useState('server');
  
  // ‚úÖ –û–ë–ù–û–í–õ–ï–ù–ù–ê–Ø –ª–æ–≥–∏–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å—Ä–µ–¥—ã —Å —É—á–µ—Ç–æ–º middleware v15
  const detectEnvironment = useCallback((): EnvironmentType => {
    if (typeof window === 'undefined') return 'browser';
    
    const ua = navigator.userAgent;
    const pathname = window.location.pathname;
    const telegramWebApp = (window as any)?.Telegram?.WebApp;
    
    console.log('üîç v15: –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ä–µ–¥—ã –¥–ª—è redirect —Å—Ç—Ä–∞–Ω–∏—Ü—ã:', {
      pathname,
      detectedAs,
      wasRedirected,
      userAgent: ua.substring(0, 60) + '...',
      hasWebApp: !!telegramWebApp,
      webAppVersion: telegramWebApp?.version,
      hasInitData: !!telegramWebApp?.initData,
      middlewareDetection: detectedAs
    });
    
    // ‚úÖ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç —Å–µ—Ä–≤–µ—Ä–Ω–æ–π –¥–µ—Ç–µ–∫—Ü–∏–∏ –æ—Ç middleware v15
    if (detectedAs === 'browser') {
      console.log('üìç v15: Server detection: –æ–±—ã—á–Ω—ã–π –±—Ä–∞—É–∑–µ—Ä (100% —Ç–æ—á–Ω–æ—Å—Ç—å)');
      setDetectionMethod('server-browser');
      return 'browser';
    }
    
    if (detectedAs === 'telegram') {
      console.log('üìç v15: Server detection: Telegram –∫–ª–∏–µ–Ω—Ç (100% —Ç–æ—á–Ω–æ—Å—Ç—å)');
      setDetectionMethod('server-telegram');
      return 'telegram-web';
    }
    
    // ‚úÖ –ö–ª–∏–µ–Ω—Ç—Å–∫–∞—è –¥–µ—Ç–µ–∫—Ü–∏—è –¥–ª—è –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤
    const isRedirectPage = pathname === '/tg-redirect' || pathname.includes('tg-redirect');
    if (isRedirectPage) {
      console.log('üìç v15: Redirect —Å—Ç—Ä–∞–Ω–∏—Ü–∞ - –≤—ã–ø–æ–ª–Ω—è–µ–º –∫–ª–∏–µ–Ω—Ç—Å–∫—É—é –¥–µ—Ç–µ–∫—Ü–∏—é');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Telegram WebApp –æ–±—ä–µ–∫—Ç–∞
      const hasTelegramWebApp = telegramWebApp && 
                               telegramWebApp.version && 
                               typeof telegramWebApp.ready === 'function';
      
      if (hasTelegramWebApp) {
        console.log('‚úÖ v15: Telegram WebApp API –æ–±–Ω–∞—Ä—É–∂–µ–Ω');
        setDetectionMethod('client-webapp');
        return 'telegram-web';
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º User-Agent –ø–∞—Ç—Ç–µ—Ä–Ω—ã (–∫–ª–∏–µ–Ω—Ç—Å–∫–∞—è –¥–µ—Ç–µ–∫—Ü–∏—è)
      const isTelegramUA = ua.includes('TelegramDesktop') ||
                          ua.includes('Telegram Desktop') ||
                          ua.includes('Telegram/') ||
                          ua.includes('TelegramBot') ||
                          ua.includes('Telegram-Android');
      
      if (isTelegramUA) {
        console.log('‚úÖ v15: Telegram –∫–ª–∏–µ–Ω—Ç –ø–æ User-Agent');
        setDetectionMethod('client-useragent');
        return 'telegram-web';
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Telegram-—Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤
      const hasTelegramProxy = (window as any)?.TelegramWebviewProxy ||
                              (window as any)?.TelegramWebviewProxyProto ||
                              (window as any)?.TelegramWebview;
      
      if (hasTelegramProxy) {
        console.log('‚úÖ v15: Telegram Webview –æ–±–Ω–∞—Ä—É–∂–µ–Ω');
        setDetectionMethod('client-proxy');
        return 'telegram-web';
      }
      
      console.log('üåê v15: –ö–ª–∏–µ–Ω—Ç—Å–∫–∞—è –¥–µ—Ç–µ–∫—Ü–∏—è - –æ–±—ã—á–Ω—ã–π –±—Ä–∞—É–∑–µ—Ä');
      setDetectionMethod('client-browser');
      return 'browser';
    }
    
    // ‚úÖ –î–ª—è –ù–ï-redirect —Å—Ç—Ä–∞–Ω–∏—Ü –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç–æ—è—â–∏–π Mini App
    const webAppForMiniCheck = (window as any)?.Telegram?.WebApp;
    const hasValidWebApp = webAppForMiniCheck && 
                          webAppForMiniCheck.version && 
                          typeof webAppForMiniCheck.ready === 'function';
    
    if (hasValidWebApp && webAppForMiniCheck.initDataUnsafe) {
      const hasUserData = webAppForMiniCheck.initDataUnsafe.user ||
                         webAppForMiniCheck.initData;
      
      if (hasUserData) {
        console.log('‚úÖ v15: –ù–∞—Å—Ç–æ—è—â–∏–π Mini App –æ–±–Ω–∞—Ä—É–∂–µ–Ω');
        setDetectionMethod('client-miniapp');
        return 'mini-app';
      }
    }
    
    // ‚úÖ Fallback –ª–æ–≥–∏–∫–∞
    const hasTelegramWebAppForFallback = telegramWebApp && 
                                        telegramWebApp.version && 
                                        typeof telegramWebApp.ready === 'function';
                                        
    const isTelegramBrowser = hasTelegramWebAppForFallback ||
      ua.includes('TelegramDesktop') ||
      ua.includes('Telegram/') ||
      ua.includes('TelegramBot');
    
    if (isTelegramBrowser) {
      console.log('üì± v15: Telegram –±—Ä–∞—É–∑–µ—Ä (fallback)');
      setDetectionMethod('client-fallback-telegram');
      return 'telegram-web';
    }
    
    console.log('üåê v15: –û–±—ã—á–Ω—ã–π –±—Ä–∞—É–∑–µ—Ä (fallback)');
    setDetectionMethod('client-fallback-browser');
    return 'browser';
  }, [detectedAs, wasRedirected]);
  
  const tryOpenMiniApp = useCallback(() => {
    try {
      console.log('üéØ v15: –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–∫—Ä—ã—Ç—å Mini App –∏–∑ Telegram –∫–ª–∏–µ–Ω—Ç–∞');
      
      const webApp = (window as any)?.Telegram?.WebApp;
      const miniAppUrl = `https://t.me/${botUsername}/${appName}?startapp=${startParam}`;
      
      console.log('üîó v15: –û—Ç–∫—Ä—ã–≤–∞–µ–º Mini App URL:', miniAppUrl);
      
      // –ú–µ—Ç–æ–¥ 1: –ß–µ—Ä–µ–∑ Telegram WebApp API (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç)
      if (webApp && typeof webApp.openTelegramLink === 'function') {
        console.log('üéØ v15: –ò—Å–ø–æ–ª—å–∑—É–µ–º WebApp.openTelegramLink()');
        webApp.openTelegramLink(miniAppUrl);
        return true;
      }
      
      // –ú–µ—Ç–æ–¥ 2: –ß–µ—Ä–µ–∑ WebApp.openLink (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞)
      if (webApp && typeof webApp.openLink === 'function') {
        console.log('üéØ v15: –ò—Å–ø–æ–ª—å–∑—É–µ–º WebApp.openLink()');
        webApp.openLink(miniAppUrl);
        return true;
      }
      
      // –ú–µ—Ç–æ–¥ 3: –ü—Ä—è–º–æ–π —Ä–µ–¥–∏—Ä–µ–∫—Ç (fallback)
      console.log('üéØ v15: –ü—Ä—è–º–æ–π —Ä–µ–¥–∏—Ä–µ–∫—Ç window.location.href');
      window.location.href = miniAppUrl;
      return true;
      
    } catch (error) {
      console.error('‚ùå v15: –û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è Mini App:', error);
      return false;
    }
  }, [botUsername, appName, startParam]);

  const handleTelegramRedirect = useCallback(() => {
    if (redirectAttempted) {
      console.log('‚è≠Ô∏è v15: –†–µ–¥–∏—Ä–µ–∫—Ç —É–∂–µ –≤—ã–ø–æ–ª–Ω–µ–Ω');
      return;
    }

    console.log('üîÑ v15: –í—ã–ø–æ–ª–Ω—è–µ–º —Ä–µ–¥–∏—Ä–µ–∫—Ç –≤ Telegram');
    setRedirectAttempted(true);

    try {
      const telegramUrl = `https://t.me/${botUsername}/${appName}?startapp=${startParam}`;
      console.log('üöÄ v15: –û—Ç–∫—Ä—ã–≤–∞–µ–º Telegram URL:', telegramUrl);
      
      if (typeof window !== 'undefined') {
        window.location.href = telegramUrl;
      }
    } catch (error) {
      console.error('‚ùå v15: –û—à–∏–±–∫–∞ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞:', error);
    }
  }, [botUsername, appName, startParam, redirectAttempted]);

  const handleManualClick = useCallback(() => {
    console.log('üëÜ v15: –†—É—á–Ω–æ–µ –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É');
    
    if (environmentType === 'telegram-web') {
      tryOpenMiniApp();
    } else {
      handleTelegramRedirect();
    }
  }, [environmentType, tryOpenMiniApp, handleTelegramRedirect]);
  
  // ‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å —É—á–µ—Ç–æ–º middleware v15
  useEffect(() => {
    setIsMounted(true);
    
    if (typeof window !== 'undefined') {
      const ua = navigator.userAgent;
      setUserAgent(ua);
      
      const envType = detectEnvironment();
      setEnvironmentType(envType);
      
      console.log('üì± TG-Redirect Client v15 –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω:', {
        userAgent: ua.substring(0, 60) + '...',
        startParam,
        detectedAs,
        wasRedirected,
        environmentType: envType,
        detectionMethod,
        url: window.location.href
      });
    }
  }, [detectEnvironment, startParam, detectedAs, wasRedirected, detectionMethod]);
  
  // ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ Mini App –¥–ª—è Telegram –∫–ª–∏–µ–Ω—Ç–æ–≤
  useEffect(() => {
    if (!isMounted || autoMiniAppAttempted) return;
    
    if (environmentType === 'telegram-web') {
      console.log('üöÄ v15: Telegram –∫–ª–∏–µ–Ω—Ç –æ–±–Ω–∞—Ä—É–∂–µ–Ω - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—É—Å–∫–∞–µ–º Mini App');
      setAutoMiniAppAttempted(true);
      
      // –ó–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
      setTimeout(() => {
        const success = tryOpenMiniApp();
        if (success) {
          console.log('‚úÖ v15: –ö–æ–º–∞–Ω–¥–∞ –∑–∞–ø—É—Å–∫–∞ Mini App –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞');
        } else {
          console.log('‚ö†Ô∏è v15: –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å Mini App –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏');
        }
      }, 1000);
    }
  }, [isMounted, environmentType, autoMiniAppAttempted, tryOpenMiniApp]);
  
  // ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–¥–∏—Ä–µ–∫—Ç –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ –±—Ä–∞—É–∑–µ—Ä–∞  
  useEffect(() => {
    if (!isMounted || environmentType !== 'browser') return;
    if (redirectAttempted) return;
    
    const timer = setInterval(() => {
      setCountdown(prev => {
        if (prev <= 1) {
          clearInterval(timer);
          handleTelegramRedirect();
          return 0;
        }
        return prev - 1;
      });
    }, 1000);
    
    return () => clearInterval(timer);
  }, [isMounted, environmentType, redirectAttempted, handleTelegramRedirect]);
  
  const isIOS = userAgent.includes('iPhone') || userAgent.includes('iPad');
  const isAndroid = userAgent.includes('Android');
  const isMobile = isIOS || isAndroid;
  
  if (!isMounted) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600"></div>
      </div>
    );
  }
  
  // ‚úÖ Mini App —Å–ª—É—á–∞–π (–Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å –Ω–∞ redirect —Å—Ç—Ä–∞–Ω–∏—Ü–µ)
  if (environmentType === 'mini-app') {
    console.error('üö® –û–®–ò–ë–ö–ê v15: Mini App –æ–±–Ω–∞—Ä—É–∂–µ–Ω –Ω–∞ redirect —Å—Ç—Ä–∞–Ω–∏—Ü–µ - —ç—Ç–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ!');
    setEnvironmentType('telegram-web');
    return null;
  }
  
  // ‚úÖ Telegram –∫–ª–∏–µ–Ω—Ç (–æ—Å–Ω–æ–≤–Ω–æ–π —Å–ª—É—á–∞–π –¥–ª—è redirect —Å—Ç—Ä–∞–Ω–∏—Ü—ã)
  if (environmentType === 'telegram-web') {
    return (
      <div className="min-h-screen flex items-center justify-center p-4">
        <div className="max-w-lg w-full bg-white rounded-2xl shadow-xl p-6 text-center">
          <div className="w-20 h-20 mx-auto mb-4 bg-gradient-to-r from-blue-500 to-blue-600 rounded-full flex items-center justify-center shadow-lg">
            <span className="text-2xl font-bold text-white">3GIS</span>
          </div>
          <h1 className="text-2xl font-bold text-gray-800 mb-2">
            –ó–∞–ø—É—Å–∫–∞–µ–º 3GIS Mini App
          </h1>
          <p className="text-gray-600 mb-4">
            –í—ã –≤ Telegram! –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–∫—Ä—ã–≤–∞–µ–º Mini App —Å —Ä—É—Å—Å–∫–æ—è–∑—ã—á–Ω—ã–º–∏ –∑–∞–≤–µ–¥–µ–Ω–∏—è–º–∏
          </p>
          
          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–µ—Ç–µ–∫—Ü–∏–∏ */}
          {detectedAs && (
            <div className="mb-4 px-3 py-2 bg-green-100 text-green-700 rounded-lg text-sm">
              <div className="flex items-center justify-center">
                <CheckCircle className="w-4 h-4 mr-2" />
                –î–µ—Ç–µ–∫—Ü–∏—è: {detectedAs === 'telegram' ? 'Telegram –∫–ª–∏–µ–Ω—Ç' : detectedAs}
              </div>
              {detectionMethod && (
                <div className="text-xs text-green-600 mt-1">
                  –ú–µ—Ç–æ–¥: {detectionMethod}
                </div>
              )}
            </div>
          )}
          
          {startParam && (
            <div className="mt-3 mb-4 px-3 py-1 bg-blue-100 text-blue-700 rounded-full text-sm">
              –ü–∞—Ä–∞–º–µ—Ç—Ä –∑–∞–ø—É—Å–∫–∞: {startParam}
            </div>
          )}
          
          {autoMiniAppAttempted ? (
            <div className="bg-green-50 border border-green-200 rounded-lg p-4 mb-4">
              <div className="flex items-center justify-center text-green-700 mb-2">
                <CheckCircle className="w-5 h-5 mr-2" />
                <span className="font-medium">‚úÖ –ö–æ–º–∞–Ω–¥–∞ –∑–∞–ø—É—Å–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞</span>
              </div>
              <p className="text-sm text-green-600">
                3GIS Mini App –¥–æ–ª–∂–µ–Ω –æ—Ç–∫—Ä—ã—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥
              </p>
              <p className="text-xs text-green-500 mt-2">
                –ï—Å–ª–∏ –Ω–µ –æ—Ç–∫—Ä—ã–ª—Å—è - –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ
              </p>
            </div>
          ) : (
            <div className="bg-blue-50 border border-blue-200 rounded-lg p-4 mb-4">
              <div className="flex items-center justify-center text-blue-700 mb-2">
                <Timer className="w-5 h-5 mr-2 animate-spin" />
                <span className="font-medium">üöÄ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –∑–∞–ø—É—Å–∫—É</span>
              </div>
              <p className="text-sm text-blue-600">
                –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∑–∞–ø—É—Å–∫ Mini App...
              </p>
            </div>
          )}

          <button
            onClick={handleManualClick}
            className="w-full inline-flex items-center justify-center bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 text-white font-semibold py-4 px-6 rounded-xl transition-all duration-200 shadow-lg hover:shadow-xl transform hover:scale-105"
          >
            <ExternalLink className="w-5 h-5 mr-2" />
            –û—Ç–∫—Ä—ã—Ç—å 3GIS Mini App
          </button>
          
          <div className="mt-4 text-sm text-gray-500">
            <p>üì± 3GIS - —Ä—É—Å—Å–∫–æ—è–∑—ã—á–Ω—ã–π —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π –≤ –°–®–ê</p>
            <p className="text-xs mt-1">–†–µ—Å—Ç–æ—Ä–∞–Ω—ã ‚Ä¢ –í—Ä–∞—á–∏ ‚Ä¢ –Æ—Ä–∏—Å—Ç—ã ‚Ä¢ –ö—Ä–∞—Å–æ—Ç–∞ ‚Ä¢ –ê–≤—Ç–æ ‚Ä¢ –§–∏–Ω–∞–Ω—Å—ã</p>
          </div>
          
          {/* Debug info –¥–ª—è development */}
          {process.env.NODE_ENV === 'development' && (
            <div className="mt-4 pt-4 border-t">
              <details className="text-left">
                <summary className="text-xs text-gray-400 cursor-pointer">
                  üîß Debug Info v15 (Hybrid Middleware)
                </summary>
                <div className="mt-2 text-xs text-gray-500 space-y-1">
                  <p><strong>Environment:</strong> {environmentType}</p>
                  <p><strong>Detected As:</strong> {detectedAs}</p>
                  <p><strong>Was Redirected:</strong> {wasRedirected ? '–¥–∞' : '–Ω–µ—Ç'}</p>
                  <p><strong>Detection Method:</strong> {detectionMethod}</p>
                  <p><strong>WebApp Available:</strong> {(window as any)?.Telegram?.WebApp ? '–¥–∞' : '–Ω–µ—Ç'}</p>
                  <p><strong>WebApp Version:</strong> {(window as any)?.Telegram?.WebApp?.version || '–Ω/–¥'}</p>
                  <p><strong>Start Param:</strong> {startParam || '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}</p>
                  <p><strong>Auto Attempted:</strong> {autoMiniAppAttempted ? '–¥–∞' : '–Ω–µ—Ç'}</p>
                  <p><strong>User Agent:</strong> {userAgent.substring(0, 40)}...</p>
                </div>
              </details>
              
              <div className="mt-3 grid grid-cols-2 gap-2">
                <a
                  href="/tg-debug"
                  className="text-xs px-2 py-1 bg-blue-100 text-blue-700 rounded hover:bg-blue-200 transition-colors text-center"
                >
                  üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
                </a>
                <a
                  href="/tg-detect"
                  className="text-xs px-2 py-1 bg-purple-100 text-purple-700 rounded hover:bg-purple-200 transition-colors text-center"
                >
                  ü§î JS –î–µ—Ç–µ–∫—Ü–∏—è
                </a>
              </div>
            </div>
          )}
        </div>
      </div>
    );
  }
  
  // ‚úÖ –û–±—ã—á–Ω—ã–π –±—Ä–∞—É–∑–µ—Ä
  return (
    <div className="min-h-screen flex items-center justify-center p-4">
      <div className="max-w-lg w-full bg-white rounded-2xl shadow-xl p-6 text-center">
        <div className="mb-6">
          <div className="w-20 h-20 mx-auto mb-4 bg-gradient-to-r from-blue-500 to-blue-600 rounded-full flex items-center justify-center shadow-lg">
            <span className="text-2xl font-bold text-white">3GIS</span>
          </div>
          <h1 className="text-2xl font-bold text-gray-800 mb-2">
            3GIS Mini App
          </h1>
          <p className="text-gray-600">
            –†—É—Å—Å–∫–æ—è–∑—ã—á–Ω—ã–π —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π –≤ –°–®–ê
          </p>
          
          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–µ—Ç–µ–∫—Ü–∏–∏ */}
          {detectedAs === 'browser' && (
            <div className="mt-3 mb-4 px-3 py-2 bg-orange-100 text-orange-700 rounded-lg text-sm">
              <div className="flex items-center justify-center">
                <AlertTriangle className="w-4 h-4 mr-2" />
                –û–±–Ω–∞—Ä—É–∂–µ–Ω –æ–±—ã—á–Ω—ã–π –±—Ä–∞—É–∑–µ—Ä
              </div>
              <div className="text-xs text-orange-600 mt-1">
                –î–ª—è –ª—É—á—à–µ–≥–æ –æ–ø—ã—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Telegram
              </div>
            </div>
          )}
          
          {startParam && (
            <div className="mt-3 px-3 py-1 bg-blue-100 text-blue-700 rounded-full text-sm">
              –ü–∞—Ä–∞–º–µ—Ç—Ä: {startParam}
            </div>
          )}
        </div>

        {/* –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–¥–∏—Ä–µ–∫—Ç –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä */}
        {!redirectAttempted && countdown > 0 && (
          <div className="mb-6 p-4 bg-gradient-to-r from-green-50 to-blue-50 border border-green-200 rounded-xl">
            <div className="flex items-center justify-center mb-2">
              <Timer className="w-5 h-5 text-green-600 mr-2" />
              <span className="font-semibold text-green-800">
                –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
              </span>
            </div>
            <div className="text-2xl font-bold text-green-700 mb-2">
              {countdown}
            </div>
            <p className="text-sm text-green-600 mb-3">
              –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram —á–µ—Ä–µ–∑ {countdown} —Å–µ–∫...
            </p>
            <button 
              onClick={handleManualClick}
              className="text-sm text-blue-600 hover:text-blue-800 underline transition-colors"
            >
              –ü–µ—Ä–µ–π—Ç–∏ —Å–µ–π—á–∞—Å
            </button>
          </div>
        )}

        <div className="mb-6">
          <button
            onClick={handleManualClick}
            disabled={redirectAttempted}
            className="w-full inline-flex items-center justify-center bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 disabled:from-gray-400 disabled:to-gray-500 text-white font-semibold py-4 px-6 rounded-xl transition-all duration-200 shadow-lg hover:shadow-xl transform hover:scale-105 disabled:transform-none disabled:cursor-not-allowed"
          >
            <ExternalLink className="w-5 h-5 mr-2" />
            {redirectAttempted ? '–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ' : '–û—Ç–∫—Ä—ã—Ç—å –≤ Telegram'}
          </button>
        </div>

        {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤ */}
        {isMobile ? (
          <div className="bg-green-50 rounded-lg p-4 mb-4">
            <h3 className="font-semibold text-green-800 mb-2 flex items-center">
              <Smartphone className="w-4 h-4 mr-2" />
              {isIOS ? '–î–ª—è iPhone/iPad:' : '–î–ª—è Android:'}
            </h3>
            <ol className="text-sm text-green-700 text-left space-y-1">
              <li>1. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–û—Ç–∫—Ä—ã—Ç—å –≤ Telegram" –≤—ã—à–µ</li>
              <li>2. –í –¥–∏–∞–ª–æ–≥–µ –≤—ã–±–µ—Ä–∏—Ç–µ "–û—Ç–∫—Ä—ã—Ç—å –≤ Telegram"</li>
              <li>3. –ï—Å–ª–∏ Telegram –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∏–∑ {isIOS ? 'App Store' : 'Google Play'}</li>
              <li>4. Mini App –æ—Ç–∫—Ä–æ–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏</li>
            </ol>
          </div>
        ) : (
          <div className="bg-gray-50 rounded-lg p-4 mb-4">
            <h3 className="font-semibold text-gray-800 mb-2">
              –ù–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–µ:
            </h3>
            <ol className="text-sm text-gray-600 text-left space-y-1">
              <li>1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Telegram Desktop</li>
              <li>2. –ù–∞–∂–º–∏—Ç–µ "–û—Ç–∫—Ä—ã—Ç—å –≤ Telegram"</li>
              <li>3. –ù–∞–π–¥–∏—Ç–µ @{botUsername} –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ Mini App</li>
              <li>4. –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–µ–±-–≤–µ—Ä—Å–∏—é Telegram</li>
            </ol>
          </div>
        )}

        {/* –°—Å—ã–ª–∫–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è Telegram */}
        <div className="border-t pt-4">
          <p className="text-sm text-gray-500 mb-3">
            –ù–µ—Ç Telegram?
          </p>
          <a
            href={isIOS 
              ? "https://apps.apple.com/app/telegram-messenger/id686449807"
              : isAndroid 
              ? "https://play.google.com/store/apps/details?id=org.telegram.messenger"
              : "https://desktop.telegram.org/"
            }
            target="_blank"
            rel="noopener noreferrer"
            className="inline-flex items-center text-blue-500 hover:text-blue-600 font-medium transition-colors"
          >
            <Download className="w-4 h-4 mr-1" />
            –°–∫–∞—á–∞—Ç—å Telegram
          </a>
          
          {/* –°—Å—ã–ª–∫–∏ –Ω–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É */}
          <div className="mt-4 pt-3 border-t">
            <p className="text-xs text-gray-500 mb-2">–û—Ç–ª–∞–¥–∫–∞:</p>
            <div className="flex gap-2">
              <a
                href="/tg-debug"
                className="text-xs px-2 py-1 bg-gray-100 text-gray-700 rounded hover:bg-gray-200 transition-colors"
              >
                üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
              </a>
              <a
                href="/tg-detect"
                className="text-xs px-2 py-1 bg-purple-100 text-purple-700 rounded hover:bg-purple-200 transition-colors"
              >
                ü§î JS –î–µ—Ç–µ–∫—Ü–∏—è
              </a>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}
