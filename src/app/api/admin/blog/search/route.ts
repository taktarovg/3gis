// app/api/admin/blog/search/route.ts\nimport { NextRequest, NextResponse } from 'next/server';\nimport { prisma } from '@/lib/prisma';\n\n// GET /api/admin/blog/search - поиск заведений и чатов для блога\nexport async function GET(request: NextRequest) {\n  try {\n    const { searchParams } = new URL(request.url);\n    const query = searchParams.get('q');\n\n    if (!query || query.length < 2) {\n      return NextResponse.json({\n        businesses: [],\n        chats: []\n      });\n    }\n\n    // Параллельный поиск заведений и чатов\n    const [businesses, chats] = await Promise.all([\n      // Поиск заведений\n      prisma.business.findMany({\n        where: {\n          status: 'ACTIVE',\n          OR: [\n            { name: { contains: query, mode: 'insensitive' } },\n            { nameEn: { contains: query, mode: 'insensitive' } },\n            { description: { contains: query, mode: 'insensitive' } },\n            { address: { contains: query, mode: 'insensitive' } }\n          ]\n        },\n        include: {\n          category: {\n            select: {\n              name: true,\n              slug: true\n            }\n          },\n          city: {\n            select: {\n              name: true,\n              stateId: true\n            }\n          }\n        },\n        take: 20,\n        orderBy: [\n          { premiumTier: 'desc' },\n          { rating: 'desc' },\n          { viewCount: 'desc' }\n        ]\n      }),\n\n      // Поиск чатов\n      prisma.telegramChat.findMany({\n        where: {\n          status: 'ACTIVE',\n          OR: [\n            { title: { contains: query, mode: 'insensitive' } },\n            { description: { contains: query, mode: 'insensitive' } },\n            { topic: { contains: query, mode: 'insensitive' } }\n          ]\n        },\n        include: {\n          city: {\n            select: {\n              name: true,\n              stateId: true\n            }\n          }\n        },\n        take: 20,\n        orderBy: [\n          { memberCount: 'desc' },\n          { viewCount: 'desc' }\n        ]\n      })\n    ]);\n\n    return NextResponse.json({\n      businesses,\n      chats\n    });\n  } catch (error) {\n    console.error('Ошибка поиска:', error);\n    return NextResponse.json(\n      { error: 'Ошибка поиска' },\n      { status: 500 }\n    );\n  }\n}"