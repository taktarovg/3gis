// app/api/admin/blog/analytics/route.ts\nimport { NextRequest, NextResponse } from 'next/server';\nimport { prisma } from '@/lib/prisma';\n\n// GET /api/admin/blog/analytics - получение статистики блога\nexport async function GET(request: NextRequest) {\n  try {\n    // Параллельное получение всех метрик\n    const [totalPosts, publishedPosts, draftPosts, weeklyViews, monthlyViews] = await Promise.all([\n      // Общее количество постов\n      prisma.blogPost.count(),\n\n      // Количество опубликованных постов\n      prisma.blogPost.count({\n        where: { status: 'PUBLISHED' }\n      }),\n\n      // Количество черновиков\n      prisma.blogPost.count({\n        where: { status: 'DRAFT' }\n      }),\n\n      // Просмотры за неделю\n      prisma.blogPost.aggregate({\n        _sum: {\n          viewCount: true\n        },\n        where: {\n          status: 'PUBLISHED',\n          publishedAt: {\n            gte: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000) // 7 дней назад\n          }\n        }\n      }),\n\n      // Просмотры за месяц\n      prisma.blogPost.aggregate({\n        _sum: {\n          viewCount: true\n        },\n        where: {\n          status: 'PUBLISHED',\n          publishedAt: {\n            gte: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000) // 30 дней назад\n          }\n        }\n      })\n    ]);\n\n    // Дополнительная аналитика по категориям\n    const categoryStats = await prisma.blogCategory.findMany({\n      include: {\n        _count: {\n          select: {\n            posts: {\n              where: {\n                status: 'PUBLISHED'\n              }\n            }\n          }\n        }\n      },\n      orderBy: {\n        posts: {\n          _count: 'desc'\n        }\n      }\n    });\n\n    // Последние опубликованные посты\n    const recentPosts = await prisma.blogPost.findMany({\n      where: {\n        status: 'PUBLISHED'\n      },\n      include: {\n        category: {\n          select: {\n            name: true,\n            color: true\n          }\n        }\n      },\n      orderBy: {\n        publishedAt: 'desc'\n      },\n      take: 5\n    });\n\n    const stats = {\n      totalPosts,\n      publishedPosts,\n      draftPosts,\n      weeklyViews: weeklyViews._sum.viewCount || 0,\n      monthlyViews: monthlyViews._sum.viewCount || 0,\n      categoryStats,\n      recentPosts\n    };\n\n    return NextResponse.json(stats);\n  } catch (error) {\n    console.error('Ошибка получения аналитики:', error);\n    return NextResponse.json(\n      { error: 'Не удалось загрузить статистику' },\n      { status: 500 }\n    );\n  }\n}"