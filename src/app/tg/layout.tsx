// src/app/tg/layout.tsx
'use client';

import { TelegramProvider } from '@/components/providers/TelegramProvider';
import { TelegramStatus } from '@/components/providers/TelegramProvider';
import { NavigationLayout } from '@/components/navigation/BottomNavigation';
import { useTelegram } from '@/components/providers/TelegramProvider';
import { useEffect } from 'react';

// ‚úÖ –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ–±–µ—Ä—Ç–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏
function TelegramContent({ children }: { children: React.ReactNode }) {
  const { isReady, error } = useTelegram();
  
  // ‚úÖ –ü—Ä–æ—Å—Ç–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
  useEffect(() => {
    if (typeof window !== 'undefined') {
      const tg = (window as any)?.Telegram?.WebApp;
      if (tg && isReady) {
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        try {
          // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ü–≤–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∞
          if (tg.setHeaderColor) {
            tg.setHeaderColor('#ffffff');
          }
          
          // –í–∫–ª—é—á–∞–µ–º –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω—ã–π —Ä–µ–∂–∏–º
          if (tg.requestFullscreen) {
            tg.requestFullscreen();
          }
          
          console.log('üéØ Additional Telegram WebApp features configured');
        } catch (err) {
          console.warn('‚ö†Ô∏è Some Telegram features not available:', err);
        }
      }
    }
  }, [isReady]);
  
  if (error) {
    return (
      <div className="min-h-screen flex items-center justify-center p-4 bg-gray-50">
        <div className="text-center max-w-md">
          <div className="text-6xl mb-4">‚ö†Ô∏è</div>
          <h2 className="text-xl font-semibold text-gray-900 mb-2">–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏</h2>
          <p className="text-gray-600 mb-4">{error}</p>
          <button 
            onClick={() => window.location.reload()} 
            className="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
          >
            –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å
          </button>
        </div>
      </div>
    );
  }
  
  if (!isReady) {
    return (
      <div className="min-h-screen flex items-center justify-center bg-gray-50">
        <div className="text-center">
          <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-4"></div>
          <p className="text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...</p>
        </div>
      </div>
    );
  }
  
  return (
    <NavigationLayout>
      {children}
    </NavigationLayout>
  );
}

/**
 * ‚úÖ Layout –¥–ª—è Telegram Mini App —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π SDK v3.x –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–µ–π
 * - –£–±—Ä–∞–Ω—ã –≤—Å–µ –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã (initAuthStore, usePreventCollapse)
 * - –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç–æ–ª—å–∫–æ —Ä–∞–±–æ—á–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã SDK v3.x
 * - –°–æ–≤–º–µ—Å—Ç–∏–º —Å Next.js 15.3.3 Server/Client Components
 */
export default function TelegramLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <TelegramProvider>
      <TelegramContent>
        {children}
      </TelegramContent>
      
      {/* ‚úÖ Debug –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Ç–æ–ª—å–∫–æ –≤ development */}
      {process.env.NODE_ENV === 'development' && (
        <div className="fixed bottom-20 left-4 z-50 max-w-xs">
          <TelegramStatus />
        </div>
      )}
    </TelegramProvider>
  );
}
