// src/app/tg/businesses/page.tsx\nimport React from 'react';\nimport { BusinessList } from '@/components/businesses/BusinessList';\nimport { SearchBox } from '@/components/search/SearchBox';\nimport { LocationFilters } from '@/components/filters/LocationFilters';\nimport { prisma } from '@/lib/prisma';\n\ninterface BusinessesPageProps {\n  searchParams: Promise<{\n    category?: string;\n    search?: string;\n    filter?: string;\n    city?: string;\n    stateId?: string;\n    cityId?: string;\n    lat?: string;\n    lng?: string;\n    radius?: string;\n  }>;\n}\n\nasync function getBusinesses(params: {\n  category?: string;\n  search?: string;\n  filter?: string;\n  city?: string;\n  stateId?: string;\n  cityId?: string;\n  lat?: string;\n  lng?: string;\n  radius?: string;\n}) {\n  try {\n    // –ò—Å–ø–æ–ª—å–∑—É–µ–º API endpoint –¥–ª—è —É–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –ª–æ–≥–∏–∫–∏\n    const baseUrl = process.env.NODE_ENV === 'development' \n      ? 'http://localhost:3000'\n      : process.env.NEXT_PUBLIC_APP_URL;\n    \n    const searchParams = new URLSearchParams();\n    \n    if (params.category) searchParams.set('category', params.category);\n    if (params.search) searchParams.set('search', params.search);\n    if (params.filter) searchParams.set('filter', params.filter);\n    if (params.city) searchParams.set('city', params.city);\n    if (params.stateId) searchParams.set('stateId', params.stateId);\n    if (params.cityId) searchParams.set('cityId', params.cityId);\n    if (params.lat) searchParams.set('lat', params.lat);\n    if (params.lng) searchParams.set('lng', params.lng);\n    if (params.radius) searchParams.set('radius', params.radius);\n    \n    const response = await fetch(`${baseUrl}/api/businesses?${searchParams.toString()}`, {\n      cache: 'no-store' // –ù–µ –∫—ç—à–∏—Ä—É–µ–º –≥–µ–æ–ª–æ–∫–∞—Ü–∏–æ–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã\n    });\n    \n    if (!response.ok) {\n      throw new Error('Failed to fetch businesses');\n    }\n    \n    const data = await response.json();\n    return data.businesses || [];\n  } catch (error) {\n    console.error('Error fetching businesses:', error);\n    return [];\n  }\n}\n\nasync function getCategoryName(slug?: string) {\n  if (!slug) return null;\n  \n  try {\n    const category = await prisma.businessCategory.findUnique({\n      where: { slug }\n    });\n    return category?.name || null;\n  } catch (error) {\n    return null;\n  }\n}\n\nexport default async function BusinessesPage({ searchParams }: BusinessesPageProps) {\n  // Await searchParams –¥–ª—è Next.js 15\n  const params = await searchParams;\n  \n  const businesses = await getBusinesses(params);\n  const categoryName = await getCategoryName(params.category);\n  \n  // Build page title\n  let pageTitle = '–ó–∞–≤–µ–¥–µ–Ω–∏—è';\n  if (params.lat && params.lng) {\n    pageTitle = '–†—è–¥–æ–º —Å–æ –º–Ω–æ–π';\n  } else if (categoryName) {\n    pageTitle = categoryName;\n  } else if (params.search) {\n    pageTitle = `–ü–æ–∏—Å–∫: ${params.search}`;\n  }\n\n  return (\n    <div className=\"threegis-app-container\">\n      <div className=\"threegis-app-main\">\n        {/* Header */}\n        <div className=\"px-4 py-4 bg-white border-b\">\n          <h1 className=\"text-xl font-bold text-threegis-text mb-3\">\n            {pageTitle}\n          </h1>\n          \n          {/* Search */}\n          <SearchBox \n            placeholder=\"–ü–æ–∏—Å–∫ –∑–∞–≤–µ–¥–µ–Ω–∏–π...\"\n            defaultValue={params.search}\n          />\n        </div>\n        \n        {/* ‚úÖ Location Filters: –®—Ç–∞—Ç ‚Üí –ì–æ—Ä–æ–¥ */}\n        <LocationFilters />\n        \n        {/* Results count */}\n        <div className=\"px-4 py-3 bg-white border-b\">\n          <p className=\"text-sm text-threegis-secondary\">\n            –ù–∞–π–¥–µ–Ω–æ {businesses.length} {businesses.length === 1 ? '–º–µ—Å—Ç–æ' : '–º–µ—Å—Ç'}\n          </p>\n        </div>\n        \n        {/* Business list */}\n        <div className=\"px-4 py-4\">\n          {businesses.length > 0 ? (\n            <BusinessList businesses={businesses} />\n          ) : (\n            <div className=\"text-center py-12\">\n              <div className=\"text-4xl mb-4\">üîç</div>\n              <h3 className=\"text-lg font-medium text-threegis-text mb-2\">\n                –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ\n              </h3>\n              <p className=\"text-threegis-secondary mb-4\">\n                –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞\n              </p>\n              <div className=\"space-y-2 text-sm text-threegis-secondary\">\n                <p>‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è</p>\n                <p>‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±–æ–ª–µ–µ –æ–±—â–∏–µ —Ç–µ—Ä–º–∏–Ω—ã</p>\n                <p>‚Ä¢ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é</p>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}"