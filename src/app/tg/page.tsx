// src/app/tg/page.tsx
'use client';

import React, { useEffect, useRef } from 'react';
import { useRouter } from 'next/navigation';
import Link from 'next/link';
import { MessageSquare, Settings, Bug, TestTube } from 'lucide-react';
import { useTelegram } from '@/components/providers/TelegramProvider';
import dynamic from 'next/dynamic';

// ‚úÖ –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ –∏–º–ø–æ—Ä—Ç—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
const DonationWidget = dynamic(
  () => import('@/components/donations/DonationWidget').then(mod => ({ default: mod.DonationWidget })),
  { 
    ssr: false,
    loading: () => (
      <div className="bg-gray-100 rounded-xl p-4 animate-pulse">
        <div className="h-20 bg-gray-200 rounded"></div>
      </div>
    )
  }
);

const SearchBox = dynamic(
  () => import('@/components/search/SearchBox').then(mod => ({ default: mod.SearchBox })), 
  { ssr: false }
);

const NearbyButton = dynamic(
  () => import('@/components/location/NearbyButton').then(mod => ({ default: mod.NearbyButton })), 
  { ssr: false }
);

const CategoryGrid = dynamic(
  () => import('@/components/categories/CategoryGrid').then(mod => ({ default: mod.CategoryGrid })), 
  { ssr: false }
);

const TelegramDebugStatus = dynamic(
  () => import('@/components/providers/TelegramProvider').then(mod => ({ default: mod.TelegramDebugStatus })), 
  { ssr: false }
);

// ‚úÖ –¢–∏–ø–∏–∑–∞—Ü–∏—è –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π
interface Category {
  id: number;
  name: string;
  nameEn: string;
  slug: string;
  icon: string;
  order: number;
}

// ‚úÖ –•—É–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ
function useCategories() {
  const [categories, setCategories] = React.useState<Category[]>([]); 
  const [loading, setLoading] = React.useState(true);

  React.useEffect(() => {
    const fetchCategories = async () => {
      try {
        const response = await fetch('/api/categories');
        if (response.ok) {
          const data: Category[] = await response.json();
          setCategories(data);
        } else {
          setCategories(getFallbackCategories());
        }
      } catch (error) {
        console.error('Error fetching categories:', error);
        setCategories(getFallbackCategories());
      } finally {
        setLoading(false);
      }
    };

    fetchCategories();
  }, []);

  return { categories, loading };
}

function getFallbackCategories(): Category[] {
  return [
    { id: 1, name: "–†–µ—Å—Ç–æ—Ä–∞–Ω—ã –∏ –∫–∞—Ñ–µ", nameEn: "Restaurants", slug: "restaurants", icon: "üçΩÔ∏è", order: 1 },
    { id: 2, name: "–ú–µ–¥–∏—Ü–∏–Ω–∞", nameEn: "Healthcare", slug: "healthcare", icon: "‚öïÔ∏è", order: 2 },
    { id: 3, name: "–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ —É—Å–ª—É–≥–∏", nameEn: "Legal Services", slug: "legal", icon: "‚öñÔ∏è", order: 3 },
    { id: 4, name: "–ö—Ä–∞—Å–æ—Ç–∞ –∏ –∑–¥–æ—Ä–æ–≤—å–µ", nameEn: "Beauty & Health", slug: "beauty", icon: "üíÑ", order: 4 },
    { id: 5, name: "–ê–≤—Ç–æ—Å–µ—Ä–≤–∏—Å—ã", nameEn: "Auto Services", slug: "auto", icon: "üîß", order: 5 },
    { id: 6, name: "–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —É—Å–ª—É–≥–∏", nameEn: "Financial Services", slug: "finance", icon: "üè¶", order: 6 },
    { id: 7, name: "–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ", nameEn: "Education", slug: "education", icon: "üéì", order: 7 },
    { id: 8, name: "–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å", nameEn: "Real Estate", slug: "realestate", icon: "üè†", order: 8 }
  ];
}

export default function ThreeGISHomePage() {
  const router = useRouter();
  const { categories, loading } = useCategories();
  
  // ‚úÖ –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Telegram Provider
  const { launchParams, isReady, isTelegramEnvironment } = useTelegram();
  
  // ‚úÖ Ref –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö —Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤
  const hasProcessedRedirect = useRef(false);

  // ‚úÖ State –¥–ª—è –ø–æ–∫–∞–∑–∞ –ø–∞–Ω–µ–ª–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞
  const [showDevPanel, setShowDevPanel] = React.useState(false);
  
  // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: SDK v3.x —Å–æ–≤–º–µ—Å—Ç–∏–º–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ start –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –±–µ–∑ —Ü–∏–∫–ª–æ–≤
  useEffect(() => {
    // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É
    if (hasProcessedRedirect.current) {
      console.log('‚è≠Ô∏è Redirect already processed, skipping...');
      return;
    }
    
    // ‚úÖ –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ –º—ã –≤ –Ω–∞—Å—Ç–æ—è—â–µ–º Telegram –æ–∫—Ä—É–∂–µ–Ω–∏–∏ –∏ –¥–∞–Ω–Ω—ã–µ –≥–æ—Ç–æ–≤—ã
    if (!isReady || !isTelegramEnvironment || !launchParams) {
      console.log('üîÑ Waiting for Telegram data or not in Telegram environment');
      return;
    }
    
    // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û –î–õ–Ø SDK v3.x: –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ start –ø–∞—Ä–∞–º–µ—Ç—Ä–∞
    let startParam: string | undefined;
    
    try {
      // –í SDK v3.x —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ launchParams –∏–∑–º–µ–Ω–∏–ª–∞—Å—å
      if (launchParams && typeof launchParams === 'object') {
        // –ú–µ—Ç–æ–¥ 1: tgWebAppStartParam (–æ—Å–Ω–æ–≤–Ω–æ–π –≤ SDK v3.x)
        if ('tgWebAppStartParam' in launchParams && launchParams.tgWebAppStartParam) {
          startParam = launchParams.tgWebAppStartParam as string;
          console.log('üì± Start param –∏–∑ tgWebAppStartParam (SDK v3.x):', startParam);
        }
        // –ú–µ—Ç–æ–¥ 2: startParam –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
        else if ('startParam' in launchParams && launchParams.startParam) {
          startParam = launchParams.startParam as string;
          console.log('üì± Start param –∏–∑ startParam (fallback):', startParam);
        }
        // –ú–µ—Ç–æ–¥ 3: fallback –∫ URL –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º
        else {
          const urlParams = new URLSearchParams(window.location.search);
          startParam = urlParams.get('startapp') || 
                      urlParams.get('start') || 
                      urlParams.get('startParam') || 
                      undefined;
          
          if (startParam) {
            console.log('üì± Start param –∏–∑ URL fallback:', startParam);
          }
        }
      }
      
      if (startParam && typeof startParam === 'string' && startParam.trim() !== '') {
        console.log('üöÄ Processing start param (SDK v3.x):', startParam);
        
        // –û—Ç–º–µ—á–∞–µ–º —á—Ç–æ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞—á–∞–ª–∞—Å—å
        hasProcessedRedirect.current = true;
        
        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
        setTimeout(() => {
          try {
            // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ startParam –Ω–µ undefined
            if (!startParam || typeof startParam !== 'string') {
              console.log('‚ö†Ô∏è startParam –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –≤ timeout callback');
              hasProcessedRedirect.current = false;
              return;
            }
            
            // –û—Ç–¥–µ–ª—å–Ω—ã–µ –∑–∞–≤–µ–¥–µ–Ω–∏—è: business_123
            if (startParam.startsWith('business_')) {
              const businessId = startParam.replace('business_', '');
              if (businessId && /^\d+$/.test(businessId)) {
                console.log('üè¢ Redirecting to business:', businessId);
                router.push(`/tg/business/${businessId}`);
                return;
              }
            }
            
            // –û—Ç–¥–µ–ª—å–Ω—ã–µ —á–∞—Ç—ã: chat_123
            if (startParam.startsWith('chat_')) {
              const chatId = startParam.replace('chat_', '');
              if (chatId && /^\d+$/.test(chatId)) {
                console.log('üí¨ Redirecting to chat:', chatId);
                router.push(`/tg/chats/${chatId}`);
                return;
              }
            }
            
            // –°–ø–∏—Å–æ–∫ –∑–∞–≤–µ–¥–µ–Ω–∏–π —Å –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π: businesses_restaurants
            if (startParam.startsWith('businesses_')) {
              const category = startParam.replace('businesses_', '');
              if (category && category !== 'businesses') {
                console.log('üè™ Redirecting to businesses with category:', category);
                router.push(`/tg/businesses?category=${category}`);
                return;
              }
            }
            
            // –ü—Ä–æ—Å—Ç—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã (–µ—â–µ –æ–¥–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è TypeScript)
            if (startParam && typeof startParam === 'string') {
              switch (startParam) {
                case 'businesses':
                  console.log('üè™ Redirecting to all businesses');
                  router.push('/tg/businesses');
                  break;
                  
                case 'chats':
                  console.log('üí¨ Redirecting to chats');
                  router.push('/tg/chats');
                  break;
                  
                case 'favorites':
                  console.log('‚≠ê Redirecting to favorites');
                  router.push('/tg/favorites');
                  break;
                  
                case 'profile':
                  console.log('üë§ Redirecting to profile');
                  router.push('/tg/profile');
                  break;
                  
                case 'add_business':
                  console.log('‚ûï Redirecting to add business');
                  router.push('/tg/add-business');
                  break;
                  
                default:
                  console.log('‚ùì Unknown start param (SDK v3.x):', startParam);
                  // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –µ—Å–ª–∏ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä
                  hasProcessedRedirect.current = false;
                  break;
              }
            } else {
              console.log('‚ö†Ô∏è startParam –Ω–µ–≤–∞–ª–∏–¥–µ–Ω –≤ switch –±–ª–æ–∫–µ');
              hasProcessedRedirect.current = false;
            }
          } catch (error) {
            console.error('Error in delayed redirect:', error);
            hasProcessedRedirect.current = false;
          }
        }, 100); // 100ms –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
        
      } else {
        console.log('‚ÑπÔ∏è No start parameter found in SDK v3.x');
      }
    } catch (error) {
      console.error('Error processing start param:', error);
      hasProcessedRedirect.current = false;
    }
  }, [launchParams, isReady, isTelegramEnvironment, router]);
  
  // ‚úÖ –°–±—Ä–æ—Å —Ñ–ª–∞–≥–∞ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  useEffect(() => {
    return () => {
      hasProcessedRedirect.current = false;
    };
  }, []);
  
  // ‚úÖ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–∞–¥–µ—Ä –ø–æ–∫–∞ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –¥–∞–Ω–Ω—ã–µ
  if (loading || !isReady) {
    return (
      <div className="threegis-app-container" data-scrollable>
        <div className="threegis-app-main">
          <div className="px-4 mb-6 mt-6">
            <div className="bg-gray-200 animate-pulse rounded-lg h-12"></div>
          </div>
          <div className="px-4 mb-6">
            <div className="bg-gray-200 animate-pulse rounded-lg h-12"></div>
          </div>
          <div className="px-4 mb-6">
            <div className="grid grid-cols-2 gap-4">
              {[...Array(8)].map((_, i) => (
                <div key={i} className="bg-gray-200 animate-pulse rounded-lg h-20"></div>
              ))}
            </div>
          </div>
        </div>
      </div>
    );
  }
  
  return (
    <div className="threegis-app-container" data-scrollable>
      <div className="threegis-app-main">
        {/* ‚úÖ –ü–ê–ù–ï–õ–¨ –†–ê–ó–†–ê–ë–û–¢–ß–ò–ö–ê - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –≤ development –∏–ª–∏ –ø–æ –∫–ª–∏–∫—É */}
        {(process.env.NODE_ENV === 'development' || showDevPanel) && (
          <div className="px-4 mb-6 mt-4">
            <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-3">
              <div className="flex items-center justify-between mb-3">
                <h4 className="font-medium text-yellow-800 flex items-center">
                  <Settings className="w-4 h-4 mr-2" />
                  –ü–∞–Ω–µ–ª—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞
                </h4>
                <button
                  onClick={() => setShowDevPanel(!showDevPanel)}
                  className="text-yellow-600 hover:text-yellow-800 text-sm"
                >
                  {showDevPanel ? '–°–∫—Ä—ã—Ç—å' : '–ü–æ–∫–∞–∑–∞—Ç—å'}
                </button>
              </div>
              
              <div className="grid grid-cols-2 gap-2 text-sm">
                <Link
                  href="/tg-debug"
                  className="flex items-center justify-center px-3 py-2 bg-blue-100 text-blue-700 rounded hover:bg-blue-200 transition-colors"
                >
                  <Bug className="w-4 h-4 mr-1" />
                  –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
                </Link>
                
                <Link
                  href="/middleware-test"
                  className="flex items-center justify-center px-3 py-2 bg-purple-100 text-purple-700 rounded hover:bg-purple-200 transition-colors"
                >
                  <TestTube className="w-4 h-4 mr-1" />
                  –¢–µ—Å—Ç middleware
                </Link>
              </div>
              
              <div className="mt-2 text-xs text-yellow-600">
                üîß –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –¥–µ—Ç–µ–∫—Ü–∏–∏ Telegram –∫–ª–∏–µ–Ω—Ç–æ–≤
              </div>
            </div>
          </div>
        )}

        {/* –ü–æ–∏—Å–∫ */}
        <div className="px-4 mb-6 mt-6">
          <SearchBox placeholder="–ü–æ–∏—Å–∫ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤, –≤—Ä–∞—á–µ–π, —É—Å–ª—É–≥..." />
        </div>
        
        {/* –ö–Ω–æ–ø–∫–∞ "–†—è–¥–æ–º —Å–æ –º–Ω–æ–π" */}
        <div className="px-4 mb-6">
          <NearbyButton className="w-full" />
        </div>
        
        {/* –ö–∞—Ç–∞–ª–æ–≥ —Ä—É—Å—Å–∫–∏—Ö —á–∞—Ç–æ–≤ */}
        <div className="px-4 mb-6">
          <Link
            href="/tg/chats"
            className="block bg-gradient-to-r from-blue-500 to-purple-600 text-white rounded-xl p-4 hover:from-blue-600 hover:to-purple-700 transition-all shadow-lg"
          >
            <div className="flex items-center justify-between">
              <div className="flex items-center">
                <div className="w-10 h-10 bg-white bg-opacity-20 rounded-full flex items-center justify-center mr-3">
                  <MessageSquare className="w-5 h-5" />
                </div>
                <div>
                  <h3 className="font-semibold">–†—É—Å—Å–∫–∏–µ —á–∞—Ç—ã –∏ –≥—Ä—É–ø–ø—ã</h3>
                  <p className="text-sm opacity-90">–ù–∞–π–¥–∏—Ç–µ —Å–≤–æ–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ –≤ –°–®–ê</p>
                </div>
              </div>
              <div className="text-right">
                <div className="text-lg font-bold">18+</div>
                <div className="text-xs opacity-90">–≥—Ä—É–ø–ø</div>
              </div>
            </div>
          </Link>
        </div>
        
        {/* –°–µ—Ç–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π */}
        <div className="px-4 mb-6">
          <CategoryGrid categories={categories} />
        </div>

        {/* –í–∏–¥–∂–µ—Ç –¥–æ–Ω–∞—Ç–æ–≤ */}
        <div className="px-4 mb-6">
          <DonationWidget />
        </div>

        {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ */}
        <div className="px-4 mb-6 text-center">
          <div className="bg-gray-50 rounded-lg p-4">
            <h3 className="text-lg font-semibold text-gray-800 mb-2">
              –û –ø—Ä–æ–µ–∫—Ç–µ 3GIS
            </h3>
            <p className="text-sm text-gray-600 leading-relaxed">
              –ü–µ—Ä–≤—ã–π —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫ —Ä—É—Å—Å–∫–æ—è–∑—ã—á–Ω—ã—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π –∏ —Å–æ–æ–±—â–µ—Å—Ç–≤ –≤ –°–®–ê.
              –ü–æ–º–æ–≥–∞–µ–º –Ω–∞–π—Ç–∏ –≤—Ä–∞—á–µ–π, —é—Ä–∏—Å—Ç–æ–≤, —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã, —á–∞—Ç—ã –∏ –¥—Ä—É–≥–∏–µ —É—Å–ª—É–≥–∏ –Ω–∞ —Ä–æ–¥–Ω–æ–º —è–∑—ã–∫–µ.
            </p>
            <div className="mt-3 flex items-center justify-center text-xs text-gray-500">
              <span className="mr-4">üè¢ {categories.length} –∫–∞—Ç–µ–≥–æ—Ä–∏–π</span>
              <span className="mr-4">üí¨ –ö–∞—Ç–∞–ª–æ–≥ —á–∞—Ç–æ–≤</span>
              <span className="mr-4">üåé –ü–æ –≤—Å–µ–π –ê–º–µ—Ä–∏–∫–µ</span>
              <span>üá∑üá∫ –ù–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ</span>
            </div>
            
            {/* ‚úÖ –°–∫—Ä—ã—Ç–∞—è –∫–Ω–æ–ø–∫–∞ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–∞–Ω–µ–ª–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ –≤ production */}
            {process.env.NODE_ENV === 'production' && !showDevPanel && (
              <div className="mt-3">
                <button
                  onClick={() => setShowDevPanel(true)}
                  className="text-xs text-gray-400 hover:text-gray-600 transition-colors"
                >
                  v12 debug
                </button>
              </div>
            )}
          </div>
        </div>
      </div>
      
      {/* Debug –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
      <TelegramDebugStatus />
    </div>
  );
}
