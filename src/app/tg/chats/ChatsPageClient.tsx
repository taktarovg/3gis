'use client';

import { useState } from 'react';
import { ChatsList } from '@/components/chats/ChatsList';
import { SuggestChatModal } from '@/components/chats/SuggestChatModal';
import { useTelegramPopup } from '@/hooks/use-telegram-popup';
import { InfiniteLoopTesterWrapper } from '@/components/debug/InfiniteLoopTesterWrapper';
import { hapticFeedbackImpactOccurred } from '@telegram-apps/sdk';

export default function ChatsPageClient() {
  const [showSuggestModal, setShowSuggestModal] = useState(false);
  const { showAlert } = useTelegramPopup();

  const handleAddClick = () => {
    // Haptic feedback –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏
    try {
      if (hapticFeedbackImpactOccurred.isAvailable()) {
        hapticFeedbackImpactOccurred('light');
      }
    } catch {}

    setShowSuggestModal(true);
  };

  const handleSuggestSuccess = () => {
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞—Ç–∏–≤–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ Telegram
    showAlert('–í–∞—à —á–∞—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é. –°–ø–∞—Å–∏–±–æ –∑–∞ —É—á–∞—Å—Ç–∏–µ! üôè');
  };

  return (
    <div className="min-h-screen bg-gray-50 pb-20" data-scrollable>
      {/* Header —Å –∫–Ω–æ–ø–∫–æ–π –¥–æ–±–∞–≤–ª–µ–Ω–∏—è */}
      <div className="bg-white border-b border-gray-200 px-4 py-4">
        <div className="flex items-center justify-between mb-2">
          <h1 className="text-xl font-bold text-gray-900">
            üí¨ –†—É—Å—Å–∫–∏–µ —á–∞—Ç—ã –≤ –°–®–ê
          </h1>
          <button
            onClick={handleAddClick}
            className="bg-blue-500 text-white px-3 py-1.5 rounded-lg text-sm font-medium hover:bg-blue-600 transition-colors flex items-center gap-1"
          >
            ‚ûï –î–æ–±–∞–≤–∏—Ç—å
          </button>
        </div>
        <p className="text-sm text-gray-600">
          –ù–∞–π–¥–∏—Ç–µ —Å–≤–æ–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ —Å—Ä–µ–¥–∏ —Ä—É—Å—Å–∫–æ–≥–æ–≤–æ—Ä—è—â–∏—Ö
        </p>
      </div>
      
      <div className="p-4">
        <ChatsList />
      </div>
      
      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —á–∞—Ç–∞ */}
      <SuggestChatModal
        isOpen={showSuggestModal}
        onClose={() => setShowSuggestModal(false)}
        onSuccess={handleSuggestSuccess}
      />
      
      {/* ‚úÖ –¢–µ—Å—Ç–µ—Ä –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ (—Ç–æ–ª—å–∫–æ –≤ dev —Ä–µ–∂–∏–º–µ) */}
      <InfiniteLoopTesterWrapper />
    </div>
  );
}
