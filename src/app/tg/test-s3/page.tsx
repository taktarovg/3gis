'use client';

import { useState } from 'react';
import { ImageUpload } from '@/components/upload/ImageUpload';
import { BusinessPhotoGallery } from '@/components/businesses/BusinessPhotoGallery';
import { AddBusinessForm } from '@/components/businesses/AddBusinessForm';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Badge } from '@/components/ui/badge';
import { CheckCircle, Upload, Image as ImageIcon, Building2 } from 'lucide-react';

export default function TestS3Page() {
  const [uploadedBusinessPhotos, setUploadedBusinessPhotos] = useState<string[]>([]);
  const [uploadedAvatars, setUploadedAvatars] = useState<string[]>([]);
  const [testResults, setTestResults] = useState<{
    upload: boolean;
    conversion: boolean;
    display: boolean;
    database: boolean;
  }>({
    upload: false,
    conversion: false,
    display: false,
    database: false
  });

  const handleBusinessPhotoUpload = (imageUrl: string) => {
    setUploadedBusinessPhotos(prev => [...prev, imageUrl]);
    updateTestResults('upload', true);
    updateTestResults('conversion', true);
    updateTestResults('display', true);
  };

  const handleAvatarUpload = (imageUrl: string) => {
    setUploadedAvatars(prev => [...prev, imageUrl]);
  };

  const updateTestResults = (test: keyof typeof testResults, success: boolean) => {
    setTestResults(prev => ({ ...prev, [test]: success }));
  };

  const clearUploads = () => {
    setUploadedBusinessPhotos([]);
    setUploadedAvatars([]);
    setTestResults({
      upload: false,
      conversion: false,
      display: false,
      database: false
    });
  };

  const samplePhotos = uploadedBusinessPhotos.map((url, index) => ({
    id: index + 1,
    url,
    caption: `–¢–µ—Å—Ç–æ–≤–æ–µ —Ñ–æ—Ç–æ ${index + 1}`,
    order: index
  }));

  return (
    <div className="min-h-screen bg-gray-50 p-4">
      <div className="max-w-6xl mx-auto space-y-6">
        {/* Header */}
        <div className="text-center space-y-2">
          <h1 className="text-3xl font-bold text-gray-900">
            üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ AWS S3 –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
          </h1>
          <p className="text-gray-600">
            –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏, –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤ WebP –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
          </p>
        </div>

        {/* Test Status */}
        <Card>
          <CardHeader>
            <CardTitle className="flex items-center space-x-2">
              <CheckCircle className="w-5 h-5" />
              <span>–°—Ç–∞—Ç—É—Å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è</span>
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
              <div className="text-center space-y-2">
                <div className={`w-12 h-12 rounded-full mx-auto flex items-center justify-center ${
                  testResults.upload ? 'bg-green-500 text-white' : 'bg-gray-200 text-gray-400'
                }`}>
                  <Upload className="w-6 h-6" />
                </div>
                <div className="text-sm font-medium">–ó–∞–≥—Ä—É–∑–∫–∞ –≤ S3</div>
                <Badge variant={testResults.upload ? 'default' : 'secondary'}>
                  {testResults.upload ? '–£—Å–ø–µ—à–Ω–æ' : '–û–∂–∏–¥–∞–Ω–∏–µ'}
                </Badge>
              </div>

              <div className="text-center space-y-2">
                <div className={`w-12 h-12 rounded-full mx-auto flex items-center justify-center ${
                  testResults.conversion ? 'bg-green-500 text-white' : 'bg-gray-200 text-gray-400'
                }`}>
                  <ImageIcon className="w-6 h-6" />
                </div>
                <div className="text-sm font-medium">–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è WebP</div>
                <Badge variant={testResults.conversion ? 'default' : 'secondary'}>
                  {testResults.conversion ? '–£—Å–ø–µ—à–Ω–æ' : '–û–∂–∏–¥–∞–Ω–∏–µ'}
                </Badge>
              </div>

              <div className="text-center space-y-2">
                <div className={`w-12 h-12 rounded-full mx-auto flex items-center justify-center ${
                  testResults.display ? 'bg-green-500 text-white' : 'bg-gray-200 text-gray-400'
                }`}>
                  <ImageIcon className="w-6 h-6" />
                </div>
                <div className="text-sm font-medium">–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ</div>
                <Badge variant={testResults.display ? 'default' : 'secondary'}>
                  {testResults.display ? '–£—Å–ø–µ—à–Ω–æ' : '–û–∂–∏–¥–∞–Ω–∏–µ'}
                </Badge>
              </div>

              <div className="text-center space-y-2">
                <div className={`w-12 h-12 rounded-full mx-auto flex items-center justify-center ${
                  testResults.database ? 'bg-green-500 text-white' : 'bg-gray-200 text-gray-400'
                }`}>
                  <Building2 className="w-6 h-6" />
                </div>
                <div className="text-sm font-medium">–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö</div>
                <Badge variant={testResults.database ? 'default' : 'secondary'}>
                  {testResults.database ? '–£—Å–ø–µ—à–Ω–æ' : '–û–∂–∏–¥–∞–Ω–∏–µ'}
                </Badge>
              </div>
            </div>

            <div className="mt-4 text-center">
              <Button onClick={clearUploads} variant="outline">
                üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã
              </Button>
            </div>
          </CardContent>
        </Card>

        {/* Main Testing Interface */}
        <Tabs defaultValue="business-photos" className="space-y-4">
          <TabsList className="grid w-full grid-cols-4">
            <TabsTrigger value="business-photos">–§–æ—Ç–æ –∑–∞–≤–µ–¥–µ–Ω–∏–π</TabsTrigger>
            <TabsTrigger value="avatars">–ê–≤–∞—Ç–∞—Ä—ã</TabsTrigger>
            <TabsTrigger value="gallery">–ì–∞–ª–µ—Ä–µ—è</TabsTrigger>
            <TabsTrigger value="form">–ü–æ–ª–Ω–∞—è —Ñ–æ—Ä–º–∞</TabsTrigger>
          </TabsList>

          {/* Business Photos Testing */}
          <TabsContent value="business-photos" className="space-y-4">
            <Card>
              <CardHeader>
                <CardTitle>–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –∑–∞–≤–µ–¥–µ–Ω–∏–π</CardTitle>
                <p className="text-sm text-gray-600">
                  –ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤ WebP
                </p>
              </CardHeader>
              <CardContent>
                <ImageUpload
                  type="business"
                  businessId={999}
                  category="restaurants"
                  onUpload={handleBusinessPhotoUpload}
                  maxFiles={10}
                  currentImages={uploadedBusinessPhotos}
                />

                {uploadedBusinessPhotos.length > 0 && (
                  <div className="mt-6 space-y-4">
                    <h3 className="text-lg font-semibold">
                      –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ ({uploadedBusinessPhotos.length})
                    </h3>
                    <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4">
                      {uploadedBusinessPhotos.map((photo, index) => (
                        <div key={index} className="space-y-2">
                          <img
                            src={photo}
                            alt={`–¢–µ—Å—Ç–æ–≤–æ–µ —Ñ–æ—Ç–æ ${index + 1}`}
                            className="w-full h-32 object-cover rounded-lg border"
                          />
                          <div className="text-xs text-gray-500 space-y-1">
                            <p>üìÅ –§–æ—Ä–º–∞—Ç: WebP</p>
                            <p>üîó S3 URL</p>
                            <p>‚úÖ –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ</p>
                          </div>
                        </div>
                      ))}
                    </div>
                  </div>
                )}
              </CardContent>
            </Card>
          </TabsContent>

          {/* Avatar Testing */}
          <TabsContent value="avatars" className="space-y-4">
            <Card>
              <CardHeader>
                <CardTitle>–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–≤–∞—Ç–∞—Ä–æ–≤</CardTitle>
                <p className="text-sm text-gray-600">
                  –ó–∞–≥—Ä—É–∑–∏—Ç–µ –∞–≤–∞—Ç–∞—Ä—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫—Ä—É–≥–ª–æ–π –æ–±—Ä–µ–∑–∫–∏ –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏
                </p>
              </CardHeader>
              <CardContent>
                <ImageUpload
                  type="avatar"
                  telegramId="test_user_123"
                  onUpload={handleAvatarUpload}
                  maxFiles={3}
                  currentImages={uploadedAvatars}
                />

                {uploadedAvatars.length > 0 && (
                  <div className="mt-6 space-y-4">
                    <h3 className="text-lg font-semibold">
                      –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –∞–≤–∞—Ç–∞—Ä—ã ({uploadedAvatars.length})
                    </h3>
                    <div className="flex space-x-4">
                      {uploadedAvatars.map((avatar, index) => (
                        <div key={index} className="text-center space-y-2">
                          <img
                            src={avatar}
                            alt={`–¢–µ—Å—Ç–æ–≤—ã–π –∞–≤–∞—Ç–∞—Ä ${index + 1}`}
                            className="w-24 h-24 rounded-full border object-cover"
                          />
                          <div className="text-xs text-gray-500">
                            <p>200√ó200px</p>
                            <p>WebP —Ñ–æ—Ä–º–∞—Ç</p>
                          </div>
                        </div>
                      ))}
                    </div>
                  </div>
                )}
              </CardContent>
            </Card>
          </TabsContent>

          {/* Gallery Testing */}
          <TabsContent value="gallery" className="space-y-4">
            <Card>
              <CardHeader>
                <CardTitle>–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–∞–ª–µ—Ä–µ–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π</CardTitle>
                <p className="text-sm text-gray-600">
                  –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ BusinessPhotoGallery —Å lightbox
                </p>
              </CardHeader>
              <CardContent>
                {samplePhotos.length > 0 ? (
                  <BusinessPhotoGallery
                    photos={samplePhotos}
                    businessName="–¢–µ—Å—Ç–æ–≤–æ–µ –∑–∞–≤–µ–¥–µ–Ω–∏–µ"
                  />
                ) : (
                  <div className="text-center py-8 text-gray-500">
                    <ImageIcon className="w-12 h-12 mx-auto mb-2 opacity-50" />
                    <p>–°–Ω–∞—á–∞–ª–∞ –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –≤–æ –≤–∫–ª–∞–¥–∫–µ &quot;–§–æ—Ç–æ –∑–∞–≤–µ–¥–µ–Ω–∏–π&quot;</p>
                  </div>
                )}
              </CardContent>
            </Card>
          </TabsContent>

          {/* Full Form Testing */}
          <TabsContent value="form" className="space-y-4">
            <Card>
              <CardHeader>
                <CardTitle>–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–π —Ñ–æ—Ä–º—ã –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–≤–µ–¥–µ–Ω–∏—è</CardTitle>
                <p className="text-sm text-gray-600">
                  –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–≤–µ–¥–µ–Ω–∏—è —Å –∑–∞–≥—Ä—É–∑–∫–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
                </p>
              </CardHeader>
              <CardContent>
                <AddBusinessForm
                  onSuccess={(businessId) => {
                    updateTestResults('database', true);
                    alert(`–ó–∞–≤–µ–¥–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ —Å ID: ${businessId}`);
                  }}
                  onCancel={() => {
                    console.log('–û—Ç–º–µ–Ω–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–≤–µ–¥–µ–Ω–∏—è');
                  }}
                />
              </CardContent>
            </Card>
          </TabsContent>
        </Tabs>

        {/* Technical Information */}
        <Card>
          <CardHeader>
            <CardTitle>–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è AWS S3</CardTitle>
          </CardHeader>
          <CardContent className="space-y-4">
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm">
              <div className="space-y-2">
                <h4 className="font-semibold">–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è S3:</h4>
                <ul className="space-y-1 text-gray-600">
                  <li>‚Ä¢ –†–µ–≥–∏–æ–Ω: us-east-1</li>
                  <li>‚Ä¢ Bucket: 3gis-photos</li>
                  <li>‚Ä¢ –§–æ—Ä–º–∞—Ç: WebP (–∞–≤—Ç–æ–∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è)</li>
                  <li>‚Ä¢ –ö–∞—á–µ—Å—Ç–≤–æ: 80-85%</li>
                  <li>‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 10MB</li>
                </ul>
              </div>
              
              <div className="space-y-2">
                <h4 className="font-semibold">–°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ñ–∞–π–ª–æ–≤:</h4>
                <ul className="space-y-1 text-gray-600">
                  <li>‚Ä¢ business-photos/–∫–∞—Ç–µ–≥–æ—Ä–∏—è/ID/</li>
                  <li>‚Ä¢ user-avatars/telegram_id.webp</li>
                  <li>‚Ä¢ defaults/default-*.webp</li>
                  <li>‚Ä¢ –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∏–º–µ–Ω–∞ (UUID)</li>
                  <li>‚Ä¢ –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –≤ Prisma</li>
                </ul>
              </div>
            </div>

            <div className="mt-4 p-4 bg-blue-50 rounded-lg">
              <h4 className="font-semibold text-blue-900 mb-2">–ß—Ç–æ —Ç–µ—Å—Ç–∏—Ä—É–µ—Ç—Å—è:</h4>
              <ul className="text-sm text-blue-800 space-y-1">
                <li>‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–∞–π–ª–æ–≤ (—Ç–∏–ø, —Ä–∞–∑–º–µ—Ä)</li>
                <li>‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤ WebP</li>
                <li>‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ –≤ AWS S3 bucket</li>
                <li>‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö –≤ PostgreSQL</li>
                <li>‚úÖ –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Next.js Image</li>
                <li>‚úÖ Lightbox –≥–∞–ª–µ—Ä–µ—è —Å –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π</li>
                <li>‚úÖ –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞</li>
                <li>‚úÖ Responsive –¥–∏–∑–∞–π–Ω</li>
              </ul>
            </div>
          </CardContent>
        </Card>

        {/* Footer */}
        <div className="text-center text-gray-500 text-sm">
          <p>üß™ –¢–µ—Å—Ç–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ AWS S3 –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –¥–ª—è 3GIS</p>
          <p>–í—Å–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É—é—Ç—Å—è –≤ WebP —Ñ–æ—Ä–º–∞—Ç</p>
        </div>
      </div>
    </div>
  );
}
