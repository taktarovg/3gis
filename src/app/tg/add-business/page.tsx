'use client';

import { useSearchParams } from 'next/navigation';
import { Suspense, useState } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { 
  Building, 
  Users, 
  Crown, 
  Award,
  MapPin,
  Phone,
  Globe,
  Camera,
  Clock,
  Star,
  CheckCircle,
  Upload,
  ArrowLeft
} from 'lucide-react';
import Link from 'next/link';

function AddBusinessContent() {
  const searchParams = useSearchParams();
  const type = searchParams.get('type') || 'community'; // 'owner' | 'community'
  const [step, setStep] = useState(1);
  const [formData, setFormData] = useState({
    name: '',
    category: '',
    description: '',
    address: '',
    city: '',
    phone: '',
    website: '',
    languages: ['ru'],
    hours: {},
    photos: []
  });

  const isOwnerType = type === 'owner';

  const handleNext = () => {
    if (step < 4) setStep(step + 1);
  };

  const handlePrev = () => {
    if (step > 1) setStep(step - 1);
  };

  const handleSubmit = () => {
    // TODO: –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    console.log('Submitting:', { type, formData });
  };

  return (
    <div className="min-h-screen bg-gray-50 p-4">
      {/* Header */}
      <div className="flex items-center mb-6">
        <Link href="/tg/my-business">
          <Button variant="ghost" size="sm" className="mr-3">
            <ArrowLeft className="w-4 h-4" />
          </Button>
        </Link>
        
        <div>
          <div className="flex items-center gap-3 mb-2">
            {isOwnerType ? (
              <div className="flex items-center gap-2">
                <Crown className="w-6 h-6 text-blue-600" />
                <h1 className="text-2xl font-bold text-gray-900">–î–æ–±–∞–≤–∏—Ç—å –º–æ–π –±–∏–∑–Ω–µ—Å</h1>
              </div>
            ) : (
              <div className="flex items-center gap-2">
                <Award className="w-6 h-6 text-green-600" />
                <h1 className="text-2xl font-bold text-gray-900">–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–∞—Ç–∞–ª–æ–≥</h1>
              </div>
            )}
          </div>
          
          <p className="text-gray-600 text-sm">
            {isOwnerType 
              ? '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ —Å–≤–æ–µ –∑–∞–≤–µ–¥–µ–Ω–∏–µ –∏ –ø–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –ø—Ä–µ–º–∏—É–º —Ñ—É–Ω–∫—Ü–∏—è–º'
              : '–ü–æ–º–æ–≥–∏—Ç–µ —Å–æ–æ–±—â–µ—Å—Ç–≤—É - –¥–æ–±–∞–≤—å—Ç–µ –º–µ—Å—Ç–æ, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã –∑–Ω–∞–µ—Ç–µ'
            }
          </p>
        </div>
      </div>

      {/* Benefits Card */}
      <Card className={`mb-6 ${isOwnerType ? 'border-blue-200 bg-blue-50' : 'border-green-200 bg-green-50'}`}>
        <CardContent className="p-6">
          <h3 className="font-semibold mb-3 flex items-center">
            {isOwnerType ? (
              <>
                <Crown className="w-5 h-5 mr-2 text-blue-600" />
                –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –≤–ª–∞–¥–µ–ª—å—Ü–∞
              </>
            ) : (
              <>
                <Award className="w-5 h-5 mr-2 text-green-600" />
                –ó–∞ –≤–∞—à—É –ø–æ–º–æ—â—å
              </>
            )}
          </h3>
          
          <div className="grid grid-cols-1 gap-3">
            {isOwnerType ? (
              <>
                <div className="flex items-center text-sm">
                  <Star className="w-4 h-4 mr-2 text-blue-500" />
                  <span>–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –∑–∞–≤–µ–¥–µ–Ω–∏—è —Å –∑–µ–ª–µ–Ω–æ–π –≥–∞–ª–æ—á–∫–æ–π</span>
                </div>
                <div className="flex items-center text-sm">
                  <Building className="w-4 h-4 mr-2 text-blue-500" />
                  <span>–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö –ø–æ–∏—Å–∫–∞</span>
                </div>
                <div className="flex items-center text-sm">
                  <Users className="w-4 h-4 mr-2 text-blue-500" />
                  <span>–û—Ç–≤–µ—Ç—ã –Ω–∞ –æ—Ç–∑—ã–≤—ã –∫–ª–∏–µ–Ω—Ç–æ–≤</span>
                </div>
                <div className="flex items-center text-sm">
                  <Crown className="w-4 h-4 mr-2 text-blue-500" />
                  <span>–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –∏ –∑–≤–æ–Ω–∫–æ–≤</span>
                </div>
              </>
            ) : (
              <>
                <div className="flex items-center text-sm">
                  <Award className="w-4 h-4 mr-2 text-green-500" />
                  <span>+5 –±–∞–ª–ª–æ–≤ –∑–∞ –∫–∞–∂–¥–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–µ –º–µ—Å—Ç–æ</span>
                </div>
                <div className="flex items-center text-sm">
                  <Camera className="w-4 h-4 mr-2 text-green-500" />
                  <span>+2 –±–∞–ª–ª–∞ –∑–∞ –∫–∞–∂–¥–æ–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ —Ñ–æ—Ç–æ</span>
                </div>
                <div className="flex items-center text-sm">
                  <Star className="w-4 h-4 mr-2 text-green-500" />
                  <span>–ó–Ω–∞—á–∫–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –≤ –ø—Ä–æ—Ñ–∏–ª–µ</span>
                </div>
                <div className="flex items-center text-sm">
                  <Users className="w-4 h-4 mr-2 text-green-500" />
                  <span>–ü–æ–∑–∏—Ü–∏—è –≤ –ª–∏–¥–µ—Ä–±–æ—Ä–¥–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞</span>
                </div>
              </>
            )}
          </div>
        </CardContent>
      </Card>

      {/* Progress */}
      <div className="mb-6">
        <div className="flex items-center justify-between mb-4">
          <span className="text-sm font-medium text-gray-600">
            –®–∞–≥ {step} –∏–∑ 4
          </span>
          <div className="flex space-x-1">
            {[1, 2, 3, 4].map((i) => (
              <div
                key={i}
                className={`w-2 h-2 rounded-full ${
                  i <= step ? 'bg-blue-600' : 'bg-gray-300'
                }`}
              />
            ))}
          </div>
        </div>
        
        <div className="w-full bg-gray-200 rounded-full h-2">
          <div 
            className="bg-blue-600 h-2 rounded-full transition-all duration-300"
            style={{ width: `${(step / 4) * 100}%` }}
          />
        </div>
      </div>

      {/* Step 1: Basic Info */}
      {step === 1 && (
        <Card>
          <CardHeader>
            <CardTitle className="flex items-center">
              <Building className="w-5 h-5 mr-2" />
              –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
            </CardTitle>
            <CardDescription>
              –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –∑–∞–≤–µ–¥–µ–Ω–∏–∏
            </CardDescription>
          </CardHeader>
          <CardContent className="space-y-4">
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–≤–µ–¥–µ–Ω–∏—è *
              </label>
              <input
                type="text"
                value={formData.name}
                onChange={(e) => setFormData({...formData, name: e.target.value})}
                className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –†–µ—Å—Ç–æ—Ä–∞–Ω –†—É—Å—Å–∫–∏–π –¥–æ–º"
              />
            </div>
            
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –ö–∞—Ç–µ–≥–æ—Ä–∏—è *
              </label>
              <select 
                value={formData.category}
                onChange={(e) => setFormData({...formData, category: e.target.value})}
                className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              >
                <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é</option>
                <option value="restaurants">üçΩÔ∏è –†–µ—Å—Ç–æ—Ä–∞–Ω—ã –∏ –∫–∞—Ñ–µ</option>
                <option value="healthcare">‚öïÔ∏è –ú–µ–¥–∏—Ü–∏–Ω–∞</option>
                <option value="legal">‚öñÔ∏è –Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ —É—Å–ª—É–≥–∏</option>
                <option value="beauty">üíÑ –ö—Ä–∞—Å–æ—Ç–∞ –∏ –∑–¥–æ—Ä–æ–≤—å–µ</option>
                <option value="auto">üîß –ê–≤—Ç–æ—Å–µ—Ä–≤–∏—Å—ã</option>
                <option value="finance">üè¶ –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —É—Å–ª—É–≥–∏</option>
                <option value="education">üéì –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ</option>
                <option value="realestate">üè† –ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å</option>
              </select>
            </div>
            
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
              </label>
              <textarea
                value={formData.description}
                onChange={(e) => setFormData({...formData, description: e.target.value})}
                className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                rows={3}
                placeholder="–ö—Ä–∞—Ç–∫–æ –æ–ø–∏—à–∏—Ç–µ –∑–∞–≤–µ–¥–µ–Ω–∏–µ, –∫—É—Ö–Ω—é, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é..."
              />
            </div>

            {/* Language selection */}
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –Ø–∑—ã–∫–∏ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è
              </label>
              <div className="flex flex-wrap gap-2">
                {['ru', 'en', 'es', 'zh'].map((lang) => {
                  const labels = {ru: 'üá∑üá∫ –†—É—Å—Å–∫–∏–π', en: 'üá∫üá∏ English', es: 'üá™üá∏ Espa√±ol', zh: 'üá®üá≥ ‰∏≠Êñá'};
                  const isSelected = formData.languages.includes(lang);
                  
                  return (
                    <button
                      key={lang}
                      type="button"
                      onClick={() => {
                        if (isSelected) {
                          setFormData({
                            ...formData,
                            languages: formData.languages.filter(l => l !== lang)
                          });
                        } else {
                          setFormData({
                            ...formData,
                            languages: [...formData.languages, lang]
                          });
                        }
                      }}
                      className={`px-3 py-2 rounded-lg text-sm font-medium border transition-colors ${
                        isSelected 
                          ? 'bg-blue-100 border-blue-500 text-blue-700' 
                          : 'bg-white border-gray-300 text-gray-700 hover:bg-gray-50'
                      }`}
                    >
                      {labels[lang]}
                    </button>
                  );
                })}
              </div>
            </div>

            {isOwnerType && (
              <div className="bg-blue-50 p-4 rounded-lg">
                <div className="flex items-start">
                  <Crown className="w-5 h-5 text-blue-600 mr-2 mt-0.5" />
                  <div>
                    <h4 className="font-medium text-blue-900 mb-1">–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤–ª–∞–¥–µ–Ω–∏—è</h4>
                    <p className="text-sm text-blue-700">
                      –ù–∞ —Å–ª–µ–¥—É—é—â–µ–º —à–∞–≥–µ –º—ã –ø–æ–ø—Ä–æ—Å–∏–º –¥–æ–∫—É–º–µ–Ω—Ç—ã, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—â–∏–µ, —á—Ç–æ –≤—ã —è–≤–ª—è–µ—Ç–µ—Å—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –∏–ª–∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª–µ–º –∑–∞–≤–µ–¥–µ–Ω–∏—è.
                    </p>
                  </div>
                </div>
              </div>
            )}
          </CardContent>
        </Card>
      )}

      {/* Step 2: Address & Contacts */}
      {step === 2 && (
        <Card>
          <CardHeader>
            <CardTitle className="flex items-center">
              <MapPin className="w-5 h-5 mr-2" />
              –ê–¥—Ä–µ—Å –∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã
            </CardTitle>
            <CardDescription>
              –ì–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –∑–∞–≤–µ–¥–µ–Ω–∏–µ
            </CardDescription>
          </CardHeader>
          <CardContent className="space-y-4">
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –ü–æ–ª–Ω—ã–π –∞–¥—Ä–µ—Å *
              </label>
              <input
                type="text"
                value={formData.address}
                onChange={(e) => setFormData({...formData, address: e.target.value})}
                className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                placeholder="1273 Brighton Beach Ave, Brooklyn, NY 11235"
              />
            </div>
            
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –ì–æ—Ä–æ–¥ *
              </label>
              <select 
                value={formData.city}
                onChange={(e) => setFormData({...formData, city: e.target.value})}
                className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              >
                <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥</option>
                <option value="new-york">–ù—å—é-–ô–æ—Ä–∫</option>
                <option value="los-angeles">–õ–æ—Å-–ê–Ω–¥–∂–µ–ª–µ—Å</option>
                <option value="chicago">–ß–∏–∫–∞–≥–æ</option>
                <option value="miami">–ú–∞–π–∞–º–∏</option>
                <option value="san-francisco">–°–∞–Ω-–§—Ä–∞–Ω—Ü–∏—Å–∫–æ</option>
                <option value="boston">–ë–æ—Å—Ç–æ–Ω</option>
                <option value="seattle">–°–∏—ç—Ç–ª</option>
                <option value="philadelphia">–§–∏–ª–∞–¥–µ–ª—å—Ñ–∏—è</option>
              </select>
            </div>
            
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –¢–µ–ª–µ—Ñ–æ–Ω
              </label>
              <input
                type="tel"
                value={formData.phone}
                onChange={(e) => setFormData({...formData, phone: e.target.value})}
                className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                placeholder="(718) 555-0123"
              />
            </div>
            
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –í–µ–±-—Å–∞–π—Ç
              </label>
              <input
                type="url"
                value={formData.website}
                onChange={(e) => setFormData({...formData, website: e.target.value})}
                className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                placeholder="https://example.com"
              />
            </div>

            {/* Additional features */}
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-3">
                –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É–¥–æ–±—Å—Ç–≤–∞
              </label>
              <div className="grid grid-cols-2 gap-3">
                {[
                  { key: 'parking', label: 'üÖøÔ∏è –ü–∞—Ä–∫–æ–≤–∫–∞', icon: 'üÖøÔ∏è' },
                  { key: 'wifi', label: 'üì∂ Wi-Fi', icon: 'üì∂' },
                  { key: 'delivery', label: 'üöö –î–æ—Å—Ç–∞–≤–∫–∞', icon: 'üöö' },
                  { key: 'takeout', label: 'ü•° –ù–∞ –≤—ã–Ω–æ—Å', icon: 'ü•°' },
                  { key: 'cards', label: 'üí≥ –ö–∞—Ä—Ç—ã', icon: 'üí≥' },
                  { key: 'accessible', label: '‚ôø –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å', icon: '‚ôø' }
                ].map((feature) => (
                  <label key={feature.key} className="flex items-center space-x-2 cursor-pointer">
                    <input
                      type="checkbox"
                      className="rounded border-gray-300 text-blue-600 focus:ring-blue-500"
                    />
                    <span className="text-sm">{feature.label}</span>
                  </label>
                ))}
              </div>
            </div>
          </CardContent>
        </Card>
      )}

      {/* Step 3: Photos & Hours */}
      {step === 3 && (
        <Card>
          <CardHeader>
            <CardTitle className="flex items-center">
              <Camera className="w-5 h-5 mr-2" />
              –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏ —á–∞—Å—ã —Ä–∞–±–æ—Ç—ã
            </CardTitle>
            <CardDescription>
              –î–æ–±–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –∏ —É–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã
            </CardDescription>
          </CardHeader>
          <CardContent className="space-y-6">
            {/* Photo Upload */}
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-3">
                –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∑–∞–≤–µ–¥–µ–Ω–∏—è
              </label>
              <div className="border-2 border-dashed border-gray-300 rounded-lg p-8 text-center hover:border-gray-400 transition-colors">
                <Upload className="w-8 h-8 text-gray-400 mx-auto mb-2" />
                <p className="text-sm text-gray-600 mb-2">
                  –ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —Å—é–¥–∞ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –¥–ª—è –≤—ã–±–æ—Ä–∞
                </p>
                <p className="text-xs text-gray-500">
                  {isOwnerType ? '–î–æ 10 —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π' : '–î–æ 5 —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π'} ‚Ä¢ PNG, JPG –¥–æ 10MB
                </p>
                <Button variant="outline" size="sm" className="mt-3">
                  –í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª—ã
                </Button>
              </div>
              
              {isOwnerType && (
                <p className="text-xs text-blue-600 mt-2">
                  üí° –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ñ–æ—Ç–æ —É–≤–µ–ª–∏—á–∏–≤–∞—é—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª–∏–µ–Ω—Ç–æ–≤ –Ω–∞ 40%
                </p>
              )}
            </div>

            {/* Business Hours */}
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-3">
                –ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã
              </label>
              <div className="space-y-3">
                {[
                  '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', '–í—Ç–æ—Ä–Ω–∏–∫', '–°—Ä–µ–¥–∞', '–ß–µ—Ç–≤–µ—Ä–≥', 
                  '–ü—è—Ç–Ω–∏—Ü–∞', '–°—É–±–±–æ—Ç–∞', '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ'
                ].map((day, index) => (
                  <div key={day} className="flex items-center space-x-3">
                    <div className="w-24 text-sm font-medium text-gray-700">
                      {day}
                    </div>
                    <input
                      type="time"
                      className="px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                      placeholder="09:00"
                    />
                    <span className="text-gray-500">–¥–æ</span>
                    <input
                      type="time"
                      className="px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                      placeholder="18:00"
                    />
                    <label className="flex items-center">
                      <input
                        type="checkbox"
                        className="rounded border-gray-300 text-blue-600 focus:ring-blue-500"
                      />
                      <span className="ml-2 text-sm text-gray-600">–í—ã—Ö–æ–¥–Ω–æ–π</span>
                    </label>
                  </div>
                ))}
              </div>
            </div>
          </CardContent>
        </Card>
      )}

      {/* Step 4: Review & Submit */}
      {step === 4 && (
        <Card>
          <CardHeader>
            <CardTitle className="flex items-center">
              <CheckCircle className="w-5 h-5 mr-2" />
              –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞
            </CardTitle>
            <CardDescription>
              –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π
            </CardDescription>
          </CardHeader>
          <CardContent className="space-y-6">
            {/* Summary */}
            <div className="bg-gray-50 rounded-lg p-4">
              <h4 className="font-semibold mb-3">{formData.name || '–ù–∞–∑–≤–∞–Ω–∏–µ –Ω–µ —É–∫–∞–∑–∞–Ω–æ'}</h4>
              <div className="space-y-2 text-sm">
                <div><span className="font-medium">–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</span> {formData.category || '–ù–µ –≤—ã–±—Ä–∞–Ω–∞'}</div>
                <div><span className="font-medium">–ê–¥—Ä–µ—Å:</span> {formData.address || '–ù–µ —É–∫–∞–∑–∞–Ω'}</div>
                <div><span className="font-medium">–ì–æ—Ä–æ–¥:</span> {formData.city || '–ù–µ –≤—ã–±—Ä–∞–Ω'}</div>
                {formData.phone && <div><span className="font-medium">–¢–µ–ª–µ—Ñ–æ–Ω:</span> {formData.phone}</div>}
                {formData.website && <div><span className="font-medium">–°–∞–π—Ç:</span> {formData.website}</div>}
                <div><span className="font-medium">–Ø–∑—ã–∫–∏:</span> {formData.languages.join(', ')}</div>
              </div>
            </div>

            {/* Owner verification for business owners */}
            {isOwnerType && (
              <div className="bg-blue-50 p-4 rounded-lg">
                <h4 className="font-medium text-blue-900 mb-2">–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤–ª–∞–¥–µ–Ω–∏—è</h4>
                <p className="text-sm text-blue-700 mb-3">
                  –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∑–∞–≥—Ä—É–∑–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤:
                </p>
                <ul className="text-xs text-blue-600 space-y-1 mb-4">
                  <li>‚Ä¢ –ë–∏–∑–Ω–µ—Å-–ª–∏—Ü–µ–Ω–∑–∏—è</li>
                  <li>‚Ä¢ –î–æ–∫—É–º–µ–Ω—Ç—ã –æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∫–æ–º–ø–∞–Ω–∏–∏</li>
                  <li>‚Ä¢ –ù–∞–ª–æ–≥–æ–≤—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã</li>
                  <li>‚Ä¢ –î–æ–≥–æ–≤–æ—Ä –∞—Ä–µ–Ω–¥—ã –Ω–∞ –∏–º—è –∫–æ–º–ø–∞–Ω–∏–∏</li>
                </ul>
                <Button variant="outline" size="sm">
                  <Upload className="w-4 h-4 mr-2" />
                  –ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç
                </Button>
              </div>
            )}

            {/* Terms */}
            <div className="border border-gray-200 rounded-lg p-4">
              <label className="flex items-start space-x-3">
                <input
                  type="checkbox"
                  className="rounded border-gray-300 text-blue-600 focus:ring-blue-500 mt-1"
                />
                <div className="text-sm">
                  <span>–Ø —Å–æ–≥–ª–∞—Å–µ–Ω —Å </span>
                  <Link href="/terms" className="text-blue-600 hover:underline">
                    —É—Å–ª–æ–≤–∏—è–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
                  </Link>
                  <span> –∏ </span>
                  <Link href="/privacy" className="text-blue-600 hover:underline">
                    –ø–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
                  </Link>
                  <div className="text-xs text-gray-500 mt-1">
                    {isOwnerType 
                      ? '–ó–∞–≤–µ–¥–µ–Ω–∏–µ –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤'
                      : '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞ –ø–µ—Ä–µ–¥ –ø—É–±–ª–∏–∫–∞—Ü–∏–µ–π'
                    }
                  </div>
                </div>
              </label>
            </div>
          </CardContent>
        </Card>
      )}

      {/* Navigation Buttons */}
      <div className="flex gap-3 mt-6 pb-20">
        {step > 1 && (
          <Button
            variant="outline"
            onClick={handlePrev}
            className="flex-1"
          >
            –ù–∞–∑–∞–¥
          </Button>
        )}
        
        {step < 4 ? (
          <Button
            onClick={handleNext}
            className="flex-1"
            disabled={
              (step === 1 && (!formData.name || !formData.category)) ||
              (step === 2 && (!formData.address || !formData.city))
            }
          >
            –î–∞–ª–µ–µ
          </Button>
        ) : (
          <Button
            onClick={handleSubmit}
            className="flex-1 bg-green-600 hover:bg-green-700"
          >
            {isOwnerType ? (
              <>
                <Crown className="w-4 h-4 mr-2" />
                –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –±–∏–∑–Ω–µ—Å
              </>
            ) : (
              <>
                <Award className="w-4 h-4 mr-2" />
                –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–∞—Ç–∞–ª–æ–≥
              </>
            )}
          </Button>
        )}
      </div>
    </div>
  );
}

export default function AddBusinessPage() {
  return (
    <Suspense fallback={
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-4"></div>
          <p className="text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞...</p>
        </div>
      </div>
    }>
      <AddBusinessContent />
    </Suspense>
  );
}