'use client';

import { useEffect, useState } from 'react';
import { logger } from '@/utils/logger';

interface TelegramProviderProps {
  children: React.ReactNode;
  debug?: boolean;
}

/**
 * –û–ë–ù–û–í–õ–ï–ù–ù–´–ô TELEGRAM PROVIDER –î–õ–Ø 3GIS
 * ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –Ω–∞—Ç–∏–≤–Ω—ã–π Telegram WebApp API
 * ‚úÖ SSR —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –¥–ª—è Next.js
 * ‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
 * ‚úÖ Graceful fallback –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
 */
export function TelegramProvider({
  children,
  debug = process.env.NODE_ENV === 'development',
}: TelegramProviderProps) {
  const [isInitialized, setIsInitialized] = useState(false);
  const [initError, setInitError] = useState<string | null>(null);

  useEffect(() => {
    let isMounted = true;

    const initializeWebApp = async () => {
      try {
        if (debug) {
          logger.log('üöÄ Initializing Telegram WebApp...');
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Telegram WebApp
        if (typeof window !== 'undefined') {
          if (window.Telegram?.WebApp) {
            const webApp = window.Telegram.WebApp;
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º WebApp
            webApp.ready();
            
            // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –¥–ª—è 3GIS
            try {
              webApp.expand();
              
              // –¶–≤–µ—Ç–∞ –¥–ª—è 3GIS
              if (typeof webApp.setHeaderColor === 'function') {
                webApp.setHeaderColor('#1f2937'); // gray-800
              }
              
              if (typeof webApp.setBackgroundColor === 'function') {
                webApp.setBackgroundColor('#f9fafb'); // gray-50
              }
              
              if (debug) {
                logger.log('‚úÖ Telegram WebApp configured for 3GIS');
              }
            } catch (configError) {
              if (debug) {
              logger.warn('‚ö†Ô∏è Some WebApp features not available:', configError);
              }
            }
          } else {
            // –î–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –±–µ–∑ Telegram
            if (debug) {
              logger.warn('‚ö†Ô∏è Telegram WebApp not available - running in development mode');
            }
          }
        }
        
        if (isMounted) {
          setIsInitialized(true);
          if (debug) {
            logger.log('‚úÖ 3GIS Telegram initialization completed');
          }
        }
      } catch (error) {
        logger.error('‚ùå Telegram WebApp initialization failed:', error);
        
        if (isMounted) {
          const errorMessage = error instanceof Error 
            ? error.message 
            : 'Unknown WebApp initialization error';
          setInitError(errorMessage);
        }
      }
    };

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º WebApp —Ç–æ–ª—å–∫–æ –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ
    if (typeof window !== 'undefined') {
      // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ Telegram script
      setTimeout(initializeWebApp, 100);
    } else {
      // –ù–∞ —Å–µ—Ä–≤–µ—Ä–µ —Å—á–∏—Ç–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –¥–ª—è SSR
      setIsInitialized(true);
    }

    return () => {
      isMounted = false;
    };
  }, [debug]);

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
  if (initError) {
    return (
      <div className="min-h-screen flex items-center justify-center bg-gray-50 p-4">
        <div className="text-center max-w-md">
          <div className="text-red-500 text-6xl mb-4">‚ö†Ô∏è</div>
          <h2 className="text-xl font-semibold text-gray-900 mb-4">
            –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Telegram
          </h2>
          <p className="text-gray-600 mb-6">
            {initError}
          </p>
          <button
            onClick={() => window.location.reload()}
            className="bg-blue-500 hover:bg-blue-600 text-white px-6 py-3 rounded-lg transition-colors"
          >
            –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
          </button>
        </div>
      </div>
    );
  }

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –ø–æ–∫–∞ WebApp –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è
  if (!isInitialized) {
    return (
      <div className="min-h-screen flex items-center justify-center bg-gradient-to-br from-blue-50 to-indigo-100">
        <div className="text-center bg-white rounded-2xl shadow-xl p-8 max-w-md w-full mx-4">
          <div className="flex flex-col items-center space-y-4">
            <div className="relative">
              <div className="animate-spin rounded-full h-12 w-12 border-4 border-blue-500 border-t-transparent"></div>
              <div className="absolute inset-0 flex items-center justify-center">
                <div className="text-2xl">üöÄ</div>
              </div>
            </div>
            
            <div className="space-y-2">
              <h2 className="text-xl font-bold text-gray-900">
                3<span className="text-yellow-500">GIS</span>
              </h2>
              <p className="text-gray-600">
                –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...
              </p>
            </div>
            
            <div className="w-full bg-gray-200 rounded-full h-2">
              <div className="bg-blue-500 h-2 rounded-full animate-pulse" style={{ width: '70%' }}></div>
            </div>
          </div>
        </div>
      </div>
    );
  }

  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º WebApp
  return <>{children}</>;
}

/**
 * HOC –¥–ª—è –æ–±–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –≤ TelegramProvider
 */
export function withTelegramProvider<T extends Record<string, any>>(
  Component: React.ComponentType<T>,
  options?: { debug?: boolean }
) {
  const WrappedComponent = (props: T) => (
    <TelegramProvider {...options}>
      <Component {...props} />
    </TelegramProvider>
  );

  WrappedComponent.displayName = `withTelegramProvider(${Component.displayName || Component.name})`;
  
  return WrappedComponent;
}

/**
 * –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Telegram WebApp
 */
export const TelegramUtils = {
  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ Telegram WebApp
   */
  isAvailable(): boolean {
    return typeof window !== 'undefined' && !!window.Telegram?.WebApp;
  },

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ WebApp
   */
  getUser() {
    if (!this.isAvailable()) return null;
    return window.Telegram!.WebApp.initDataUnsafe?.user || null;
  },

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ initData –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
   */
  getInitData(): string | null {
    if (!this.isAvailable()) return null;
    return window.Telegram!.WebApp.initData || null;
  },

  /**
   * –ó–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
   */
  close(): void {
    if (this.isAvailable()) {
      window.Telegram!.WebApp.close();
    }
  },

  /**
   * –ü–æ–∫–∞–∑ –∞–ª–µ—Ä—Ç–∞
   */
  showAlert(message: string): void {
    if (this.isAvailable()) {
      window.Telegram!.WebApp.showAlert(message);
    } else {
      alert(message);
    }
  },

  /**
   * Haptic feedback
   */
  hapticFeedback(type: 'light' | 'medium' | 'heavy' = 'light'): void {
    if (this.isAvailable()) {
      window.Telegram!.WebApp.HapticFeedback?.impactOccurred(type);
    }
  },
};
