// src/components/environment/EnvironmentDetector.tsx
'use client';

import { useEffect, useState } from 'react';
import { ExternalLink, Smartphone, AlertTriangle } from 'lucide-react';

interface EnvironmentState {
  isTelegramEnvironment: boolean;
  isMobile: boolean;
  userAgent: string;
  hasWebAppParams: boolean;
  loading: boolean;
}

/**
 * ‚úÖ –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –¥–µ—Ç–µ–∫—Ü–∏–∏ —Å—Ä–µ–¥—ã –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è (SDK v3.x —Å–æ–≤–º–µ—Å—Ç–∏–º—ã–π)
 * –ë–µ–∑–æ–ø–∞—Å–Ω–æ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –∑–∞–ø—É—â–µ–Ω–æ –ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä–∏ Telegram
 * –û—Å–Ω–æ–≤–∞–Ω –Ω–∞ –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ @telegram-apps/sdk v3.10.1
 */
export function EnvironmentDetector({ children }: { children: React.ReactNode }) {
  const [env, setEnv] = useState<EnvironmentState>({
    isTelegramEnvironment: false,
    isMobile: false,
    userAgent: '',
    hasWebAppParams: false,
    loading: true
  });

  useEffect(() => {
    if (typeof window === 'undefined') return;

    // –î–µ—Ç–µ–∫—Ü–∏—è —Å—Ä–µ–¥—ã –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏
    const detectEnvironment = () => {
      const userAgent = navigator.userAgent || '';
      const isMobile = /Android|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(userAgent);
      
      // ‚úÖ –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ Telegram —Å—Ä–µ–¥—ã —Å–æ–≥–ª–∞—Å–Ω–æ SDK v3.x
      const checks = {
        // 1. –ù–∞–ª–∏—á–∏–µ –æ–±—ä–µ–∫—Ç–∞ Telegram WebApp (–æ—Å–Ω–æ–≤–Ω–æ–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä)
        hasWebApp: !!(window as any)?.Telegram?.WebApp,
        
        // 2. –ù–∞–ª–∏—á–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ WebApp –≤ URL (–¥–ª—è –ø—Ä—è–º—ã—Ö —Å—Å—ã–ª–æ–∫)
        hasWebAppParams: window.location.search.includes('tgWebApp') || 
                        window.location.hash.includes('tgWebApp'),
        
        // 3. User-Agent —Å–æ–¥–µ—Ä–∂–∏—Ç Telegram
        hasTelegramUA: userAgent.includes('Telegram'),
        
        // 4. –ù–∞–ª–∏—á–∏–µ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∑–∞–ø—É—Å–∫–∞ v3.x
        hasLaunchParams: window.location.search.includes('tgWebAppStartParam') ||
                        window.location.search.includes('tgWebAppPlatform') ||
                        window.location.hash.includes('tgWebAppStartParam'),
        
        // 5. –†–µ—Ñ–µ—Ä–µ–Ω—Å–µ—Ä –æ—Ç Telegram
        hasTelegramReferrer: document.referrer.includes('telegram') || 
                           document.referrer.includes('t.me'),

        // 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ window.parent (–¥–ª—è iframe)
        isInFrame: window !== window.parent,
        
        // 7. –ù–∞–ª–∏—á–∏–µ postMessage —Ñ—É–Ω–∫—Ü–∏–π Telegram (—Ä–∞–∑–Ω—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã)
        hasPostMessage: !!(window as any)?.TelegramWebviewProxy?.postEvent ||
                       !!(window as any)?.external?.notify ||
                       !!(window as any)?.TelegramGameProxy,
                       
        // 8. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Telegram bridge —Ñ—É–Ω–∫—Ü–∏–π
        hasTelegramBridge: !!(window as any)?.TelegramWebview ||
                          !!(window as any)?.TelegramWebApp
      };

      // ‚úÖ –û–ø—Ä–µ–¥–µ–ª—è–µ–º Telegram —Å—Ä–µ–¥—É –ø–æ –ª—é–±–æ–º—É –∏–∑ –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤
      const isTelegramEnvironment = Object.values(checks).some(Boolean);

      console.log('üîç Environment Detection (SDK v3.x):', {
        checks,
        isTelegramEnvironment,
        userAgent: userAgent.substring(0, 100) + '...',
        url: window.location.href,
        referrer: document.referrer
      });

      setEnv({
        isTelegramEnvironment,
        isMobile,
        userAgent,
        hasWebAppParams: checks.hasWebAppParams || checks.hasLaunchParams,
        loading: false
      });
    };

    // ‚úÖ –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    const timeoutId = setTimeout(detectEnvironment, 100);
    
    // ‚úÖ –¢–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', detectEnvironment);
    }
    
    return () => {
      clearTimeout(timeoutId);
      document.removeEventListener('DOMContentLoaded', detectEnvironment);
    };
  }, []);

  // ‚úÖ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
  if (env.loading) {
    return (
      <div className="min-h-screen flex items-center justify-center bg-gray-50">
        <div className="text-center">
          <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-4"></div>
          <p className="text-gray-600">–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ä–µ–¥—ã –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è...</p>
        </div>
      </div>
    );
  }

  // ‚úÖ –ï—Å–ª–∏ –ù–ï –≤ Telegram - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
  if (!env.isTelegramEnvironment) {
    return <RedirectToTelegramScreen isMobile={env.isMobile} />;
  }

  // ‚úÖ –ï—Å–ª–∏ –≤ Telegram - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
  return <>{children}</>;
}

/**
 * ‚úÖ –≠–∫—Ä–∞–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –æ—Ç–∫—Ä—ã–≤—à–∏—Ö —Å—Å—ã–ª–∫—É –≤–Ω–µ Telegram
 * –°–æ–≤–º–µ—Å—Ç–∏–º–æ —Å Next.js 15.3.3 –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º–∏ UX
 */
function RedirectToTelegramScreen({ isMobile }: { isMobile: boolean }) {
  const botUsername = process.env.NEXT_PUBLIC_TELEGRAM_BOT_USERNAME || 'ThreeGIS_bot';
  const appName = process.env.NEXT_PUBLIC_WEBSITE_NAME || '3GIS';
  
  // ‚úÖ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –¥–ª—è Telegram Mini App
  const telegramLink = `https://t.me/${botUsername}/app`;
  
  const handleOpenInTelegram = () => {
    // ‚úÖ –î–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –ø—Ä–æ–±—É–µ–º –ø—Ä–æ—Ç–æ–∫–æ–ª, –∑–∞—Ç–µ–º –≤–µ–±-—Å—Å—ã–ª–∫—É
    if (isMobile) {
      const telegramProtocol = `tg://resolve?domain=${botUsername}&appname=app`;
      
      try {
        // –ü—Ä–æ–±—É–µ–º —Å–Ω–∞—á–∞–ª–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ—Ç–æ–∫–æ–ª
        window.location.href = telegramProtocol;
        
        // Fallback —á–µ—Ä–µ–∑ –≤–µ–±-—Å—Å—ã–ª–∫—É —á–µ—Ä–µ–∑ –∑–∞–¥–µ—Ä–∂–∫—É
        setTimeout(() => {
          window.open(telegramLink, '_blank', 'noopener,noreferrer');
        }, 1500);
      } catch (error) {
        // –ï—Å–ª–∏ –ø—Ä–æ—Ç–æ–∫–æ–ª –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, —Å—Ä–∞–∑—É –≤–µ–±-—Å—Å—ã–ª–∫–∞
        window.open(telegramLink, '_blank', 'noopener,noreferrer');
      }
    } else {
      // ‚úÖ –î–ª—è –¥–µ—Å–∫—Ç–æ–ø–∞ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –≤ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–µ
      window.open(telegramLink, '_blank', 'noopener,noreferrer');
    }
  };

  const handleCopyLink = async () => {
    try {
      await navigator.clipboard.writeText(telegramLink);
      alert('–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!');
    } catch (error) {
      // Fallback –¥–ª—è —Å—Ç–∞—Ä—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤
      prompt('–°–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç—É —Å—Å—ã–ª–∫—É:', telegramLink);
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 flex items-center justify-center p-4">
      <div className="max-w-md w-full bg-white rounded-2xl shadow-xl p-8 text-center">
        {/* ‚úÖ –ò–∫–æ–Ω–∫–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è */}
        <div className="mb-6">
          <div className="mx-auto w-16 h-16 bg-amber-100 rounded-full flex items-center justify-center">
            <AlertTriangle className="w-8 h-8 text-amber-600" />
          </div>
        </div>

        {/* ‚úÖ –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <h1 className="text-2xl font-bold text-gray-900 mb-4">
          –û—Ç–∫—Ä–æ–π—Ç–µ –≤ Telegram
        </h1>

        {/* ‚úÖ –û–ø–∏—Å–∞–Ω–∏–µ */}
        <p className="text-gray-600 mb-6 leading-relaxed">
          {appName} - —ç—Ç–æ Telegram Mini App. –î–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç–∫—Ä—ã—Ç–æ –≤–Ω—É—Ç—Ä–∏ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–∞ Telegram.
        </p>

        {/* ‚úÖ –ö–Ω–æ–ø–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è */}
        <button
          onClick={handleOpenInTelegram}
          className="w-full bg-blue-600 hover:bg-blue-700 text-white font-semibold py-3 px-6 rounded-xl transition-colors mb-4 flex items-center justify-center gap-2"
        >
          {isMobile ? <Smartphone className="w-5 h-5" /> : <ExternalLink className="w-5 h-5" />}
          –û—Ç–∫—Ä—ã—Ç—å –≤ Telegram
        </button>

        {/* ‚úÖ –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞ */}
        <button
          onClick={handleCopyLink}
          className="w-full border border-gray-300 hover:border-gray-400 text-gray-700 font-medium py-3 px-6 rounded-xl transition-colors"
        >
          –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É
        </button>

        {/* ‚úÖ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ */}
        <div className="mt-6 text-left">
          <h3 className="font-semibold text-gray-900 mb-2">–ö–∞–∫ –æ—Ç–∫—Ä—ã—Ç—å:</h3>
          <ol className="text-sm text-gray-600 space-y-1">
            <li>1. –û—Ç–∫—Ä–æ–π—Ç–µ Telegram</li>
            <li>2. –ù–∞–π–¥–∏—Ç–µ –±–æ—Ç–∞ @{botUsername}</li>
            <li>3. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"</li>
          </ol>
        </div>

        {/* ‚úÖ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <div className="mt-6 p-4 bg-gray-50 rounded-lg">
          <p className="text-xs text-gray-500">
            {appName} –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ Telegram –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ –ª—É—á—à–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –æ–ø—ã—Ç–∞.
          </p>
        </div>
      </div>
    </div>
  );
}

/**
 * ‚úÖ –•—É–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å—Ä–µ–¥–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
 * –ú–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤ –¥—Ä—É–≥–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö –¥–ª—è —É—Å–ª–æ–≤–Ω–æ–π –ª–æ–≥–∏–∫–∏
 */
export function useEnvironmentDetection() {
  const [env, setEnv] = useState({
    isTelegramEnvironment: false,
    isMobile: false,
    userAgent: '',
    loading: true
  });

  useEffect(() => {
    if (typeof window === 'undefined') return;

    const userAgent = navigator.userAgent || '';
    const isMobile = /Android|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(userAgent);
    
    const isTelegramEnvironment = !!(window as any)?.Telegram?.WebApp ||
                                 userAgent.includes('Telegram') ||
                                 window.location.search.includes('tgWebApp') ||
                                 window.location.hash.includes('tgWebApp');

    setEnv({
      isTelegramEnvironment,
      isMobile,
      userAgent,
      loading: false
    });
  }, []);

  return env;
}