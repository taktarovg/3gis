// src/components/businesses/BusinessCard.tsx
'use client';

import React from 'react';
import { useRouter } from 'next/navigation';
import Image from 'next/image';
import { MapPin, Star, Clock } from 'lucide-react';
import { formatRating, formatDate } from '@/lib/utils';
import { FavoriteButton } from '@/components/favorites/FavoriteButton';
// ‚úÖ Telegram SDK v3.x - haptic feedback
import { hapticFeedbackImpactOccurred } from '@telegram-apps/sdk';

interface Business {
  id: number;
  name: string;
  nameEn?: string | null;
  description?: string | null;
  address: string;
  phone?: string | null;
  website?: string | null;
  rating: number;
  reviewCount: number;
  languages: string[];
  hasParking: boolean;
  premiumTier: string;
  latitude?: number;
  longitude?: number;
  distance?: number; // –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –≤ –∫–º
  isFavorite?: boolean; // –î–ª—è optimistic updates
  category: {
    name: string;
    icon: string;
  };
  city: {
    name: string;
    state: string;
  };
  photos: {
    url: string;
  }[];
  _count?: {
    reviews: number;
    favorites: number;
  };
}

interface BusinessCardProps {
  business: Business;
  showFavoriteButton?: boolean;
  isFavorite?: boolean;
  showAddedDate?: boolean;
  addedDate?: string;
  variant?: 'default' | 'compact';
}

/**
 * ‚úÖ –û–ü–¢–ò–ú–ò–ó–ò–†–û–í–ê–ù–ù–ê–Ø –ö–ê–†–¢–û–ß–ö–ê –ó–ê–í–ï–î–ï–ù–ò–Ø
 * - –í—Å—è –∫–∞—Ä—Ç–æ—á–∫–∞ –∫–ª–∏–∫–∞–±–µ–ª—å–Ω–∞ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –ø—Ä–æ—Ñ–∏–ª—å
 * - –°–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ "–ò–∑–±—Ä–∞–Ω–Ω–æ–µ" —Å –æ—Å—Ç–∞–Ω–æ–≤–∫–æ–π –≤—Å–ø–ª—ã—Ç–∏—è —Å–æ–±—ã—Ç–∏—è
 * - –£–±—Ä–∞–Ω—ã –∫–Ω–æ–ø–∫–∏ "–ü–æ–∑–≤–æ–Ω–∏—Ç—å", "–ú–∞—Ä—à—Ä—É—Ç" –∏ "–ü–æ–¥—Ä–æ–±–Ω–µ–µ"
 * - –î–æ–±–∞–≤–ª–µ–Ω haptic feedback –ø—Ä–∏ –∫–ª–∏–∫–µ
 */
export function BusinessCard({ 
  business,
  showFavoriteButton = false,
  isFavorite = false,
  showAddedDate = false,
  addedDate,
  variant = 'default'
}: BusinessCardProps) {
  const router = useRouter();
  const compactMode = variant === 'compact';

  // ‚úÖ –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –∫–∞—Ä—Ç–æ—á–∫–µ
  const handleCardClick = async () => {
    try {
      // ‚úÖ Haptic feedback –ø—Ä–∏ –∫–ª–∏–∫–µ (SDK v3.x)
      if (hapticFeedbackImpactOccurred.isAvailable()) {
        hapticFeedbackImpactOccurred('light');
      }
      
      // –ü–µ—Ä–µ—Ö–æ–¥ –≤ –ø—Ä–æ—Ñ–∏–ª—å –∑–∞–≤–µ–¥–µ–Ω–∏—è
      router.push(`/tg/business/${business.id}`);
    } catch (error) {
      console.error('Navigation error:', error);
      // Fallback navigation –±–µ–∑ haptic feedback
      router.push(`/tg/business/${business.id}`);
    }
  };

  // ‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ (–æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–ø–ª—ã—Ç–∏–µ)
  const handleFavoriteClick = (e: React.MouseEvent) => {
    e.stopPropagation(); // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –ø–µ—Ä–µ—Ö–æ–¥ –ø–æ –∫–ª–∏–∫—É –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫—É
  };

  return (
    <div 
      className="relative bg-white rounded-xl border border-gray-200 overflow-hidden shadow-sm hover:shadow-md transition-all duration-200 cursor-pointer active:scale-[0.98]"
      onClick={handleCardClick}
      role="button"
      tabIndex={0}
      onKeyDown={(e) => {
        if (e.key === 'Enter' || e.key === ' ') {
          e.preventDefault();
          handleCardClick();
        }
      }}
      aria-label={`–û—Ç–∫—Ä—ã—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –∑–∞–≤–µ–¥–µ–Ω–∏—è ${business.name}`}
    >
      {/* Header with Premium badge and Favorite button */}
      <div className="absolute top-3 left-3 right-3 flex items-start justify-between z-10">
        {/* Premium badge */}
        {business.premiumTier !== 'FREE' && (
          <div className="bg-yellow-500 text-black px-2 py-1 rounded-md text-xs font-bold shadow-sm">
            ‚≠ê PREMIUM
          </div>
        )}
        
        <div className="flex-1" />
        
        {/* ‚úÖ –ö–Ω–æ–ø–∫–∞ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ —Å –æ—Å—Ç–∞–Ω–æ–≤–∫–æ–π –≤—Å–ø–ª—ã—Ç–∏—è */}
        {showFavoriteButton && (
          <div onClick={handleFavoriteClick}>
            <FavoriteButton
              businessId={business.id}
              initialIsFavorite={isFavorite || business.isFavorite}
              favoritesCount={business._count?.favorites || 0}
              size="md"
              variant="default"
              showCount={true}
            />
          </div>
        )}
      </div>

      {/* Photo */}
      {business.photos.length > 0 && !compactMode && (
        <div className="w-full h-48 relative">
          <Image
            src={business.photos[0].url}
            alt={business.name}
            fill
            className="object-cover"
            priority={false}
          />
          {/* –ì—Ä–∞–¥–∏–µ–Ω—Ç –¥–ª—è –ª—É—á—à–µ–π —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏ —Ç–µ–∫—Å—Ç–∞ */}
          <div className="absolute inset-0 bg-gradient-to-t from-black/20 to-transparent" />
        </div>
      )}

      {/* Business info */}
      <div className="p-4">
        {/* Added to favorites date */}
        {showAddedDate && addedDate && (
          <div className="flex items-center gap-1 text-xs text-gray-500 mb-2">
            <Clock className="w-3 h-3" />
            –î–æ–±–∞–≤–ª–µ–Ω–æ {formatDate(addedDate)}
          </div>
        )}

        <div className="flex gap-3">
          {/* Compact photo */}
          {business.photos.length > 0 && compactMode && (
            <div className="w-16 h-16 relative flex-shrink-0 rounded-lg overflow-hidden">
              <Image
                src={business.photos[0].url}
                alt={business.name}
                fill
                className="object-cover"
                priority={false}
              />
            </div>
          )}

          <div className="flex-1 min-w-0">
            <h3 className={`font-bold text-gray-900 mb-1 ${compactMode ? 'text-base' : 'text-lg'} line-clamp-2`}>
              {business.name}
            </h3>
            
            <p className="flex items-center text-gray-600 mb-2">
              <span className="mr-2 text-lg">{business.category.icon}</span>
              <span className={compactMode ? 'text-sm' : ''}>{business.category.name}</span>
            </p>

            {/* Rating */}
            {business.rating > 0 && (
              <div className="flex items-center mb-2">
                <div className="flex items-center text-yellow-500 mr-2">
                  <Star className="w-4 h-4 mr-1 fill-current" />
                  {formatRating(business.rating)}
                </div>
                <span className="text-sm text-gray-500">
                  ({business._count?.reviews || 0} –æ—Ç–∑—ã–≤–æ–≤)
                </span>
              </div>
            )}

            {/* Address + Distance */}
            <div className="flex items-start mb-3">
              <MapPin className="h-4 w-4 mr-2 flex-shrink-0 text-gray-400 mt-0.5" />
              <div className="flex-1 min-w-0">
                <div className={`text-gray-700 ${compactMode ? 'text-sm' : ''} line-clamp-2`}>
                  {business.address}, {business.city.name}
                </div>
                {business.distance !== undefined && (
                  <div className="text-sm text-blue-600 font-medium mt-1">
                    üìç {business.distance < 1 
                      ? `${Math.round(business.distance * 1000)} –º` 
                      : `${business.distance.toFixed(1)} –∫–º`
                    } –æ—Ç –≤–∞—Å
                  </div>
                )}
              </div>
            </div>
          </div>
        </div>

        {/* Description (—Ç–æ–ª—å–∫–æ –¥–ª—è full mode) */}
        {business.description && !compactMode && (
          <p className="text-sm text-gray-600 mb-3 line-clamp-2">
            {business.description}
          </p>
        )}

        {/* Features */}
        <div className="flex flex-wrap gap-2">
          {business.languages.includes('ru') && (
            <span className="bg-blue-100 text-blue-800 px-2 py-1 rounded-full text-xs font-medium">
              üá∑üá∫ –†—É—Å—Å–∫–∏–π —è–∑—ã–∫
            </span>
          )}
          {business.hasParking && (
            <span className="bg-gray-100 text-gray-700 px-2 py-1 rounded-full text-xs font-medium">
              üÖøÔ∏è –ü–∞—Ä–∫–æ–≤–∫–∞
            </span>
          )}
          {business.premiumTier !== 'FREE' && (
            <span className="bg-yellow-100 text-yellow-800 px-2 py-1 rounded-full text-xs font-medium">
              ‚≠ê –ü—Ä–µ–º–∏—É–º
            </span>
          )}
        </div>

        {/* ‚úÖ –£–±—Ä–∞–ª–∏ –∫–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π - –≤—Å—è –∫–∞—Ä—Ç–æ—á–∫–∞ —Ç–µ–ø–µ—Ä—å –∫–ª–∏–∫–∞–±–µ–ª—å–Ω–∞ */}
      </div>
    </div>
  );
}
