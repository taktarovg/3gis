// src/components/providers/TelegramProvider.tsx
'use client';

import { createContext, useContext, useEffect, useState, type PropsWithChildren } from 'react';
import { init } from '@telegram-apps/sdk-react';
import type { TelegramUser, TelegramContextValue, TelegramWebApp, LaunchParams } from '@/types/telegram';

const TelegramContext = createContext<TelegramContextValue>({
  isReady: false,
  user: null,
  isAuthenticated: false,
  isTelegramEnvironment: false,
  error: null,
  launchParams: null,
  webApp: null,
  sdkVersion: '3.x'
});

/**
 * ‚úÖ –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï v10: –£—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –æ—à–∏–±–∫–∏ "Event handlers cannot be passed to Client Component props"
 * 
 * –û–°–ù–û–í–ù–´–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:
 * 1. ‚ùå –ù–ï –∏—Å–ø–æ–ª—å–∑—É–µ–º useLaunchParams (–Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç SSR –≤ SDK v3.x)
 * 2. ‚úÖ –°–æ–±—Å—Ç–≤–µ–Ω–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ –Ω–∞—Ç–∏–≤–Ω—ã–µ Telegram API
 * 3. ‚úÖ –ü–æ–ª–Ω–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å Next.js 15.3.3 SSR/Client –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏
 * 4. ‚úÖ –£—Å—Ç—Ä–∞–Ω–µ–Ω—ã –≤—Å–µ event handlers –≤ props –º–µ–∂–¥—É Server/Client –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏
 * 
 * –ò–°–¢–û–ß–ù–ò–ö –ü–†–û–ë–õ–ï–ú–´:
 * - useLaunchParams –≤ SDK v3.x –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç SSR –ø–∞—Ä–∞–º–µ—Ç—Ä
 * - –í—ã–∑—ã–≤–∞–µ—Ç –æ—à–∏–±–∫—É –ø—Ä–∏ Server-Side Rendering –≤ Next.js 15.3.3
 * - GitHub Issue: https://github.com/Telegram-Mini-Apps/telegram-apps/issues/347
 */
function TelegramSDKWrapper({ children }: PropsWithChildren) {
  const [state, setState] = useState<TelegramContextValue>({
    isReady: false,
    user: null,
    isAuthenticated: false,
    isTelegramEnvironment: false,
    error: null,
    launchParams: null,
    webApp: null,
    sdkVersion: '3.10.1'
  });

  // ‚úÖ –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ù–ï –∏—Å–ø–æ–ª—å–∑—É–µ–º useLaunchParams - –∑–∞–º–µ–Ω—è–µ–º –Ω–∞ –±–µ–∑–æ–ø–∞—Å–Ω—É—é —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é
  useEffect(() => {
    const initializeTelegramData = async () => {
      try {
        console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram –¥–∞–Ω–Ω—ã—Ö –ë–ï–ó useLaunchParams (v10)...');
        
        let user: TelegramUser | null = null;
        let isTelegramEnv = false;
        let webApp: TelegramWebApp | undefined = undefined;
        let launchParams: LaunchParams | null = null;

        // ‚úÖ –ë–ï–ó–û–ü–ê–°–ù–´–ô –ú–ï–¢–û–î 1: –ü—Ä—è–º–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–∞—Ç–∏–≤–Ω—ã—Ö Telegram API
        if (typeof window !== 'undefined') {
          const globalWebApp = (window as any)?.Telegram?.WebApp;
          
          if (globalWebApp) {
            webApp = globalWebApp;
            isTelegramEnv = true;
            
            console.log('üì± WebApp –æ–±–Ω–∞—Ä—É–∂–µ–Ω:', {
              version: globalWebApp.version,
              platform: globalWebApp.platform,
              hasInitData: !!globalWebApp.initData
            });

            // ‚úÖ –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ initDataUnsafe
            if (globalWebApp.initDataUnsafe?.user) {
              const globalUser = globalWebApp.initDataUnsafe.user;
              
              user = {
                id: globalUser.id,
                first_name: globalUser.first_name || '',
                last_name: globalUser.last_name || undefined,
                username: globalUser.username || undefined,
                language_code: globalUser.language_code || undefined,
                is_premium: globalUser.is_premium || false,
                allows_write_to_pm: globalUser.allows_write_to_pm || false,
                photo_url: globalUser.photo_url || undefined
              };
              
              console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–∑ Telegram WebApp:', user.first_name);
            }

            // ‚úÖ –ë–ï–ó–û–ü–ê–°–ù–û–ï –ø–æ–ª—É—á–µ–Ω–∏–µ launch –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ë–ï–ó SDK —Ö—É–∫–∞
            try {
              // –ú–µ—Ç–æ–¥ 1: –ò–∑ URL –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ (–≤—Å–µ–≥–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–æ)
              const urlParams = new URLSearchParams(window.location.search);
              const urlStartParam = urlParams.get('startapp') || 
                                   urlParams.get('start') || 
                                   urlParams.get('startParam');

              // –ú–µ—Ç–æ–¥ 2: –ò–∑ WebApp.initDataUnsafe (–µ—Å–ª–∏ –µ—Å—Ç—å)
              const webAppStartParam = globalWebApp.initDataUnsafe?.start_param;

              const actualStartParam = urlStartParam || webAppStartParam;

              if (actualStartParam) {
                launchParams = {
                  startParam: actualStartParam,
                  tgWebAppStartParam: actualStartParam,
                  platform: globalWebApp.platform || 'unknown',
                  version: globalWebApp.version || '7.0'
                } as LaunchParams;
                console.log('üì± Launch params –ø–æ–ª—É—á–µ–Ω—ã:', launchParams);
              }

              // ‚úÖ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ WebApp
              if (globalWebApp.initDataUnsafe) {
                launchParams = {
                  ...launchParams,
                  tgWebAppData: globalWebApp.initDataUnsafe,
                  hash: globalWebApp.initDataUnsafe.hash,
                  queryId: globalWebApp.initDataUnsafe.query_id
                } as LaunchParams;
              }

            } catch (paramError) {
              console.log('‚ÑπÔ∏è Launch params –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã:', paramError);
            }
          } else {
            console.log('‚ÑπÔ∏è Telegram WebApp API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω - –≤–æ–∑–º–æ–∂–Ω–æ –æ–±—ã—á–Ω—ã–π –±—Ä–∞—É–∑–µ—Ä');
          }
        }

        // ‚úÖ –ë–ï–ó–û–ü–ê–°–ù–´–ô –ú–ï–¢–û–î 2: –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ä–µ–¥—ã –±–µ–∑ SDK
        if (typeof window !== 'undefined') {
          const userAgent = navigator.userAgent;
          const hasTelegramUA = userAgent.includes('TelegramDesktop') ||
                               userAgent.includes('Telegram Desktop') ||
                               userAgent.includes('Telegram/') ||
                               userAgent.includes('TelegramBot') ||
                               userAgent.includes('TelegramWebView');

          if (hasTelegramUA || webApp) {
            isTelegramEnv = true;
            console.log('‚úÖ Telegram —Å—Ä–µ–¥–∞ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —á–µ—Ä–µ–∑:', webApp ? 'WebApp API' : 'User Agent');
          }
        }

        // ‚úÖ Development fallback (—Ç–æ–ª—å–∫–æ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)
        if (!user && process.env.NODE_ENV === 'development') {
          console.log('üîß Development mode: —Å–æ–∑–¥–∞–µ–º mock –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
          user = {
            id: 123456789,
            first_name: 'Dev',
            last_name: 'User',
            username: 'dev_user',
            language_code: 'ru',
            is_premium: false,
            allows_write_to_pm: true
          };
          isTelegramEnv = true;
          
          // Mock launch params –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
          if (!launchParams) {
            const urlParams = new URLSearchParams(window.location.search);
            const testStartParam = urlParams.get('startapp') || 'test_param';
            launchParams = {
              startParam: testStartParam,
              tgWebAppStartParam: testStartParam,
              platform: 'web',
              version: '7.0'
            } as LaunchParams;
          }
        }

        // ‚úÖ –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
        setState({
          isReady: true,
          user,
          isAuthenticated: !!user,
          isTelegramEnvironment: isTelegramEnv,
          error: null, // –ù–µ—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫
          launchParams,
          webApp: webApp || null,
          sdkVersion: '3.10.1-fixed'
        });

        console.log('üìä Telegram Provider –≥–æ—Ç–æ–≤ (v10 –ò–°–ü–†–ê–í–õ–ï–ù–û):', {
          hasUser: !!user,
          isTelegramEnv,
          launchParamsAvailable: !!launchParams,
          webAppAvailable: !!webApp,
          startParam: launchParams?.startParam || 'none'
        });

      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Telegram –¥–∞–Ω–Ω—ã—Ö:', error);
        setState(prev => ({
          ...prev,
          isReady: true,
          error: error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ SDK',
          isTelegramEnvironment: false
        }));
      }
    };

    // –ó–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ Telegram WebApp
    const timeoutId = setTimeout(initializeTelegramData, 200);
    return () => clearTimeout(timeoutId);
  }, []); // –ü—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π - –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑

  return (
    <TelegramContext.Provider value={state}>
      {children}
    </TelegramContext.Provider>
  );
}

/**
 * ‚úÖ –ì–õ–ê–í–ù–´–ô TelegramProvider —Å –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–µ–π SDK v3.x
 */
export function TelegramProvider({ children }: PropsWithChildren) {
  const [isSDKInitialized, setIsSDKInitialized] = useState(false);
  const [initError, setInitError] = useState<string | null>(null);

  useEffect(() => {
    if (typeof window === 'undefined') return;

    const initializeSDK = async () => {
      try {
        console.log('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑–æ–≤–æ–≥–æ SDK v3.x (v10 –ò–°–ü–†–ê–í–õ–ï–ù–û)...');
        
        // ‚úÖ –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è SDK v3.x
        // –í SDK v3.x —Ñ—É–Ω–∫—Ü–∏—è init() –Ω–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        init(); // –°–æ–≥–ª–∞—Å–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ v3.x
        console.log('‚úÖ SDK v3.x —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        
        setIsSDKInitialized(true);
      } catch (error) {
        const errorMessage = error instanceof Error ? error.message : String(error);
        
        // ‚úÖ –ù–µ –±–ª–æ–∫–∏—Ä—É–µ–º —Ä–∞–±–æ—Ç—É –∏–∑-–∑–∞ –æ—à–∏–±–æ–∫ SDK - –º–Ω–æ–≥–∏–µ –æ—à–∏–±–∫–∏ –Ω–æ—Ä–º–∞–ª—å–Ω—ã
        console.log('‚ÑπÔ∏è SDK init message (–º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–æ—Ä–º–∞–ª—å–Ω–æ):', errorMessage);
        setIsSDKInitialized(true); // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ
        
        // –¢–æ–ª—å–∫–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        if (errorMessage.includes('critical') || errorMessage.includes('fatal')) {
          setInitError(errorMessage);
        }
      }
    };

    // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
    const timeoutId = setTimeout(initializeSDK, 100);
    return () => clearTimeout(timeoutId);
  }, []);

  // Loading —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  if (!isSDKInitialized) {
    return (
      <div className="min-h-screen flex items-center justify-center bg-gray-50">
        <div className="text-center">
          <div className="w-16 h-16 mx-auto mb-4 bg-blue-500 rounded-full flex items-center justify-center animate-pulse">
            <span className="text-xl font-bold text-white">3GIS</span>
          </div>
          <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-4"></div>
          <p className="text-gray-700 font-medium">–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram v10...</p>
          <p className="text-xs text-gray-500 mt-2">–ò–°–ü–†–ê–í–õ–ï–ù–û: SSR —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å</p>
        </div>
      </div>
    );
  }

  // Critical error —Å–æ—Å—Ç–æ—è–Ω–∏–µ (–æ—á–µ–Ω—å —Ä–µ–¥–∫–æ –≤ production)
  if (initError) {
    return (
      <div className="min-h-screen flex items-center justify-center bg-red-50">
        <div className="text-center max-w-md p-6 bg-white rounded-lg shadow-lg">
          <div className="text-red-500 text-2xl mb-4">‚ö†Ô∏è</div>
          <h3 className="text-lg font-semibold text-red-800 mb-2">–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ SDK</h3>
          <p className="text-sm text-red-600 mb-4">{initError}</p>
          <button 
            onClick={() => window.location.reload()}
            className="px-4 py-2 bg-red-500 text-white rounded-lg hover:bg-red-600 transition-colors"
          >
            –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
          </button>
        </div>
      </div>
    );
  }

  return (
    <TelegramSDKWrapper>
      {children}
    </TelegramSDKWrapper>
  );
}

export function useTelegram() {
  const context = useContext(TelegramContext);
  if (!context) {
    throw new Error('useTelegram must be used within TelegramProvider');
  }
  return context;
}

/**
 * ‚úÖ Debug –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è development
 */
export function TelegramDebugStatus() {
  const { isReady, user, isTelegramEnvironment, error, sdkVersion, launchParams } = useTelegram();
  
  if (process.env.NODE_ENV !== 'development') {
    return null;
  }
  
  return (
    <div className="fixed bottom-4 right-4 z-50 max-w-xs">
      <details className="bg-black/80 text-white text-xs p-3 rounded-lg backdrop-blur-sm">
        <summary className="cursor-pointer font-medium mb-2">
          üîß Telegram Debug v{sdkVersion} FIXED v10
        </summary>
        <div className="space-y-1 mt-2">
          <div>Ready: {isReady ? '‚úÖ' : '‚ùå'}</div>
          <div>Environment: {isTelegramEnvironment ? 'üì± Telegram' : 'üåê Browser'}</div>
          <div>User: {user ? `${user.first_name} (${user.id})` : 'None'}</div>
          <div>Launch Params: {launchParams ? '‚úÖ' : '‚ùå'}</div>
          <div>Start Param: {launchParams?.startParam || 'None'}</div>
          <div className="text-green-300">‚úÖ SSR Compatible</div>
          <div className="text-green-300">‚úÖ No useLaunchParams</div>
          {error && <div className="text-yellow-300">Info: {error.substring(0, 50)}...</div>}
        </div>
      </details>
    </div>
  );
}