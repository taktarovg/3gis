// src/components/providers/TelegramProvider.tsx
'use client';

import { createContext, useContext, useEffect, useState, type PropsWithChildren } from 'react';
import { init, useLaunchParams } from '@telegram-apps/sdk-react';
import type { TelegramUser, TelegramContextValue, TelegramWebApp } from '@/types/telegram';

const TelegramContext = createContext<TelegramContextValue>({
  isReady: false,
  user: null,
  isAuthenticated: false,
  isTelegramEnvironment: false,
  error: null,
  launchParams: null,
  webApp: null, // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: null –≤–º–µ—Å—Ç–æ undefined —Å–æ–≥–ª–∞—Å–Ω–æ —Ç–∏–ø—É TelegramContextValue
  sdkVersion: '3.x'
});

/**
 * ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï 3: –ë–µ–∑—É—Å–ª–æ–≤–Ω—ã–π –≤—ã–∑–æ–≤ React Hooks
 * 
 * –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:
 * - useLaunchParams –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ë–ï–ó–£–°–õ–û–í–ù–û (–±–µ–∑ try/catch)
 * - –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–∞ –≤ useEffect
 * - –°–æ–±–ª—é–¥–µ–Ω–∏–µ Rules of Hooks - —Ö—É–∫–∏ –≤ –æ–¥–∏–Ω–∞–∫–æ–≤–æ–º –ø–æ—Ä—è–¥–∫–µ –ø—Ä–∏ –∫–∞–∂–¥–æ–º —Ä–µ–Ω–¥–µ—Ä–µ
 */
function TelegramSDKWrapper({ children }: PropsWithChildren) {
  const [state, setState] = useState<TelegramContextValue>({
    isReady: false,
    user: null,
    isAuthenticated: false,
    isTelegramEnvironment: false,
    error: null,
    launchParams: null,
    webApp: null, // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: null –≤–º–µ—Å—Ç–æ undefined —Å–æ–≥–ª–∞—Å–Ω–æ —Ç–∏–ø—É TelegramContextValue
    sdkVersion: '3.10.1'
  });

  // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï SDK v3.x: –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ SSR —Ñ–ª–∞–≥–∞
  // –í SDK v3.x useLaunchParams(true) –¥–ª—è SSR —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å Next.js
  const launchParams: any = useLaunchParams(true); // ‚úÖ SSR —Ñ–ª–∞–≥ –¥–ª—è Next.js

  useEffect(() => {
    const initializeTelegramData = () => {
      let launchParamsError: string | null = null;
      let actualLaunchParams: any = null; // ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º any –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ SDK v3.x

      try {
        // ‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ö—É–∫–∞ –∑–¥–µ—Å—å, –≤ useEffect
        if (launchParams) {
          actualLaunchParams = launchParams;
          console.log('üì± LaunchParams –ø–æ–ª—É—á–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ');
        }
      } catch (error) {
        console.log('‚ÑπÔ∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ LaunchParams:', error);
        launchParamsError = error instanceof Error ? error.message : 'Unknown error';
      }

      try {
        console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram SDK v3.x –¥–∞–Ω–Ω—ã—Ö...');
        
        let user: TelegramUser | null = null;
        let isTelegramEnv = false;
        let webApp: TelegramWebApp | undefined = undefined;

        // ‚úÖ –ú–µ—Ç–æ–¥ 1: –ü—Ä–æ–≤–µ—Ä—è–µ–º launch params (SDK v3.x)
        if (actualLaunchParams && typeof actualLaunchParams === 'object') {
          console.log('üì± –î–∞–Ω–Ω—ã–µ –∏–∑ launch params:', actualLaunchParams);
          
          // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ tgWebAppData –≤ SDK v3.x
          let telegramUser = null;
          
          // ‚úÖ –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Ç–∏–ø–∏–∑–∞—Ü–∏–µ–π –¥–ª—è SDK v3.x
          const webAppData = actualLaunchParams.tgWebAppData as any; // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ò—Å–ø–æ–ª—å–∑—É–µ–º any –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
          if (webAppData && typeof webAppData === 'object' && 'user' in webAppData) {
            telegramUser = webAppData.user;
          }
          
          // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± - –ø—Ä–æ–≤–µ—Ä—è–µ–º –¥—Ä—É–≥–∏–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø—É—Ç–∏ –∫ –¥–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ SDK v3.x
          if (!telegramUser && actualLaunchParams.tgWebAppData) {
            // –í SDK v3.x –¥–∞–Ω–Ω—ã–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ tgWebAppData, –∞ –Ω–µ –≤ initData
            const tgWebAppData = actualLaunchParams.tgWebAppData;
            if (tgWebAppData && typeof tgWebAppData === 'object' && 'user' in tgWebAppData) {
              telegramUser = tgWebAppData.user;
            }
          }
          
          if (telegramUser) {
            user = {
              id: telegramUser.id,
              first_name: telegramUser.first_name || '',
              last_name: telegramUser.last_name || undefined,
              username: telegramUser.username || undefined,
              language_code: telegramUser.language_code || undefined,
              is_premium: telegramUser.is_premium || false,
              allows_write_to_pm: telegramUser.allows_write_to_pm || false,
              photo_url: telegramUser.photo_url || undefined
            };
            
            isTelegramEnv = true;
            console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–∑ launch params:', user.first_name);
          }
        }

        // ‚úÖ –ú–µ—Ç–æ–¥ 2: Fallback –∫ –≥–ª–æ–±–∞–ª—å–Ω–æ–º—É Telegram API
        if (typeof window !== 'undefined') {
          const globalWebApp = (window as any)?.Telegram?.WebApp;
          if (globalWebApp) {
            webApp = globalWebApp;
            
            // –ï—Å–ª–∏ –µ—â–µ –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–∑ WebApp
            if (!user && globalWebApp.initDataUnsafe?.user) {
              const globalUser = globalWebApp.initDataUnsafe.user;
              
              user = {
                id: globalUser.id,
                first_name: globalUser.first_name || '',
                last_name: globalUser.last_name || undefined,
                username: globalUser.username || undefined,
                language_code: globalUser.language_code || undefined,
                is_premium: globalUser.is_premium || false,
                allows_write_to_pm: globalUser.allows_write_to_pm || false,
                photo_url: globalUser.photo_url || undefined
              };
              
              isTelegramEnv = true;
              console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–∑ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ Telegram API:', user.first_name);
            }
            
            // –ï—Å–ª–∏ WebApp API –¥–æ—Å—Ç—É–ø–µ–Ω, –∑–Ω–∞—á–∏—Ç –º—ã –≤ Telegram —Å—Ä–µ–¥–µ
            if (!isTelegramEnv && globalWebApp.version) {
              isTelegramEnv = true;
              console.log('‚úÖ –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ Telegram —Å—Ä–µ–¥–∞ —á–µ—Ä–µ–∑ WebApp API');
            }
          }
        }

        // ‚úÖ Development fallback
        if (!user && process.env.NODE_ENV === 'development') {
          console.log('üîß Development mode: —Å–æ–∑–¥–∞–µ–º mock –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
          user = {
            id: 123456789,
            first_name: 'Dev',
            last_name: 'User',
            username: 'dev_user',
            language_code: 'ru',
            is_premium: false,
            allows_write_to_pm: true
          };
          isTelegramEnv = true;
        }

        // ‚úÖ –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
        setState({
          isReady: true,
          user,
          isAuthenticated: !!user,
          isTelegramEnvironment: isTelegramEnv,
          error: launchParamsError, // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—à–∏–±–∫–∏ –Ω–æ –Ω–µ –±–ª–æ–∫–∏—Ä—É–µ–º
          launchParams: actualLaunchParams || null,
          webApp: webApp || null, // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: null –≤–º–µ—Å—Ç–æ undefined
          sdkVersion: '3.10.1'
        });

        console.log('üìä Telegram Provider –≥–æ—Ç–æ–≤:', {
          hasUser: !!user,
          isTelegramEnv,
          launchParamsAvailable: !!actualLaunchParams,
          webAppAvailable: !!webApp,
          error: launchParamsError
        });

      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Telegram –¥–∞–Ω–Ω—ã—Ö:', error);
        setState(prev => ({
          ...prev,
          isReady: true,
          error: error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ SDK',
          isTelegramEnvironment: false
        }));
      }
    };

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ Telegram
    initializeTelegramData();
  }, [launchParams]); // ‚úÖ launchParams –∫–∞–∫ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å

  return (
    <TelegramContext.Provider value={state}>
      {children}
    </TelegramContext.Provider>
  );
}

/**
 * ‚úÖ –ì–õ–ê–í–ù–´–ô TelegramProvider —Å –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–µ–π SDK v3.x
 */
export function TelegramProvider({ children }: PropsWithChildren) {
  const [isSDKInitialized, setIsSDKInitialized] = useState(false);
  const [initError, setInitError] = useState<string | null>(null);

  useEffect(() => {
    if (typeof window === 'undefined') return;

    const initializeSDK = async () => {
      try {
        console.log('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑–æ–≤–æ–≥–æ SDK v3.x...');
        
        // ‚úÖ –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è SDK v3.x
        // –í SDK v3.x —Ñ—É–Ω–∫—Ü–∏—è init() –Ω–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        init(); // –°–æ–≥–ª–∞—Å–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ v3.x
        console.log('‚úÖ SDK v3.x —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        
        setIsSDKInitialized(true);
      } catch (error) {
        const errorMessage = error instanceof Error ? error.message : String(error);
        
        // ‚úÖ –ù–µ –±–ª–æ–∫–∏—Ä—É–µ–º —Ä–∞–±–æ—Ç—É –∏–∑-–∑–∞ –æ—à–∏–±–æ–∫ SDK
        console.log('‚ÑπÔ∏è SDK init message (–º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–æ—Ä–º–∞–ª—å–Ω–æ):', errorMessage);
        setIsSDKInitialized(true); // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ
        
        // –¢–æ–ª—å–∫–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        if (errorMessage.includes('critical') || errorMessage.includes('fatal')) {
          setInitError(errorMessage);
        }
      }
    };

    // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
    const timeoutId = setTimeout(initializeSDK, 100);
    return () => clearTimeout(timeoutId);
  }, []);

  // Loading —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  if (!isSDKInitialized) {
    return (
      <div className="min-h-screen flex items-center justify-center bg-gray-50">
        <div className="text-center">
          <div className="w-16 h-16 mx-auto mb-4 bg-blue-500 rounded-full flex items-center justify-center animate-pulse">
            <span className="text-xl font-bold text-white">3GIS</span>
          </div>
          <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-4"></div>
          <p className="text-gray-700 font-medium">–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram...</p>
        </div>
      </div>
    );
  }

  // Critical error —Å–æ—Å—Ç–æ—è–Ω–∏–µ (–æ—á–µ–Ω—å —Ä–µ–¥–∫–æ –≤ production)
  if (initError) {
    return (
      <div className="min-h-screen flex items-center justify-center bg-red-50">
        <div className="text-center max-w-md p-6 bg-white rounded-lg shadow-lg">
          <div className="text-red-500 text-2xl mb-4">‚ö†Ô∏è</div>
          <h3 className="text-lg font-semibold text-red-800 mb-2">–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ SDK</h3>
          <p className="text-sm text-red-600 mb-4">{initError}</p>
          <button 
            onClick={() => window.location.reload()}
            className="px-4 py-2 bg-red-500 text-white rounded-lg hover:bg-red-600 transition-colors"
          >
            –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
          </button>
        </div>
      </div>
    );
  }

  return (
    <TelegramSDKWrapper>
      {children}
    </TelegramSDKWrapper>
  );
}

export function useTelegram() {
  const context = useContext(TelegramContext);
  if (!context) {
    throw new Error('useTelegram must be used within TelegramProvider');
  }
  return context;
}

/**
 * ‚úÖ Debug –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è development
 */
export function TelegramDebugStatus() {
  const { isReady, user, isTelegramEnvironment, error, sdkVersion, launchParams } = useTelegram();
  
  if (process.env.NODE_ENV !== 'development') {
    return null;
  }
  
  return (
    <div className="fixed bottom-4 right-4 z-50 max-w-xs">
      <details className="bg-black/80 text-white text-xs p-3 rounded-lg backdrop-blur-sm">
        <summary className="cursor-pointer font-medium mb-2">
          üîß Telegram Debug v{sdkVersion}
        </summary>
        <div className="space-y-1 mt-2">
          <div>Ready: {isReady ? '‚úÖ' : '‚ùå'}</div>
          <div>Environment: {isTelegramEnvironment ? 'üì± Telegram' : 'üåê Browser'}</div>
          <div>User: {user ? `${user.first_name} (${user.id})` : 'None'}</div>
          <div>Launch Params: {launchParams ? '‚úÖ' : '‚ùå'}</div>
          {error && <div className="text-yellow-300">Info: {error.substring(0, 50)}...</div>}
        </div>
      </details>
    </div>
  );
}
