// src/components/providers/TelegramProvider.tsx
'use client';

import { createContext, useContext, useEffect, useState, useCallback, type PropsWithChildren } from 'react';
import { useLaunchParams, useRawInitData, init } from '@telegram-apps/sdk-react';
import type { TelegramContextValue, TelegramUser } from '@/types/telegram';

const TelegramContext = createContext<TelegramContextValue>({
  isReady: false,
  user: null,
  isAuthenticated: false,
  isTelegramEnvironment: false,
  error: null,
  launchParams: null,
  rawInitData: null,
  sdkVersion: '3.x'
});

/**
 * ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–ê–Ø –†–ï–ê–õ–ò–ó–ê–¶–ò–Ø –¥–ª—è SDK v3.x
 * –û—Å–Ω–æ–≤–∞–Ω–æ –Ω–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏: https://docs.telegram-mini-apps.com/packages/telegram-apps-sdk-react/3-x
 */
function TelegramSDKInitializer({ children }: PropsWithChildren) {
  const [state, setState] = useState<TelegramContextValue>({
    isReady: false,
    user: null,
    isAuthenticated: false,
    isTelegramEnvironment: false,
    error: null,
    launchParams: null,
    rawInitData: null,
    sdkVersion: '3.10.1'
  });

  // ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û: –•—É–∫–∏ SDK v3.x —Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
  const launchParams = useLaunchParams(true); // SSR —Ñ–ª–∞–≥ –¥–ª—è Next.js
  const rawInitData = useRawInitData(); // –ë–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –≤ v3.x

  const initializeTelegramData = useCallback(() => {
    try {
      console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram SDK v3.x...');
      
      let user: TelegramUser | null = null;
      let isTelegramEnv = false;

      // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï #3: –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è —Ç–∏–ø–∏–∑–∞—Ü–∏—è –¥–ª—è SDK v3.x
      if (launchParams && typeof launchParams === 'object') {
        const params = launchParams as any; // –í—Ä–µ–º–µ–Ω–Ω–æ–µ –ø—Ä–∏–≤–µ–¥–µ–Ω–∏–µ —Ç–∏–ø–∞
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ SDK v3.x
        if (params.tgWebAppData?.user) {
          const telegramUser = params.tgWebAppData.user;
          
          user = {
            id: telegramUser.id,
            first_name: telegramUser.first_name || '',
            last_name: telegramUser.last_name || undefined,
            username: telegramUser.username || undefined,
            language_code: telegramUser.language_code || undefined,
            is_premium: telegramUser.is_premium || false,
            allows_write_to_pm: telegramUser.allows_write_to_pm || false,
            photo_url: telegramUser.photo_url || undefined
          };
          
          isTelegramEnv = true;
          console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–∑ SDK v3.x:', user.first_name);
        }
      }

      // ‚úÖ Fallback –¥–ª—è development/testing
      if (!user && process.env.NODE_ENV === 'development') {
        console.log('üîß Development mode: —Å–æ–∑–¥–∞–µ–º mock –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
        user = {
          id: 123456789,
          first_name: 'Dev',
          last_name: 'User',
          username: 'dev_user',
          language_code: 'ru',
          is_premium: false,
          allows_write_to_pm: true
        };
      }

      setState({
        isReady: true,
        user,
        isAuthenticated: !!user,
        isTelegramEnvironment: isTelegramEnv,
        error: null,
        launchParams,
        rawInitData,
        sdkVersion: '3.10.1'
      });

    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Telegram SDK:', error);
      setState(prev => ({
        ...prev,
        isReady: true,
        error: error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'
      }));
    }
  }, [launchParams, rawInitData]);

  useEffect(() => {
    if (typeof window !== 'undefined') {
      initializeTelegramData();
    }
  }, [initializeTelegramData]);

  return (
    <TelegramContext.Provider value={state}>
      {children}
    </TelegramContext.Provider>
  );
}

/**
 * ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û: –ì–ª–∞–≤–Ω—ã–π TelegramProvider –¥–ª—è SDK v3.x
 */
export function TelegramProvider({ children }: PropsWithChildren) {
  const [isSDKInitialized, setIsSDKInitialized] = useState(false);
  const [initError, setInitError] = useState<string | null>(null);

  useEffect(() => {
    if (typeof window === 'undefined') return;

    const initializeSDK = async () => {
      try {
        console.log('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑–æ–≤–æ–≥–æ SDK v3.x...');
        
        // ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û: init() –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –≤ SDK v3.x
        init();
        console.log('‚úÖ SDK v3.x –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        
        setIsSDKInitialized(true);
      } catch (error) {
        const errorMessage = error instanceof Error ? error.message : String(error);
        
        // –í development —Ä–µ–∂–∏–º–µ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –æ—à–∏–±–∫–∏ SDK –æ–∂–∏–¥–∞–µ–º—ã
        if (process.env.NODE_ENV === 'development') {
          console.log('‚ÑπÔ∏è SDK init warning (normal in development):', errorMessage);
          setIsSDKInitialized(true);
        } else {
          console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ SDK:', errorMessage);
          setInitError(errorMessage);
        }
      }
    };

    const timeoutId = setTimeout(initializeSDK, 100);
    return () => clearTimeout(timeoutId);
  }, []);

  // Loading —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  if (!isSDKInitialized) {
    return (
      <div className="min-h-screen flex items-center justify-center bg-gray-50">
        <div className="text-center">
          <div className="w-16 h-16 mx-auto mb-4 bg-blue-500 rounded-full flex items-center justify-center">
            <span className="text-xl font-bold text-white">3GIS</span>
          </div>
          <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-4"></div>
          <p className="text-gray-700 font-medium">–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è SDK v3.x...</p>
        </div>
      </div>
    );
  }

  // Error —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  if (initError) {
    return (
      <div className="min-h-screen flex items-center justify-center bg-red-50">
        <div className="text-center max-w-md p-6 bg-white rounded-lg shadow-lg">
          <div className="text-red-500 text-2xl mb-4">‚ö†Ô∏è</div>
          <h3 className="text-lg font-semibold text-red-800 mb-2">–û—à–∏–±–∫–∞ SDK</h3>
          <p className="text-sm text-red-600 mb-4">{initError}</p>
          <button 
            onClick={() => window.location.reload()}
            className="px-4 py-2 bg-red-500 text-white rounded-lg hover:bg-red-600"
          >
            –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å
          </button>
        </div>
      </div>
    );
  }

  return (
    <TelegramSDKInitializer>
      {children}
    </TelegramSDKInitializer>
  );
}

export function useTelegram() {
  const context = useContext(TelegramContext);
  if (!context) {
    throw new Error('useTelegram must be used within TelegramProvider');
  }
  return context;
}

/**
 * ‚úÖ Debug –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è development
 */
export function TelegramStatus() {
  const { isReady, user, isTelegramEnvironment, error, sdkVersion } = useTelegram();
  
  if (process.env.NODE_ENV !== 'development') {
    return null;
  }
  
  return (
    <div className="fixed bottom-4 right-4 z-50 max-w-xs">
      <details className="bg-black/80 text-white text-xs p-3 rounded-lg backdrop-blur-sm">
        <summary className="cursor-pointer font-medium mb-2">
          üîß Telegram Debug v{sdkVersion}
        </summary>
        <div className="space-y-1 mt-2">
          <div>Ready: {isReady ? '‚úÖ' : '‚ùå'}</div>
          <div>Environment: {isTelegramEnvironment ? 'üì± Telegram' : 'üåê Browser'}</div>
          <div>User: {user ? `${user.first_name} (${user.id})` : 'None'}</div>
          {error && <div className="text-red-300">Error: {error}</div>}
        </div>
      </details>
    </div>
  );
}