// src/components/providers/TelegramProvider.tsx
'use client';

import { createContext, useContext, useEffect, useState, type PropsWithChildren } from 'react';
import { EnvironmentDetector } from '@/components/environment/EnvironmentDetector';

// ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã —Å–æ–≥–ª–∞—Å–Ω–æ –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ SDK v3.x
// https://docs.telegram-mini-apps.com/packages/telegram-apps-sdk-react/3-x

interface TelegramContextValue {
  isReady: boolean;
  user: any;
  isAuthenticated: boolean;
  isTelegramEnvironment: boolean;
  error: string | null;
  initData: any;
}

const TelegramContext = createContext<TelegramContextValue>({
  isReady: false,
  user: null,
  isAuthenticated: false,
  isTelegramEnvironment: false,
  error: null,
  initData: null
});

/**
 * ‚úÖ –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram SDK v3.x —Å –¥–µ—Ç–µ–∫—Ü–∏–µ–π —Å—Ä–µ–¥—ã
 * –û—Å–Ω–æ–≤–∞–Ω–æ –Ω–∞ –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ @telegram-apps/sdk v3.10.1
 * –°–æ–≤–º–µ—Å—Ç–∏–º–æ —Å Next.js 15.3.3 –∏ –ø—Ä–∞–≤–∏–ª–∞–º–∏ React Hooks
 */
export function TelegramProvider({ children }: PropsWithChildren) {
  return (
    <EnvironmentDetector>
      <TelegramProviderInner>
        {children}
      </TelegramProviderInner>
    </EnvironmentDetector>
  );
}

function TelegramProviderInner({ children }: PropsWithChildren) {
  const [state, setState] = useState<TelegramContextValue>({
    isReady: false,
    user: null,
    isAuthenticated: false,
    isTelegramEnvironment: false,
    error: null,
    initData: null
  });

  useEffect(() => {
    const initializeTelegramSDK = async () => {
      try {
        console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram SDK v3.x...');
        
        // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É SDK v3.x –∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
        // –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: https://docs.telegram-mini-apps.com/platform/init-data
        const { retrieveLaunchParams } = await import('@telegram-apps/sdk');
        
        // ‚úÖ –ü–æ–ª—É—á–∞–µ–º launch –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–æ–≥–ª–∞—Å–Ω–æ SDK v3.x –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
        const launchParams = retrieveLaunchParams();
        console.log('‚úÖ Launch params retrieved (SDK v3.x):', launchParams);
        
        // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –í SDK v3.x –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞: { initDataRaw, initData }
        // –ù–ï tgWebAppData - —ç—Ç–æ —Ç–æ–ª—å–∫–æ –≤ React hooks!
        let user = null;
        let initDataRaw = null;
        let parsedInitData = null;

        // –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å–æ–≥–ª–∞—Å–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ SDK v3.x
        if (launchParams.initData && launchParams.initData.user) {
          user = launchParams.initData.user;
          initDataRaw = launchParams.initDataRaw;
          parsedInitData = launchParams.initData;
          
          console.log('‚úÖ Extracted user data (initData):', { 
            hasUser: !!user, 
            userId: user?.id,
            userName: user?.first_name || user?.firstName,
            structure: 'initData'
          });
        }
        // Fallback –¥–ª—è development –∏–ª–∏ –¥—Ä—É–≥–∏—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä
        else if (launchParams.initDataRaw) {
          initDataRaw = launchParams.initDataRaw;
          console.log('‚ö†Ô∏è Only raw initData available, no parsed user');
        }
        else {
          console.log('‚ö†Ô∏è No Telegram initData found - –≤–æ–∑–º–æ–∂–Ω–æ –Ω–µ –≤ Telegram —Å—Ä–µ–¥–µ');
        }
        
        setState({
          isReady: true,
          user: user || null,
          isAuthenticated: !!user,
          isTelegramEnvironment: true,
          error: null,
          initData: {
            raw: initDataRaw,
            parsed: parsedInitData
          }
        });

        // ‚úÖ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ WebApp —Å–æ–≥–ª–∞—Å–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
        const tg = (window as any)?.Telegram?.WebApp;
        if (tg) {
          console.log('üéØ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram WebApp...');
          
          // –ë–∞–∑–æ–≤–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
          tg.ready();
          tg.expand();
          
          // ‚úÖ –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
          const safeFeatures = [
            { name: 'disableVerticalSwipes', call: () => tg.disableVerticalSwipes() },
            { name: 'setHeaderColor', call: () => tg.setHeaderColor('#ffffff') },
            { name: 'requestFullscreen', call: () => tg.requestFullscreen && tg.requestFullscreen() },
            { name: 'setBottomBarColor', call: () => tg.setBottomBarColor && tg.setBottomBarColor('#ffffff') }
          ];

          safeFeatures.forEach(({ name, call }) => {
            try {
              call();
              console.log(`‚úÖ ${name} –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ`);
            } catch (err) {
              console.warn(`‚ö†Ô∏è ${name} –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ:`, err);
            }
          });
        }

        console.log('‚úÖ Telegram SDK v3.x —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Telegram SDK:', error);
        
        // ‚úÖ –í development —Ä–µ–∂–∏–º–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º fallback
        if (process.env.NODE_ENV === 'development') {
          console.log('üîß Development mode: –ò—Å–ø–æ–ª—å–∑—É–µ–º mock –¥–∞–Ω–Ω—ã–µ');
          
          setState({
            isReady: true,
            user: {
              id: 123456789,
              first_name: 'Test',
              last_name: 'User',
              username: 'testuser'
            },
            isAuthenticated: true,
            isTelegramEnvironment: false, // –£–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ —ç—Ç–æ –Ω–µ —Ä–µ–∞–ª—å–Ω—ã–π Telegram
            error: null,
            initData: {
              raw: 'mock_init_data',
              parsed: {
                user: {
                  id: 123456789,
                  first_name: 'Test',
                  last_name: 'User',
                  username: 'testuser'
                },
                auth_date: Math.floor(Date.now() / 1000),
                hash: 'mock_hash'
              }
            }
          });
        } else {
          setState(prev => ({
            ...prev,
            isReady: true,
            error: '–ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å Telegram SDK. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–∫—Ä—ã—Ç–æ —á–µ—Ä–µ–∑ Telegram.'
          }));
        }
      }
    };

    // ‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ
    if (typeof window !== 'undefined') {
      // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ Telegram WebApp
      const timeoutId = setTimeout(initializeTelegramSDK, 200);
      
      return () => clearTimeout(timeoutId);
    }
  }, []);

  // ‚úÖ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –≤–æ –≤—Ä–µ–º—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
  if (!state.isReady) {
    return (
      <div className="min-h-screen flex items-center justify-center bg-gray-50">
        <div className="text-center">
          <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-4"></div>
          <p className="text-gray-600">–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram SDK...</p>
        </div>
      </div>
    );
  }

  return (
    <TelegramContext.Provider value={state}>
      {children}
    </TelegramContext.Provider>
  );
}

export function useTelegram() {
  const context = useContext(TelegramContext);
  if (!context) {
    throw new Error('useTelegram must be used within TelegramProvider');
  }
  return context;
}

/**
 * ‚úÖ –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ Telegram (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ development —Ä–µ–∂–∏–º–µ
 */
export function TelegramStatus() {
  const { isReady, user, isTelegramEnvironment, error } = useTelegram();
  
  // ‚úÖ –ù–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ
  if (process.env.NODE_ENV === 'production') {
    return null;
  }
  
  if (error) {
    return (
      <div className="fixed bottom-4 left-4 bg-red-100 border border-red-400 text-red-700 px-3 py-2 rounded text-sm max-w-xs z-50">
        <strong className="font-bold">–û—à–∏–±–∫–∞ SDK:</strong>
        <span className="block text-xs mt-1">{error}</span>
      </div>
    );
  }
  
  if (!isReady) {
    return (
      <div className="fixed bottom-4 left-4 bg-yellow-100 border border-yellow-400 text-yellow-700 px-3 py-2 rounded text-sm z-50">
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è SDK...
      </div>
    );
  }
  
  return (
    <div className={`fixed bottom-4 left-4 px-3 py-2 rounded text-sm max-w-xs z-50 border ${
      isTelegramEnvironment 
        ? 'bg-green-100 border-green-400 text-green-700' 
        : 'bg-blue-100 border-blue-400 text-blue-700'
    }`}>
      <strong className="font-bold">
        {isTelegramEnvironment ? '‚úÖ Telegram SDK' : 'üñ•Ô∏è Browser Mode'}
      </strong>
      {user && (
        <span className="block text-xs mt-1">
          {user.first_name || user.firstName} {user.last_name || user.lastName}
          {(user.username) && ` (@${user.username})`}
        </span>
      )}
    </div>
  );
}

/**
 * ‚úÖ –•—É–∫ –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –∫–æ–¥–æ–º
 */
export function useTelegramEnvironment() {
  const { isTelegramEnvironment } = useTelegram();
  
  return {
    isTelegramEnvironment,
    isWebApp: isTelegramEnvironment,
    isDevelopment: process.env.NODE_ENV === 'development'
  };
}

/**
 * ‚úÖ –•—É–∫ –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –∫–æ–¥–æ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
 */
export function useTelegramAuth() {
  const { user, isAuthenticated, error, isReady, initData } = useTelegram();
  
  return {
    user,
    isAuthenticated,
    error,
    isLoading: !isReady,
    initData: initData?.raw,
    webAppData: initData?.parsed
  };
}